{"version":3,"sources":["webpack:///2.8e29088beb687e6f54b5.js","webpack:///./~/socket.io-client/~/debug/browser.js?9857","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/lib/browser.js?459b","webpack:///./~/socket.io-client/~/engine.io-client/~/component-inherit/index.js?a143","webpack:///./~/lodash/lodash.js?03cc","webpack:///./~/socket.io-client/~/engine.io-client/lib/transport.js?e5ed","webpack:///./~/socket.io-client/~/engine.io-client/lib/xmlhttprequest.js?ddeb","webpack:///./~/socket.io-client/~/engine.io-client/~/component-emitter/index.js?a5b4","webpack:///./~/socket.io-client/~/engine.io-client/~/parseqs/index.js?b6b3","webpack:///./~/socket.io-client/~/socket.io-parser/index.js?6659","webpack:///./~/socket.io-client/lib/manager.js?0a19","webpack:///./~/socket.io-client/lib/on.js?4003","webpack:///./~/socket.io-client/lib/socket.js?a404","webpack:///./~/socket.io-client/~/component-bind/index.js?8ae0","webpack:///./~/socket.io-client/~/component-emitter/index.js?3eb9","webpack:///./~/socket.io-client/~/engine.io-client/lib/transports/index.js?381e","webpack:///./~/socket.io-client/~/engine.io-client/lib/transports/polling.js?1450","webpack:///./~/socket.io-client/~/engine.io-client/~/yeast/index.js?38f2","webpack:///./~/socket.io-client/~/indexof/index.js?7b35","webpack:///./~/socket.io-client/~/parseuri/index.js?2f8f","webpack:///./~/socket.io-client/~/socket.io-parser/is-buffer.js?0ca5","webpack:///./~/socket.io-client/~/socket.io-parser/~/isarray/index.js?5ea5","webpack:///./src/modules/quickquiz.js?6b99","webpack:///./~/chart.js/~/chartjs-color/index.js?8a6c","webpack:///./~/chart.js/~/chartjs-color/~/chartjs-color-string/color-string.js?9134","webpack:///./~/chart.js/~/chartjs-color/~/chartjs-color-string/~/color-name/index.js?1975","webpack:///./~/chart.js/~/chartjs-color/~/color-convert/conversions.js?5816","webpack:///./~/chart.js/~/chartjs-color/~/color-convert/index.js?f9cd","webpack:///./~/chart.js/src/chart.js?462d","webpack:///./~/chart.js/src/charts/Chart.Bar.js?be80","webpack:///./~/chart.js/src/charts/Chart.Bubble.js?d5af","webpack:///./~/chart.js/src/charts/Chart.Doughnut.js?2f08","webpack:///./~/chart.js/src/charts/Chart.Line.js?c913","webpack:///./~/chart.js/src/charts/Chart.PolarArea.js?26d1","webpack:///./~/chart.js/src/charts/Chart.Radar.js?f441","webpack:///./~/chart.js/src/charts/Chart.Scatter.js?9698","webpack:///./~/chart.js/src/controllers/controller.bar.js?109d","webpack:///./~/chart.js/src/controllers/controller.bubble.js?c1c2","webpack:///./~/chart.js/src/controllers/controller.doughnut.js?e144","webpack:///./~/chart.js/src/controllers/controller.line.js?8ad2","webpack:///./~/chart.js/src/controllers/controller.polarArea.js?7240","webpack:///./~/chart.js/src/controllers/controller.radar.js?1fd7","webpack:///./~/chart.js/src/core/core.animation.js?6da6","webpack:///./~/chart.js/src/core/core.controller.js?8f11","webpack:///./~/chart.js/src/core/core.datasetController.js?3cfb","webpack:///./~/chart.js/src/core/core.element.js?921b","webpack:///./~/chart.js/src/core/core.helpers.js?b72e","webpack:///./~/chart.js/src/core/core.js?5de4","webpack:///./~/chart.js/src/core/core.layoutService.js?5132","webpack:///./~/chart.js/src/core/core.legend.js?1c33","webpack:///./~/chart.js/src/core/core.plugin.js?815c","webpack:///./~/chart.js/src/core/core.scale.js?e592","webpack:///./~/chart.js/src/core/core.scaleService.js?478e","webpack:///./~/chart.js/src/core/core.title.js?53a3","webpack:///./~/chart.js/src/core/core.tooltip.js?484f","webpack:///./~/chart.js/src/elements/element.arc.js?5348","webpack:///./~/chart.js/src/elements/element.line.js?0739","webpack:///./~/chart.js/src/elements/element.point.js?5d09","webpack:///./~/chart.js/src/elements/element.rectangle.js?20fb","webpack:///./~/chart.js/src/scales/scale.category.js?ac38","webpack:///./~/chart.js/src/scales/scale.linear.js?85a5","webpack:///./~/chart.js/src/scales/scale.logarithmic.js?00a7","webpack:///./~/chart.js/src/scales/scale.radialLinear.js?fc0a","webpack:///./~/chart.js/src/scales/scale.time.js?d7ea","webpack:///./~/socket.io-client/lib/index.js?c306","webpack:///./~/socket.io-client/lib/url.js?5755","webpack:///./~/socket.io-client/~/backo2/index.js?2ffc","webpack:///./~/socket.io-client/~/debug/debug.js?e9ea","webpack:///./~/socket.io-client/~/debug/~/ms/index.js?5a03","webpack:///./~/socket.io-client/~/engine.io-client/index.js?ce20","webpack:///./~/socket.io-client/~/engine.io-client/lib/index.js?5ab3","webpack:///./~/socket.io-client/~/engine.io-client/lib/socket.js?5e31","webpack:///./~/socket.io-client/~/engine.io-client/lib/transports/polling-jsonp.js?5d10","webpack:///./~/socket.io-client/~/engine.io-client/lib/transports/polling-xhr.js?533a","webpack:///./~/socket.io-client/~/engine.io-client/lib/transports/websocket.js?49a1","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/lib/keys.js?7554","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/after/index.js?3d04","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/arraybuffer.slice/index.js?d1b4","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/base64-arraybuffer/lib/base64-arraybuffer.js?f2e1","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/blob/index.js?4de7","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/has-binary/index.js?d551","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/has-binary/~/isarray/index.js?9955","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/utf8/utf8.js?57e0","webpack:///./~/socket.io-client/~/engine.io-client/~/has-cors/index.js?2453","webpack:///./~/socket.io-client/~/engine.io-client/~/parsejson/index.js?388d","webpack:///./~/socket.io-client/~/has-binary/index.js?38d1","webpack:///./~/socket.io-client/~/has-binary/~/isarray/index.js?8725","webpack:///./~/socket.io-client/~/socket.io-parser/binary.js?842a","webpack:///./~/socket.io-client/~/socket.io-parser/~/component-emitter/index.js?f2fe","webpack:///./~/socket.io-client/~/socket.io-parser/~/json3/lib/json3.js?fcb6","webpack:///./~/socket.io-client/~/to-array/index.js?22b8","webpack:///(webpack)/buildin/amd-options.js?5f71","webpack:///./src/modules/mongodb.js","webpack:///Quiz-detail.vue","webpack:///./src/views/quickquiz/Quiz-detail.vue?04eb","webpack:///./src/views/quickquiz/Quiz-detail.vue?df35","webpack:///./src/views/quickquiz/Quiz-detail.vue?8bd0","webpack:///./src/views/quickquiz/Quiz-detail.vue"],"names":["webpackJsonp",4,"module","exports","__webpack_require__","useColors","document","documentElement","style","window","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatArgs","args","arguments","this","namespace","humanize","diff","c","color","concat","Array","prototype","slice","call","index","lastC","replace","splice","log","Function","apply","save","namespaces","storage","removeItem","debug","e","load","r","localstorage","localStorage","chrome","local","colors","formatters","j","v","JSON","stringify","enable",7,"global","encodeBase64Object","packet","callback","message","packets","type","data","encodeArrayBuffer","supportsBinary","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","i","length","buffer","encodeBlobAsArrayBuffer","fr","FileReader","onload","result","encodePacket","readAsArrayBuffer","encodeBlob","dontSendBlobs","blob","Blob","map","ary","each","done","next","after","eachWithIndex","el","cb","error","msg","keys","hasBinary","sliceBuffer","base64encoder","utf8","isAndroid","isPhantomJS","test","protocol","open","close","ping","pong","upgrade","noop","packetslist","err","utf8encode","undefined","ArrayBuffer","base64","encoded","encode","String","b64","split","readAsDataURL","b64data","fromCharCode","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","Number","substring","asArray","rest","encodePayload","setLengthHeader","encodeOne","doneCallback","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","results","join","decodePayload","decodePayloadAsBinary","n","l","chr","ret","encodedPackets","totalLength","reduce","acc","p","len","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","binaryIdentifier","size","lengthAry","bufferTail","buffers","numberTooLong","tailArray","msgLength","push","total",16,"a","b","fn","constructor",22,"__WEBPACK_AMD_DEFINE_RESULT__","addMapEntry","pair","set","addSetEntry","value","add","func","thisArg","arrayAggregator","array","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","baseFindKey","collection","eachFunc","key","baseFindIndex","fromIndex","fromRight","indexOfNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseReduce","baseSortBy","comparer","sort","current","baseTimes","baseToPairs","object","props","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","checkGlobal","Object","countHolders","placeholder","deburrLetter","letter","deburredLetters","escapeHtmlChar","htmlEscapes","escapeStringChar","stringEscapes","getValue","other","isHostObject","iteratorToArray","iterator","mapToArray","replaceHolders","PLACEHOLDER","setToArray","setToPairs","stringSize","string","reHasComplexSymbol","reComplexSymbol","lastIndex","stringToArray","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","computed","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","get","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","source","copyObject","baseAt","paths","isNil","baseClamp","number","lower","upper","baseClone","isDeep","isFull","customizer","stack","isObject","initCloneArray","tag","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbols","cloneableTags","initCloneByTag","stacked","getAllKeys","subValue","baseConforms","baseCreate","proto","objectCreate","baseDelay","wait","TypeError","FUNC_ERROR_TEXT","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","isKey","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGt","baseHas","getPrototype","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","parent","last","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","equalArrays","equalByTag","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIsNative","isMasked","pattern","reIsNative","reIsHostCtor","toSource","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","nativeKeys","baseKeysIn","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isStrictComparable","hasIn","baseMerge","srcIndex","keysIn","baseMergeDeep","newValue","mergeFunc","isArrayLikeObject","isPlainObject","isArguments","toPlainObject","baseNth","isIndex","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","getAllKeysIn","baseProperty","basePropertyDeep","basePullAll","indexOf","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","MAX_SAFE_INTEGER","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseToNumber","baseToString","symbolToString","INFINITY","baseUniq","createSet","seenIndex","baseUnset","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","copy","cloneArrayBuffer","arrayBuffer","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","reFlags","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","cloneTypedArray","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","getSymbols","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBaseWrapper","wrapper","root","Ctor","isBind","BIND_FLAG","createCtorWrapper","createCaseFirst","methodName","trailing","createCompounder","words","deburr","reApos","thisBinding","createCurryWrapper","arity","getHolder","createRecurryWrapper","createHybridWrapper","createFind","findIndexFunc","createFlow","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","toIteratee","createMathOperation","operator","createOver","arrayFunc","isFlattenableIteratee","createPadding","chars","charsLength","createPartialWrapper","createRange","toNumber","createRelationalOperation","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","newData","setData","createRound","Math","precision","createToPairs","mapTag","setTag","createWrapper","mergeData","baseSetData","isPartial","arrValue","othValue","compared","dataViewTag","arrayBufferTag","boolTag","dateTag","errorTag","name","numberTag","regexpTag","stringTag","convert","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","getSymbolsIn","realNames","otherFunc","isKeyable","getNative","nativeGetPrototype","getOwnPropertySymbols","objectToString","transforms","hasPath","hasFunc","isLength","input","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","reIsUint","reIsPlainProp","reIsDeepProp","maskSrcKey","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","flattenDepth","fromPairs","pairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","orderBy","reduceRight","reject","sample","sampleSize","rand","shuffle","some","now","Date","before","curry","curryRight","debounce","options","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","negate","once","otherArgs","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","propertyIsEnumerable","isArrayBuffer","getLength","isBoolean","isDate","isElement","nodeType","isEmpty","nonEnumShadows","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMap","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","Error","isNull","objectCtorString","isRegExp","isSafeInteger","isSet","typedArrayTags","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","iteratorSymbol","toFinite","sign","MAX_INTEGER","remainder","valueOf","reTrim","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","toSafeInteger","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","defaultValue","isProto","skipIndexes","propsLength","mapKeys","mapValues","omitBy","pickBy","setWith","transform","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","freeParseFloat","capitalize","upperFirst","reLatin1","reComboMark","endsWith","target","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChar","reRegExpChar","pad","strLength","padEnd","padStart","radix","nativeParseInt","reHasHexPrefix","repeat","nativeReplace","limit","nativeSplit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","toLower","toUpper","toUpperCase","trim","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","search","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","matches","matchesProperty","mixin","methodNames","noConflict","_","oldDash","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","id","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","contextProps","arrayProto","stringProto","coreJsData","uid","IE_PROTO","Buffer","moduleExports","Reflect","Symbol","enumerate","ceil","floor","getPrototypeOf","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","resolve","promiseTag","ctorString","count","lastCalled","stamp","remaining","HOT_SPAN","HOT_COUNT","rePropName","quote","reEscapeChar","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","isProp","keyBy","partition","sortBy","bind","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","eachRight","first","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","\\","\n","\r"," "," ","parseFloat","freeExports","freeModule","freeGlobal","freeSelf","self","thisGlobal",37,"Transport","opts","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","enablesXDR","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","extraHeaders","parser","Emitter","onError","desc","description","emit","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket",38,"hasCORS","xdomain","xscheme","XMLHttpRequest","XDomainRequest","ActiveXObject",39,"obj","on","addEventListener","event","_callbacks","off","removeListener","removeAllListeners","removeEventListener","callbacks","listeners","hasListeners",40,"str","encodeURIComponent","qs","qry","decodeURIComponent",41,"Encoder","encodeAsString","nsp","BINARY_EVENT","BINARY_ACK","attachments","json","encodeAsBinary","writeEncoding","bloblessData","deconstruction","binary","deconstructPacket","pack","unshift","removeBlobs","Decoder","reconstructor","decodeString","types","buf","parse","BinaryReconstructor","reconPack","ERROR","isBuf","CONNECT","DISCONNECT","EVENT","ACK","encoding","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket",65,"Manager","uri","nsps","subs","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","jitter","timeout","connecting","lastPing","packetBuffer","encoder","decoder","autoConnect","eio","Socket","emitAll","updateSocketIds","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","connect","skipReconnect","openSub","onopen","errorSub","cleanup","timer","clearTimeout","onping","onpong","ondata","ondecoded","onerror","onConnecting","processPacketQueue","shift","sub","disconnect","reset","onclose","reason","duration","onreconnect",66,"ev",67,"io","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","parserType","compress","flags","onpacket","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered",68,69,70,"polling","xhr","xd","xs","jsonp","location","isSSL","forceJSONP","XHR","JSONP","websocket",71,"Polling","forceBase64","hasXHR2","parseqs","inherit","yeast","responseType","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","ipv6",72,"num","alphabet","decoded","prev","seed",73,"arr",74,"re","parts","src","m","host","authority","ipv6uri",75,76,91,"_interopRequireDefault","__esModule","default","getIndexOfStudents","students","student_id","_lodash2","student","_id","defineProperty","studentIndex","zipSampleToStudent","_lodash","samples",119,"Color","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","red","lightness","w","whiteness","cyan","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","prop","spaces","maxes","getValues","space","chans","capped","sname","svalues",120,"abbr","hex","rgba","per","colorNames","scale","h","s","getRgb","getHsl","hsla","getAlpha","hexDouble","percentaString","g","reverseNames",121,"aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen",122,"rgb2hsl","delta","rgb2hsv","rgb2hwb","rgb2cmyk","y","k","rgb2keyword","reverseKeywords","rgb2xyz","x","z","rgb2lab","xyz","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hi","f","q","t","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","y2","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz",123,"conversions","Converter","arg","from","to","convs","routeSpace","fspace",124,"Chart",125,"Bar","config",126,"Bubble",127,"Doughnut",128,"Line",129,"PolarArea",130,"Radar","helpers","configMerge","aspectRatio",131,"defaultConfig","hover","mode","scales","xAxes","yAxes","tooltips","title","tooltipItems","label","tooltipItem","xLabel","yLabel","scatter","controllers","line","Scatter",132,"bar","categoryPercentage","barPercentage","gridLines","offsetGridLines","DatasetController","dataElementType","elements","Rectangle","initialize","chart","datasetIndex","getMeta","getBarCount","barCount","datasets","dataset","meta","getDatasetMeta","isDatasetVisible","rectangle","updateElement","xScale","getScaleForId","xAxisID","yScale","yAxisID","scaleBase","getBasePixel","rectangleElementOptions","custom","getDataset","_xScale","_yScale","_datasetIndex","_index","_model","calculateBarX","calculateBarY","labels","datasetLabel","base","calculateBarBase","width","calculateBarWidth","backgroundColor","getValueAtIndexOrDefault","borderSkipped","borderColor","borderWidth","pivot","negDS","negDSMeta","posDS","posDSMeta","getPixelForValue","getRuler","tickWidth","datasetCount","getPixelForTick","ticks","categoryWidth","categorySpacing","fullBarWidth","perc","barWidth","barSpacing","ruler","getBarIndex","barIndex","leftTick","sumPos","sumNeg","ds","dsMeta","draw","ease","easingDecimal","d","transition","setHoverStyle","model","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","horizontalBar","numBars","height","calculateBarHeight","cornerAt","corners","startCorner","ctx","_chart","vm","_view","halfHeight","topY","bottomY","right","halfStroke","beginPath","fillStyle","strokeStyle","lineWidth","borders","moveTo","lineTo","stroke","mouseX","mouseY","tickHeight","categoryHeight","fullBarHeight","barHeight","topTick",133,"bubble","dataPoint","Point","points","point","pointElementOptions","getPixelForDecimal","radius","getRadius","hitRadius","skip","hoverRadius",134,"doughnut","animation","animateRotate","animateScale","legendCallback","text","legend","generateLabels","arc","arcOpts","bw","hidden","onClick","legendItem","ilen","cutoutPercentage","rotation","circumference","pie","Arc","linkScales","getRingIndex","ringIndex","_this","chartArea","availableWidth","left","availableHeight","bottom","top","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","valueAtIndexOrDefault","element","abs",135,"showLines","datasetElementType","addElementAndReset","me","tension","updateBezierControlPoints","lineElementOptions","lineTension","_scale","_children","getValueOrDefault","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","scaleTop","scaleBottom","scaleZero","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","pointStyle","controlPoints","area","splineCurve","previousItem","nextItem","controlPointPreviousX","controlPointPreviousY","controlPointNextX","controlPointNextY","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth",136,"polarArea","lineArc","countVisibleElements","visibleCount","distance","getDistanceFromCenterForValue","resetModel",137,"radar","_loop","getBasePosition","pointPosition","getPointPositionForValue","xCenter","yCenter",138,"easing","onProgress","onComplete","Animation","Element","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","chartInstance","animationObject","lazy","animating","requestAnimationFrame","cancelAnimation","animationWrapper","requestAnimFrame","startDigest","startTime","framesToDrop","endTime",139,"instances","Controller","instance","responsive","resize","pluginService","notifyPlugins","bindEvents","ensureScalesHaveIDs","buildOrUpdateControllers","buildScales","buildSurroundingItems","updateLayout","resetElements","initToolTip","stop","silent","canvas","newWidth","getMaximumWidth","newHeight","maintainAspectRatio","getMaximumHeight","sizeChanged","retinaScale","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","dtype","isDefault","item","scaleType","scaleClass","scaleService","getScaleConstructor","addScalesToLayout","titleBlock","Title","layoutService","addBox","Legend","newControllers","controller","updateIndex","animationDuration","tooltip","_data","buildOrUpdateElements","animationOptions","easingFunction","easingEffects","stepDecimal","easeDecimal","boxes","box","rect","clip","restore","getElementAtEvent","eventPosition","getRelativePosition","elementsArray","getElementsAtEvent","found","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","removeResizeListener","parentNode","originalDevicePixelRatio","originalCanvasStyleWidth","originalCanvasStyleHeight","toBase64Image","toDataURL","Tooltip","_chartInstance","_options","evt","eventHandler","updateHoverStyle","enabled","hoverOptions","tooltipsOptions","lastActive","lastTooltipActive","active","tooltipActive","onHover","handleEvent","_active","arrayEquals",140,"addElements","scaleID","createMetaDataset","createMetaData","metaData","md","numData","numMetaData","elementOpts","valueOrDefault","inherits",141,"configuration","_start","startVal","tooltipPosition","hasValue",142,"parseMaxStyle","styleValue","node","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","loopable","objClone","additionalArgs","extensionObject","_base","extension","scaleMerge","getScaleDefaults","baseArray","valueObj","extendDeep","_extendDeep","dst","axisType","axisDefaults","arrayToSearch","where","filterCallback","findNextWhere","startIndex","currentItem","findPreviousWhere","extensions","ChartElement","Surrogate","__super__","warn","almostEquals","epsilon","NEGATIVE_INFINITY","log10","LN10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","loop","niceNum","niceFraction","exponent","fraction","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","addEvent","eventType","attachEvent","removeEvent","handler","detachEvent","arrayOfEvents","eventName","getConstraintWidth","getConstraintHeight","container","padding","clientWidth","cw","clientHeight","ch","currentStyle","getPropertyValue","pixelRatio","devicePixelRatio","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfStrings","gc","garbageCollect","longest","textWidth","measureText","gcLen","drawRoundedRectangle","quadraticCurveTo","closePath","CanvasGradient","defaultColor","addResizeListener","hiddenIframe","createElement","hiddenIframeClass","classlist","setAttribute","display","border","margin","insertBefore","firstChild","contentWindow","onresize","querySelector","removeChild","a0","a1","v0","v1","pushAllIfDefined","callCallback","_tArg","CanvasPattern",143,"getContext","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle",144,"removeBox","getMinimumBoxSize","isHorizontal","fullWidth","chartWidth","maxChartAreaWidth","horizontalBoxHeight","maxChartAreaHeight","verticalBoxWidth","chartAreaHeight","minBoxSizes","horizontal","fitBox","minBoxSize","scaleMargin","totalLeftBoxesWidth","totalRightBoxesWidth","chartHeight","finalFitVerticalBox","totalTopBoxesHeight","totalBottomBoxesHeight","placeBox","xPadding","yPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaWidth","newMaxChartAreaHeight","newMaxChartAreaWidth",145,"ci","boxWidth","lineCap","lineDash","lineDashOffset","lineJoin","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","legendItems","labelOpts","globalDefault","itemOrDefault","fontSize","labelFont","hitboxes","lineWidths","totalHeight","textAlign","textBaseline","lineDefault","legendWidth","cursor","fontColor","setLineDash","strokeRect","fillRect","fillText","lh","hitBox",146,"plugins","register","plugin","idx","scope","PluginBase","beforeInit","afterInit","beforeDraw","afterDraw",147,"drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","Scale","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","numericalTick","userCallback","globalDefaults","optionTicks","tickFontSize","tickFontStyle","tickFontFamily","tickLabelFont","firstRotated","firstWidth","lastWidth","labelRotation","longestTextCache","cosRotation","sinRotation","originalLabelWidth","labelWidth","yLabelWidth","tickOpts","scaleLabelOpts","scaleLabelFontSize","scaleLabelFontStyle","scaleLabelFontFamily","isFullWidth","largestTextWidth","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","maxLabelWidth","getRightValue","rawValue","NaN","getLabelForIndex","getValueForPixel","includeOffset","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","setContextLineSettings","skipRatio","scaleLabelX","scaleLabelY","maxTicks","isRotated","useAutoskipper","maxTicksLimit","tickFontColor","tl","scaleLabelFontColor","scaleLabelFont","labelRotationRadians","longestRotatedLabel","yTickStart","yTickEnd","isLastTick","shouldSkip","xLineValue","xLabelValue","zeroLineIndex","translate","xTickStart","xTickEnd","yLineValue","yLabelValue","x1","x2","y1",148,"constructors","registerScaleType","scaleConstructor","updateScaleDefaults","additions",149,"pos","titleX","titleY","titleFont",150,"pushOrConcat","toPush","titleFontStyle","titleSpacing","titleMarginBottom","titleColor","titleAlign","bodySpacing","bodyColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerColor","footerAlign","yAlign","xAlign","caretSize","cornerRadius","multiKeyBackground","beforeTitle","afterTitle","beforeBody","beforeLabel","afterLabel","afterBody","beforeFooter","footer","afterFooter","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getTitle","lines","getBeforeBody","getBody","bodyItem","getAfterBody","getFooter","getAveragePosition","xPositions","yPositions","changed","labelColors","currentElement","body","caretPadding","tooltipSize","getTooltipSize","determineAlignment","getBackgroundPoint","combinedBodyLength","lf","rf","olf","orf","yf","midX","midY","pt","drawCaret","tooltipPoint","x3","y3","bgColor","drawTitle","drawBody","drawFooter",151,"moment","globalOpts","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","centreAngle","rangeFromCentre","sA","eA",152,"lineToNextPoint","previousPoint","nextPoint","skipHandler","previousSkipHandler","bezierCurveTo","loopBackToStart","drawLineToCenter","globalOptionLineElements",153,"edgeLength","xOffset","yOffset","drawImage","SQRT2","setTransform",154,"halfWidth","leftX","rightX",155,"DatasetScale","minIndex","maxIndex","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","innerDimension","valueDimension",156,"tickValue","logDelta","tickString","numDecimal","toFixed","LinearScale","IDMatches","valuesPerType","hasPositiveValues","hasNegativeValues","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","minSign","maxSign","suggestedMin","suggestedMax","spacing","fixedStepSizeSet","fixedStepSize","stepSize","niceRange","niceMin","niceMax","numSpaces","ticksAsNumbers","rightValue",157,"remain","toExponential","LogarithmicScale","tickVal","exp","significand","lastTick","tickValues","newVal",158,"animate","angleLines","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","LinearRadialScale","getValueCount","drawingArea","halfTextWidth","furthestRightIndex","furthestRightAngle","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","pointLabelFontSize","pointLabeFontStyle","pointLabeFontFamily","pointLabeFont","largestPossibleRadius","furthestRight","furthestLeft","getPointPosition","getIndexAngle","setCenterPoint","leftMovement","rightMovement","maxRight","maxLeft","angleMultiplier","scalingFactor","distanceFromCenter","thisAngle","yCenterOffset","yHeight","outerPosition","pointLabelPosition","pointLabelFontColor","labelsCount","halfLabelsCount","quarterLabelsCount","upperHalf","exactQuarter",159,"units","steps","maxStep","format","unit","displayFormat","isoWeekday","displayFormats","millisecond","second","minute","hour","day","week","month","quarter","year","TimeScale","getLabelMoment","labelMoments","getMomentStartOf","tick","startOf","tickUnit","scaleLabelMoments","labelMoment","parseTime","isValid","firstTick","momentsForDataset","datasetVisible","unitScale","scaleSizeInUnits","unitStepSize","tempFirstLabel","tickFormatFunction","tickLabelWidth","labelCapacity","unitDefinitionIndex","unitDefinition","leadingUnitBuffer","trailingUnitBuffer","roundedStart","roundedEnd","smallestLabelSeparation","newTick","tooltipFormat","formattedTick","tickMoments","asSeconds","getMonth",178,"lookup","parsed","url","sameNamespace","newConnection","forceNew","multiplex","managers",179,"loc","parseuri","href",180,"ms","factor","deviation",181,"selectColor","prevColor","disabled","curr","prevTime","coerce","formatter","logFn","skips","disable",182,"short","long","plural",183,184,185,"transports","writeBuffer","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","o","parsejson","priorWebsocketSuccess","createTransport","EIO","transport","setTransport","onDrain","probe","onTransportOpen","upgradeLosesBinary","failed","upgrading","freezeTransport","onTransportClose","onupgrade","upgrades","onHandshake","setPing","code","filterUpgrades","pingInterval","pingTimeout","onHeartbeat","pingTimeoutTimer","pingIntervalTimer","sendPacket","prevBufferLen","cleanupAndClose","waitForUpgrade","filteredUpgrades",186,"empty","JSONPPolling","___eio","script","rNewline","rEscapedNewline","form","iframe","async","insertAt","getElementsByTagName","appendChild","isUAgecko","complete","initIframe","html","iframeId","className","submit","onreadystatechange",187,"Request","unloadHandler","requests","abort","req","sendXhr","pollXhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","status","requestsCount","onSuccess","fromError","contentType","getResponseHeader","response","ui8Arr","dataArray",188,"WS","BrowserWebSocket","WebSocket","MozWebSocket","check","protocols","headers","ws","supports","addEventListeners","onmessage",189,190,"err_cb","proxy","bail",191,"arraybuffer","bytes","abv","ii",192,"encoded1","encoded2","encoded3","encoded4","bufferLength",193,"mapArrayBufferViews","BlobBuilderConstructor","bb","BlobBuilder","append","getBlob","BlobConstructor","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported",194,"_hasBinary","File",195,196,"ucs2decode","extra","output","counter","ucs2encode","stringFromCharCode","checkScalarValue","codePoint","createByte","encodeCodePoint","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","tmp","version",197,198,"rvalidchars","rvalidescape","rvalidtokens","rvalidbraces","rtrimLeft","rtrimRight",199,200,201,"_deconstructPacket","_placeholder","packetData","_reconstructPacket","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader",202,203,"undef","isSupported","serialized","stringifySupported","isExtended","getClass","parseSupported","SyntaxError","nativeJSON","isProperty","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","Months","getDay","members","__proto__","original","Properties","isConstructor","hasProperty","objectTypes","Escapes",92,34,8,12,10,13,9,"leadingZeroes","toPaddedString","unicodePrefix","useCharIndex","symbols","charCode","serialize","whitespace","indentation","date","hours","minutes","seconds","milliseconds","Index","Source","Unescapes",47,98,116,110,102,114,"lex","begin","isSigned","hasMembers","walk","isLoader","function","previousJSON","isRestored","JSON3",204,"list",208,"__webpack_amd_options__",212,333,"isMongodbId",354,"_chart2","_socket","_socket2","_store","_store2","_actions","_getters","_quickquiz","_mongodb","qaChart","spChart","attached","quickquiz_id","$route","params","validateURL","getQuickquizDetail","detached","methods","apiURL","$http","then","setQuickquizStudents","quickquiz","analysis","$els","statistic","listenForSocket","$showToast","endQuiz","finished","post","reload","token","sessionStorage","authenticated","quickquizId","joined","quizsample","updateQuickquizStudent","student_name","_student","online","checkSamples","setQuickquizID","drawCharts","analysisSample","student_index","option","rightCount","blank","wrong","finish","finishTime","timeDifference","_rightCount","_finish","aveRight","questions","aveTime","exception_count","question_analysis","millisecound","sec","drawSPChart","drawQAChart","studentCount","student_performance_chart","name_set","time_cost_set","correct_count_set","ave_correct_count","ave_correct_data_set","chart_main_data","charts","sp","correct","spChartdata","question_analysis_chart","labels_set","question","wrong_count_set","blank_count_set","main_chart_data","qa","qaChartData","checkQuizPaper","$router","go","quizsample_id","deleteQuiz","filters","store","vuex","getters","getQuickquizID","getQuickquizStudents",372,"mappings","file","sourcesContent","sourceRoot",387,"content","locals",488,508,"__vue_script__","__vue_template__"],"mappings":"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","file":"2.8e29088beb687e6f54b5.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 4:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(181);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  'lightseagreen',\n\t  'forestgreen',\n\t  'goldenrod',\n\t  'dodgerblue',\n\t  'darkorchid',\n\t  'crimson'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  return ('WebkitAppearance' in document.documentElement.style) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (window.console && (console.firebug || (console.exception && console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  return JSON.stringify(v);\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs() {\n\t  var args = arguments;\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return args;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t  return args;\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    r = exports.storage.debug;\n\t  } catch(e) {}\n\t  return r;\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage(){\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\n\n/***/ },\n\n/***/ 7:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar keys = __webpack_require__(189);\n\tvar hasBinary = __webpack_require__(194);\n\tvar sliceBuffer = __webpack_require__(191);\n\tvar base64encoder = __webpack_require__(192);\n\tvar after = __webpack_require__(190);\n\tvar utf8 = __webpack_require__(196);\n\t\n\t/**\n\t * Check if we are running an android browser. That requires us to use\n\t * ArrayBuffer with polling transports...\n\t *\n\t * http://ghinda.net/jpeg-blob-ajax-android/\n\t */\n\t\n\tvar isAndroid = navigator.userAgent.match(/Android/i);\n\t\n\t/**\n\t * Check if we are running in PhantomJS.\n\t * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n\t * https://github.com/ariya/phantomjs/issues/11395\n\t * @type boolean\n\t */\n\tvar isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\t\n\t/**\n\t * When true, avoids using Blobs to encode payloads.\n\t * @type boolean\n\t */\n\tvar dontSendBlobs = isAndroid || isPhantomJS;\n\t\n\t/**\n\t * Current protocol version.\n\t */\n\t\n\texports.protocol = 3;\n\t\n\t/**\n\t * Packet types.\n\t */\n\t\n\tvar packets = exports.packets = {\n\t    open:     0    // non-ws\n\t  , close:    1    // non-ws\n\t  , ping:     2\n\t  , pong:     3\n\t  , message:  4\n\t  , upgrade:  5\n\t  , noop:     6\n\t};\n\t\n\tvar packetslist = keys(packets);\n\t\n\t/**\n\t * Premade error packet.\n\t */\n\t\n\tvar err = { type: 'error', data: 'parser error' };\n\t\n\t/**\n\t * Create a blob api even for blob builder when vendor prefixes exist\n\t */\n\t\n\tvar Blob = __webpack_require__(193);\n\t\n\t/**\n\t * Encodes a packet.\n\t *\n\t *     <packet type id> [ <data> ]\n\t *\n\t * Example:\n\t *\n\t *     5hello world\n\t *     3\n\t *     4\n\t *\n\t * Binary is encoded in an identical principle\n\t *\n\t * @api private\n\t */\n\t\n\texports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n\t  if ('function' == typeof supportsBinary) {\n\t    callback = supportsBinary;\n\t    supportsBinary = false;\n\t  }\n\t\n\t  if ('function' == typeof utf8encode) {\n\t    callback = utf8encode;\n\t    utf8encode = null;\n\t  }\n\t\n\t  var data = (packet.data === undefined)\n\t    ? undefined\n\t    : packet.data.buffer || packet.data;\n\t\n\t  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n\t    return encodeArrayBuffer(packet, supportsBinary, callback);\n\t  } else if (Blob && data instanceof global.Blob) {\n\t    return encodeBlob(packet, supportsBinary, callback);\n\t  }\n\t\n\t  // might be an object with { base64: true, data: dataAsBase64String }\n\t  if (data && data.base64) {\n\t    return encodeBase64Object(packet, callback);\n\t  }\n\t\n\t  // Sending data as a utf-8 string\n\t  var encoded = packets[packet.type];\n\t\n\t  // data fragment is optional\n\t  if (undefined !== packet.data) {\n\t    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n\t  }\n\t\n\t  return callback('' + encoded);\n\t\n\t};\n\t\n\tfunction encodeBase64Object(packet, callback) {\n\t  // packet data is an object { base64: true, data: dataAsBase64String }\n\t  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n\t  return callback(message);\n\t}\n\t\n\t/**\n\t * Encode packet helpers for binary types\n\t */\n\t\n\tfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var data = packet.data;\n\t  var contentArray = new Uint8Array(data);\n\t  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\t\n\t  resultBuffer[0] = packets[packet.type];\n\t  for (var i = 0; i < contentArray.length; i++) {\n\t    resultBuffer[i+1] = contentArray[i];\n\t  }\n\t\n\t  return callback(resultBuffer.buffer);\n\t}\n\t\n\tfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var fr = new FileReader();\n\t  fr.onload = function() {\n\t    packet.data = fr.result;\n\t    exports.encodePacket(packet, supportsBinary, true, callback);\n\t  };\n\t  return fr.readAsArrayBuffer(packet.data);\n\t}\n\t\n\tfunction encodeBlob(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  if (dontSendBlobs) {\n\t    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n\t  }\n\t\n\t  var length = new Uint8Array(1);\n\t  length[0] = packets[packet.type];\n\t  var blob = new Blob([length.buffer, packet.data]);\n\t\n\t  return callback(blob);\n\t}\n\t\n\t/**\n\t * Encodes a packet with binary data in a base64 string\n\t *\n\t * @param {Object} packet, has `type` and `data`\n\t * @return {String} base64 encoded message\n\t */\n\t\n\texports.encodeBase64Packet = function(packet, callback) {\n\t  var message = 'b' + exports.packets[packet.type];\n\t  if (Blob && packet.data instanceof global.Blob) {\n\t    var fr = new FileReader();\n\t    fr.onload = function() {\n\t      var b64 = fr.result.split(',')[1];\n\t      callback(message + b64);\n\t    };\n\t    return fr.readAsDataURL(packet.data);\n\t  }\n\t\n\t  var b64data;\n\t  try {\n\t    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n\t  } catch (e) {\n\t    // iPhone Safari doesn't let you apply with typed arrays\n\t    var typed = new Uint8Array(packet.data);\n\t    var basic = new Array(typed.length);\n\t    for (var i = 0; i < typed.length; i++) {\n\t      basic[i] = typed[i];\n\t    }\n\t    b64data = String.fromCharCode.apply(null, basic);\n\t  }\n\t  message += global.btoa(b64data);\n\t  return callback(message);\n\t};\n\t\n\t/**\n\t * Decodes a packet. Changes format to Blob if requested.\n\t *\n\t * @return {Object} with `type` and `data` (if any)\n\t * @api private\n\t */\n\t\n\texports.decodePacket = function (data, binaryType, utf8decode) {\n\t  // String data\n\t  if (typeof data == 'string' || data === undefined) {\n\t    if (data.charAt(0) == 'b') {\n\t      return exports.decodeBase64Packet(data.substr(1), binaryType);\n\t    }\n\t\n\t    if (utf8decode) {\n\t      try {\n\t        data = utf8.decode(data);\n\t      } catch (e) {\n\t        return err;\n\t      }\n\t    }\n\t    var type = data.charAt(0);\n\t\n\t    if (Number(type) != type || !packetslist[type]) {\n\t      return err;\n\t    }\n\t\n\t    if (data.length > 1) {\n\t      return { type: packetslist[type], data: data.substring(1) };\n\t    } else {\n\t      return { type: packetslist[type] };\n\t    }\n\t  }\n\t\n\t  var asArray = new Uint8Array(data);\n\t  var type = asArray[0];\n\t  var rest = sliceBuffer(data, 1);\n\t  if (Blob && binaryType === 'blob') {\n\t    rest = new Blob([rest]);\n\t  }\n\t  return { type: packetslist[type], data: rest };\n\t};\n\t\n\t/**\n\t * Decodes a packet encoded in a base64 string\n\t *\n\t * @param {String} base64 encoded message\n\t * @return {Object} with `type` and `data` (if any)\n\t */\n\t\n\texports.decodeBase64Packet = function(msg, binaryType) {\n\t  var type = packetslist[msg.charAt(0)];\n\t  if (!global.ArrayBuffer) {\n\t    return { type: type, data: { base64: true, data: msg.substr(1) } };\n\t  }\n\t\n\t  var data = base64encoder.decode(msg.substr(1));\n\t\n\t  if (binaryType === 'blob' && Blob) {\n\t    data = new Blob([data]);\n\t  }\n\t\n\t  return { type: type, data: data };\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload).\n\t *\n\t *     <length>:data\n\t *\n\t * Example:\n\t *\n\t *     11:hello world2:hi\n\t *\n\t * If any contents are binary, they will be encoded as base64 strings. Base64\n\t * encoded strings are marked with a b before the length specifier\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\texports.encodePayload = function (packets, supportsBinary, callback) {\n\t  if (typeof supportsBinary == 'function') {\n\t    callback = supportsBinary;\n\t    supportsBinary = null;\n\t  }\n\t\n\t  var isBinary = hasBinary(packets);\n\t\n\t  if (supportsBinary && isBinary) {\n\t    if (Blob && !dontSendBlobs) {\n\t      return exports.encodePayloadAsBlob(packets, callback);\n\t    }\n\t\n\t    return exports.encodePayloadAsArrayBuffer(packets, callback);\n\t  }\n\t\n\t  if (!packets.length) {\n\t    return callback('0:');\n\t  }\n\t\n\t  function setLengthHeader(message) {\n\t    return message.length + ':' + message;\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n\t      doneCallback(null, setLengthHeader(message));\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(results.join(''));\n\t  });\n\t};\n\t\n\t/**\n\t * Async array map using after\n\t */\n\t\n\tfunction map(ary, each, done) {\n\t  var result = new Array(ary.length);\n\t  var next = after(ary.length, done);\n\t\n\t  var eachWithIndex = function(i, el, cb) {\n\t    each(el, function(error, msg) {\n\t      result[i] = msg;\n\t      cb(error, result);\n\t    });\n\t  };\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    eachWithIndex(i, ary[i], next);\n\t  }\n\t}\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Possible binary contents are\n\t * decoded from their base64 representation\n\t *\n\t * @param {String} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayload = function (data, binaryType, callback) {\n\t  if (typeof data != 'string') {\n\t    return exports.decodePayloadAsBinary(data, binaryType, callback);\n\t  }\n\t\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var packet;\n\t  if (data == '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t  var length = ''\n\t    , n, msg;\n\t\n\t  for (var i = 0, l = data.length; i < l; i++) {\n\t    var chr = data.charAt(i);\n\t\n\t    if (':' != chr) {\n\t      length += chr;\n\t    } else {\n\t      if ('' == length || (length != (n = Number(length)))) {\n\t        // parser error - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      msg = data.substr(i + 1, n);\n\t\n\t      if (length != msg.length) {\n\t        // parser error - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      if (msg.length) {\n\t        packet = exports.decodePacket(msg, binaryType, true);\n\t\n\t        if (err.type == packet.type && err.data == packet.data) {\n\t          // parser error in individual packet - ignoring payload\n\t          return callback(err, 0, 1);\n\t        }\n\t\n\t        var ret = callback(packet, i + n, l);\n\t        if (false === ret) return;\n\t      }\n\t\n\t      // advance cursor\n\t      i += n;\n\t      length = '';\n\t    }\n\t  }\n\t\n\t  if (length != '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload) as binary.\n\t *\n\t * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n\t * 255><data>\n\t *\n\t * Example:\n\t * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n\t *\n\t * @param {Array} packets\n\t * @return {ArrayBuffer} encoded payload\n\t * @api private\n\t */\n\t\n\texports.encodePayloadAsArrayBuffer = function(packets, callback) {\n\t  if (!packets.length) {\n\t    return callback(new ArrayBuffer(0));\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(data) {\n\t      return doneCallback(null, data);\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, encodedPackets) {\n\t    var totalLength = encodedPackets.reduce(function(acc, p) {\n\t      var len;\n\t      if (typeof p === 'string'){\n\t        len = p.length;\n\t      } else {\n\t        len = p.byteLength;\n\t      }\n\t      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n\t    }, 0);\n\t\n\t    var resultArray = new Uint8Array(totalLength);\n\t\n\t    var bufferIndex = 0;\n\t    encodedPackets.forEach(function(p) {\n\t      var isString = typeof p === 'string';\n\t      var ab = p;\n\t      if (isString) {\n\t        var view = new Uint8Array(p.length);\n\t        for (var i = 0; i < p.length; i++) {\n\t          view[i] = p.charCodeAt(i);\n\t        }\n\t        ab = view.buffer;\n\t      }\n\t\n\t      if (isString) { // not true binary\n\t        resultArray[bufferIndex++] = 0;\n\t      } else { // true binary\n\t        resultArray[bufferIndex++] = 1;\n\t      }\n\t\n\t      var lenStr = ab.byteLength.toString();\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n\t      }\n\t      resultArray[bufferIndex++] = 255;\n\t\n\t      var view = new Uint8Array(ab);\n\t      for (var i = 0; i < view.length; i++) {\n\t        resultArray[bufferIndex++] = view[i];\n\t      }\n\t    });\n\t\n\t    return callback(resultArray.buffer);\n\t  });\n\t};\n\t\n\t/**\n\t * Encode as Blob\n\t */\n\t\n\texports.encodePayloadAsBlob = function(packets, callback) {\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(encoded) {\n\t      var binaryIdentifier = new Uint8Array(1);\n\t      binaryIdentifier[0] = 1;\n\t      if (typeof encoded === 'string') {\n\t        var view = new Uint8Array(encoded.length);\n\t        for (var i = 0; i < encoded.length; i++) {\n\t          view[i] = encoded.charCodeAt(i);\n\t        }\n\t        encoded = view.buffer;\n\t        binaryIdentifier[0] = 0;\n\t      }\n\t\n\t      var len = (encoded instanceof ArrayBuffer)\n\t        ? encoded.byteLength\n\t        : encoded.size;\n\t\n\t      var lenStr = len.toString();\n\t      var lengthAry = new Uint8Array(lenStr.length + 1);\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        lengthAry[i] = parseInt(lenStr[i]);\n\t      }\n\t      lengthAry[lenStr.length] = 255;\n\t\n\t      if (Blob) {\n\t        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n\t        doneCallback(null, blob);\n\t      }\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(new Blob(results));\n\t  });\n\t};\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Strings are decoded by\n\t * interpreting each byte as a key code for entries marked to start with 0. See\n\t * description of encodePayloadAsBinary\n\t *\n\t * @param {ArrayBuffer} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayloadAsBinary = function (data, binaryType, callback) {\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var bufferTail = data;\n\t  var buffers = [];\n\t\n\t  var numberTooLong = false;\n\t  while (bufferTail.byteLength > 0) {\n\t    var tailArray = new Uint8Array(bufferTail);\n\t    var isString = tailArray[0] === 0;\n\t    var msgLength = '';\n\t\n\t    for (var i = 1; ; i++) {\n\t      if (tailArray[i] == 255) break;\n\t\n\t      if (msgLength.length > 310) {\n\t        numberTooLong = true;\n\t        break;\n\t      }\n\t\n\t      msgLength += tailArray[i];\n\t    }\n\t\n\t    if(numberTooLong) return callback(err, 0, 1);\n\t\n\t    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n\t    msgLength = parseInt(msgLength);\n\t\n\t    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\t    if (isString) {\n\t      try {\n\t        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n\t      } catch (e) {\n\t        // iPhone Safari doesn't let you apply to typed arrays\n\t        var typed = new Uint8Array(msg);\n\t        msg = '';\n\t        for (var i = 0; i < typed.length; i++) {\n\t          msg += String.fromCharCode(typed[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    buffers.push(msg);\n\t    bufferTail = sliceBuffer(bufferTail, msgLength);\n\t  }\n\t\n\t  var total = buffers.length;\n\t  buffers.forEach(function(buffer, i) {\n\t    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n\t  });\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 16:\n/***/ function(module, exports) {\n\n\t\n\tmodule.exports = function(a, b){\n\t  var fn = function(){};\n\t  fn.prototype = b.prototype;\n\t  a.prototype = new fn;\n\t  a.prototype.constructor = a;\n\t};\n\n/***/ },\n\n/***/ 22:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash <https://lodash.com/>\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.13.1';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(\\.|\\[\\])(?:\\4|$))/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n\t    rsUpper + '+' + rsOptUpperContr,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n\t    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    '_', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = typeof exports == 'object' && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = freeExports && typeof module == 'object' && module;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = checkGlobal(typeof global == 'object' && global);\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = checkGlobal(typeof self == 'object' && self);\n\t\n\t  /** Detect `this` as the global object. */\n\t  var thisGlobal = checkGlobal(typeof this == 'object' && this);\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    var length = args.length;\n\t    switch (length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    var length = array ? array.length : 0;\n\t    return !!length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array ? array.length : 0;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t   * without support for iteratee shorthands, which iterates over `collection`\n\t   * using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFindKey(collection, predicate, eachFunc) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = key;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing wrapper metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a cache value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a global object.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n\t   */\n\t  function checkGlobal(value) {\n\t    return (value && value.Object === Object) ? value : null;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        result++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key` of `object`.\n\t   *\n\t   * @private\n\t   * @param {Object} [object] The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function getValue(object, key) {\n\t    return object == null ? undefined : object[key];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to stub `Date#getTime` use in `_.now`.\n\t   * var stubbed = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': stubGetTime };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Date = context.Date,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype,\n\t        stringProto = context.String.prototype;\n\t\n\t    /** Used to detect overreaching core-js shims. */\n\t    var coreJsData = context['__core-js_shared__'];\n\t\n\t    /** Used to detect methods masquerading as native. */\n\t    var maskSrcKey = (function() {\n\t      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t      return uid ? ('Symbol(src)_1.' + uid) : '';\n\t    }());\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Reflect = context.Reflect,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        enumerate = Reflect ? Reflect.enumerate : undefined,\n\t        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n\t        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n\t        objectCreate = Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        splice = arrayProto.splice;\n\t\n\t    /** Built-in method references that are mockable. */\n\t    var setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetPrototype = Object.getPrototypeOf,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = Object.keys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReplace = stringProto.replace,\n\t        nativeReverse = arrayProto.reverse,\n\t        nativeSplit = stringProto.split;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n\t    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array of at least `200` elements\n\t     * and any iteratees accept only one argument. The heuristic for whether a\n\t     * section qualifies for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,\n\t     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,\n\t     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,\n\t     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,\n\t     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,\n\t     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,\n\t     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n\t     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,\n\t     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,\n\t     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n\t     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n\t     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n\t     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n\t     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n\t     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n\t     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n\t     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n\t     * `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      return getMapData(this, key)['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      getMapData(this, key).set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      this.__data__ = new ListCache(entries);\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      return this.__data__['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var cache = this.__data__;\n\t      if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {\n\t        cache = this.__data__ = new MapCache(cache.__data__);\n\t      }\n\t      cache.set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {boolean} [isFull] Specify a clone including symbols.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, baseClone, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      if (!isArr) {\n\t        var props = isFull ? getAllKeys(value) : keys(value);\n\t      }\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source),\n\t          length = props.length;\n\t\n\t      return function(object) {\n\t        if (object == null) {\n\t          return !length;\n\t        }\n\t        var index = length;\n\t        while (index--) {\n\t          var key = props[index],\n\t              predicate = source[key],\n\t              value = object[key];\n\t\n\t          if ((value === undefined &&\n\t              !(key in Object(object))) || !predicate(value)) {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseCreate(proto) {\n\t      return isObject(proto) ? objectCreate(proto) : {};\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an array\n\t     * of `func` arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments to provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n\t      // that are composed entirely of index properties, return `false` for\n\t      // `hasOwnProperty` checks of them.\n\t      return object != null &&\n\t        (hasOwnProperty.call(object, key) ||\n\t          (typeof object == 'object' && key in object && getPrototype(object) === null));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return object != null && key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = castPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[toKey(path)];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        objTag = objTag == argsTag ? objectTag : objTag;\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        othTag = othTag == argsTag ? objectTag : othTag;\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n\t          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n\t      }\n\t      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isNative` without bad shim checks.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     */\n\t    function baseIsNative(value) {\n\t      if (!isObject(value) || isMasked(value)) {\n\t        return false;\n\t      }\n\t      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      return nativeKeys(Object(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      object = object == null ? object : Object(object);\n\t\n\t      var result = [];\n\t      for (var key in object) {\n\t        result.push(key);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Fallback for IE < 9 with es6-shim.\n\t    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n\t      baseKeysIn = function(object) {\n\t        return iteratorToArray(enumerate(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      if (!(isArray(source) || isTypedArray(source))) {\n\t        var props = keysIn(source);\n\t      }\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      stack.set(srcValue, newValue);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t      }\n\t      stack['delete'](srcValue);\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return arrayReduce(props, function(result, key) {\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t        return result;\n\t      }, {});\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, predicate) {\n\t      var index = -1,\n\t          props = getAllKeysIn(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (array === values) {\n\t        values = copyArray(values);\n\t      }\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = castPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[toKey(last(path))];\n\t            }\n\t          }\n\t          else {\n\t            delete array[toKey(index)];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (isObject(nested)) {\n\t          var newValue = value;\n\t          if (index != lastIndex) {\n\t            var objValue = nested[key];\n\t            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t            if (newValue === undefined) {\n\t              newValue = objValue == null\n\t                ? (isIndex(path[index + 1]) ? [] : {})\n\t                : objValue;\n\t            }\n\t          }\n\t          assignValue(nested, key, newValue);\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t      object = parent(object, path);\n\t\n\t      var key = toKey(last(path));\n\t      return !(object != null && baseHas(object, key)) || delete object[key];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var result = new buffer.constructor(buffer.length);\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n\t      return arrayReduce(array, addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n\t      return arrayReduce(array, addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : source[key];\n\t\n\t        assignValue(object, key, newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return rest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBaseWrapper(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurryWrapper(func, bitmask, arity) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} findIndexFunc The function to find the collection index.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(findIndexFunc) {\n\t      return function(collection, predicate, fromIndex) {\n\t        var iterable = Object(collection);\n\t        predicate = getIteratee(predicate, 3);\n\t        if (!isArrayLike(collection)) {\n\t          var props = keys(collection);\n\t        }\n\t        var index = findIndexFunc(props || collection, function(value, key) {\n\t          if (props) {\n\t            key = value;\n\t            value = iterable[key];\n\t          }\n\t          return predicate(value, key, iterable);\n\t        }, fromIndex);\n\t        return index > -1 ? collection[props ? props[index] : index] : undefined;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return rest(function(funcs) {\n\t        funcs = baseFlatten(funcs, 1);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return 0;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return rest(function(iteratees) {\n\t        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n\t          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n\t          : arrayMap(baseFlatten(iteratees, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\t\n\t        return rest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toNumber(start);\n\t        start = start === start ? start : 0;\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toNumber(end) || 0;\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = nativeMin(toInteger(precision), 292);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     *   512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBaseWrapper(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurryWrapper(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartialWrapper(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!seen.has(othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t                  return seen.add(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and\n\t          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as\n\t          // not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object) ? other != +other : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= UNORDERED_COMPARE_FLAG;\n\t          stack.set(object, other);\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : baseHas(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a\n\t     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n\t     * Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = keys(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        var key = result[length],\n\t            value = object[key];\n\t\n\t        result[length] = [key, value, isStrictComparable(value)];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = getValue(object, key);\n\t      return baseIsNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the `[[Prototype]]` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {null|Object} Returns the `[[Prototype]]`.\n\t     */\n\t    function getPrototype(value) {\n\t      return nativeGetPrototype(Object(value));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    function getSymbols(object) {\n\t      // Coerce `object` to an object to avoid non-object errors in V8.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.\n\t      return getOwnPropertySymbols(Object(object));\n\t    }\n\t\n\t    // Fallback for IE < 11.\n\t    if (!getOwnPropertySymbols) {\n\t      getSymbols = stubArray;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbol properties\n\t     * of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function getTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11,\n\t    // for data views in Edge, and promises in Node.js.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : undefined;\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var result,\n\t          index = -1,\n\t          length = path.length;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result) {\n\t        return result;\n\t      }\n\t      var length = object ? object.length : 0;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object, isDeep, cloneFunc);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object, isDeep, cloneFunc);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an array of index keys for `object` values of arrays,\n\t     * `arguments` objects, and strings, otherwise `null` is returned.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array|null} Returns index keys, else `null`.\n\t     */\n\t    function indexKeys(object) {\n\t      var length = object ? object.length : undefined;\n\t      if (isLength(length) &&\n\t          (isArray(object) || isString(object) || isArguments(object))) {\n\t        return baseTimes(length, String);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable array and not a `_.matchesProperty`\n\t     * iteratee shorthand.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenableIteratee(value) {\n\t      return isArray(value) && !(value.length == 2 && !isFunction(value[0]));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return !!length &&\n\t        (typeof value == 'number' || reIsUint.test(value)) &&\n\t        (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has its source masked.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t     */\n\t    function isMasked(func) {\n\t      return !!maskSrcKey && (maskSrcKey in func);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` is capable of being masked.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n\t     */\n\t    var isMaskable = coreJsData ? isFunction : stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoize(function(string) {\n\t      var result = [];\n\t      toString(string).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to process.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length,\n\t          args = Array(length ? length - 1 : 0),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return length\n\t        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other given\n\t     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([2, 1], [2, 3]);\n\t     * // => [1]\n\t     */\n\t    var difference = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = rest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. Result values\n\t     * are chosen from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = rest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length - 1;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = fromIndex < 0\n\t          ? nativeMax(length + index, 0)\n\t          : nativeMin(index, length - 1);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseIndexOf(array, value, index);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [2, 3]);\n\t     * // => [2]\n\t     */\n\t    var intersection = rest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. Result values are chosen\n\t     * from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = rest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (\n\t          index < 0\n\t            ? nativeMax(length + index, 0)\n\t            : nativeMin(index, length - 1)\n\t        ) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index - 1, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pull(array, 'a', 'c');\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    var pull = rest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pullAll(array, ['a', 'c']);\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     * var pulled = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => ['a', 'c']\n\t     *\n\t     * console.log(pulled);\n\t     * // => ['b', 'd']\n\t     */\n\t    var pullAt = rest(function(array, indexes) {\n\t      indexes = baseFlatten(indexes, 1);\n\t\n\t      var length = array ? array.length : 0,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 1\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2], [1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    var union = rest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each\n\t     * element is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([2, 1, 2, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [2, 3]);\n\t     * // => [1, 3]\n\t     */\n\t    var xor = rest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2, 3.4]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = rest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = rest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     */\n\t    var wrapperAt = rest(function(paths) {\n\t      paths = baseFlatten(paths, 1);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    var find = createFind(findIndex);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=collection.length-1] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(findLastIndex);\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function, it's\n\t     * invoked for and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = rest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getIteratee(predicate, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = baseClamp(toInteger(n), 0, length);\n\t      }\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      if (isObjectLike(collection)) {\n\t        var tag = getTag(collection);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return collection.size;\n\t        }\n\t      }\n\t      return keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [iteratees=[_.identity]] The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    var sortBy = rest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n\t        ? iteratees[0]\n\t        : baseFlatten(iteratees, 1, isFlattenableIteratee);\n\t\n\t      return baseOrderBy(collection, iteratees, []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred invocation.\n\t     */\n\t    function now() {\n\t      return Date.now();\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = rest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = rest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide an options object to indicate whether `func` should be invoked on\n\t     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent calls\n\t     * to the debounced function return the result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            result = wait - timeSinceLastCall;\n\t\n\t        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        lastInvokeTime = 0;\n\t        lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one or more milliseconds.\n\t     */\n\t    var defer = rest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = rest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrapper(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments transformed by\n\t     * corresponding `transforms`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [transforms[_.identity]] The functions to transform.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, [square, doubled]);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = rest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return rest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, [2, 0, 1]);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = rest(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, array);\n\t          case 1: return func.call(this, args[0], array);\n\t          case 2: return func.call(this, args[0], args[1], array);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return rest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide an options object to indicate whether\n\t     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, false, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @type {Function}\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    function isArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value)) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = !Buffer ? stubFalse : function(value) {\n\t      return value instanceof Buffer;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) || isFunction(value.splice) ||\n\t            isArguments(value) || isBuffer(value))) {\n\t        return !value.length;\n\t      }\n\t      if (isObjectLike(value)) {\n\t        var tag = getTag(value);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return !value.size;\n\t        }\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return !(nonEnumShadows && keys(value).length);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      return (objectToString.call(value) == errorTag) ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n\t      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    function isMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values. This method is\n\t     * equivalent to a `_.matches` function when `source` is partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a pristine native function.\n\t     *\n\t     * **Note:** This method can't reliably detect native functions in the\n\t     * presence of the `core-js` package because `core-js` circumvents this kind\n\t     * of detection. Despite multiple requests, the `core-js` maintainer has made\n\t     * it clear: any attempt to fix the detection will be obstructed. As a result,\n\t     * we're left with little choice but to throw an error. Unfortunately, this\n\t     * also affects packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n\t     * which rely on `core-js`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (isMaskable(value)) {\n\t        throw new Error('This method is not supported with `core-js`. Try https://github.com/es-shims.');\n\t      }\n\t      return baseIsNative(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) ||\n\t          objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    function isSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.e = 5;\n\t     * }\n\t     *\n\t     * Foo.prototype.d = 4;\n\t     * Bar.prototype.f = 6;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3, 'e': 5 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.d = 4;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     * Bar.prototype.e = 5;\n\t     *\n\t     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keysIn(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        assignValue(object, key, source[key]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     */\n\t    var at = rest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = rest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = rest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = rest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      var isProto = isPrototype(object);\n\t      if (!(isProto || isArrayLike(object))) {\n\t        return baseKeys(object);\n\t      }\n\t      var indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      for (var key in object) {\n\t        if (baseHas(object, key) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(isProto && key == 'constructor')) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      var index = -1,\n\t          isProto = isPrototype(object),\n\t          props = baseKeysIn(object),\n\t          propsLength = props.length,\n\t          indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable string keyed properties of `object` that are\n\t     * not omitted.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = rest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props, 1), toKey);\n\t      return basePick(object, baseDifference(getAllKeysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      predicate = getIteratee(predicate);\n\t      return basePickBy(object, function(value, key) {\n\t        return !predicate(value, key);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = rest(function(object, props) {\n\t      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        object = undefined;\n\t        length = 1;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. If `accumulator` is not\n\t     * provided, a new object with the same `[[Prototype]]` will be used. The\n\t     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toNumber(start) || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toNumber(end) || 0;\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toNumber(lower) || 0;\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toNumber(upper) || 0;\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search up to.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the\n\t     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (separator == '' && reHasComplexSymbol.test(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return nativeSplit.call(string, separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      return string.lastIndexOf(baseToString(target), position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = rest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, ['onClick']);\n\t     * jQuery(element).on('click', view.onClick);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = rest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames, 1), function(key) {\n\t        key = toKey(key);\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.constant(true),                _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return rest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.conforms({ 'age': function(n) { return n > 38; } }));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t     *\n\t     * console.log(objects);\n\t     * // => [{ 'a': 1 }, { 'a': 1 }]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow([_.add, square]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight([square, _.add]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument given to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * console.log(_.identity(object) === object);\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`. The created function is equivalent to\n\t     * `_.isMatch` with a `source` partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = rest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = rest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A method that returns `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * _.times(2, _.noop);\n\t     * // => [undefined, undefined]\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at index `n`. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return rest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [iteratees=[_.identity]] The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over([Math.max, Math.min]);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [predicates=[_.identity]] The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [predicates=[_.identity]] The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * A method that returns a new empty array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Array} Returns the new empty array.\n\t     * @example\n\t     *\n\t     * var arrays = _.times(2, _.stubArray);\n\t     *\n\t     * console.log(arrays);\n\t     * // => [[], []]\n\t     *\n\t     * console.log(arrays[0] === arrays[1]);\n\t     * // => false\n\t     */\n\t    function stubArray() {\n\t      return [];\n\t    }\n\t\n\t    /**\n\t     * A method that returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `false`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubFalse);\n\t     * // => [false, false]\n\t     */\n\t    function stubFalse() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A method that returns a new empty object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Object} Returns the new empty object.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.stubObject);\n\t     *\n\t     * console.log(objects);\n\t     * // => [{}, {}]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => false\n\t     */\n\t    function stubObject() {\n\t      return {};\n\t    }\n\t\n\t    /**\n\t     * A method that returns an empty string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {string} Returns the empty string.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubString);\n\t     * // => ['', '']\n\t     */\n\t    function stubString() {\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * A method that returns `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `true`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubTrue);\n\t     * // => [true, true]\n\t     */\n\t    function stubTrue() {\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(0));\n\t     * // => [0, 0, 0, 0]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    });\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    });\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    });\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    });\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.deburr = deburr;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.stubArray = stubArray;\n\t    lodash.stubFalse = stubFalse;\n\t    lodash.stubObject = stubObject;\n\t    lodash.stubString = stubString;\n\t    lodash.stubTrue = stubTrue;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Expose Lodash on the free variable `window` or `self` when available so it's\n\t  // globally accessible, even when bundled with Browserify, Webpack, etc. This\n\t  // also prevents errors in cases where Lodash is loaded by a script tag in the\n\t  // presence of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch\n\t  // for more details. Use `_.noConflict` to remove Lodash from the global object.\n\t  (freeSelf || {})._ = _;\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeModule) {\n\t    // Export for Node.js.\n\t    (freeModule.exports = _)._ = _;\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(19)(module), (function() { return this; }())))\n\n/***/ },\n\n/***/ 37:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(7);\n\tvar Emitter = __webpack_require__(39);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Transport;\n\t\n\t/**\n\t * Transport abstract constructor.\n\t *\n\t * @param {Object} options.\n\t * @api private\n\t */\n\t\n\tfunction Transport (opts) {\n\t  this.path = opts.path;\n\t  this.hostname = opts.hostname;\n\t  this.port = opts.port;\n\t  this.secure = opts.secure;\n\t  this.query = opts.query;\n\t  this.timestampParam = opts.timestampParam;\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.readyState = '';\n\t  this.agent = opts.agent || false;\n\t  this.socket = opts.socket;\n\t  this.enablesXDR = opts.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Transport.prototype);\n\t\n\t/**\n\t * Emits an error.\n\t *\n\t * @param {String} str\n\t * @return {Transport} for chaining\n\t * @api public\n\t */\n\t\n\tTransport.prototype.onError = function (msg, desc) {\n\t  var err = new Error(msg);\n\t  err.type = 'TransportError';\n\t  err.description = desc;\n\t  this.emit('error', err);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Opens the transport.\n\t *\n\t * @api public\n\t */\n\t\n\tTransport.prototype.open = function () {\n\t  if ('closed' == this.readyState || '' == this.readyState) {\n\t    this.readyState = 'opening';\n\t    this.doOpen();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Closes the transport.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.close = function () {\n\t  if ('opening' == this.readyState || 'open' == this.readyState) {\n\t    this.doClose();\n\t    this.onClose();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends multiple packets.\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\tTransport.prototype.send = function(packets){\n\t  if ('open' == this.readyState) {\n\t    this.write(packets);\n\t  } else {\n\t    throw new Error('Transport not open');\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon open\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onOpen = function () {\n\t  this.readyState = 'open';\n\t  this.writable = true;\n\t  this.emit('open');\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @param {String} data\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onData = function(data){\n\t  var packet = parser.decodePacket(data, this.socket.binaryType);\n\t  this.onPacket(packet);\n\t};\n\t\n\t/**\n\t * Called with a decoded packet.\n\t */\n\t\n\tTransport.prototype.onPacket = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon close.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onClose = function () {\n\t  this.readyState = 'closed';\n\t  this.emit('close');\n\t};\n\n\n/***/ },\n\n/***/ 38:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// browser shim for xmlhttprequest module\n\tvar hasCORS = __webpack_require__(197);\n\t\n\tmodule.exports = function(opts) {\n\t  var xdomain = opts.xdomain;\n\t\n\t  // scheme must be same when usign XDomainRequest\n\t  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\t  var xscheme = opts.xscheme;\n\t\n\t  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n\t  // https://github.com/Automattic/engine.io-client/pull/217\n\t  var enablesXDR = opts.enablesXDR;\n\t\n\t  // XMLHttpRequest can be disabled on IE\n\t  try {\n\t    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n\t      return new XMLHttpRequest();\n\t    }\n\t  } catch (e) { }\n\t\n\t  // Use XDomainRequest for IE8 if enablesXDR is true\n\t  // because loading bar keeps flashing when using jsonp-polling\n\t  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\t  try {\n\t    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n\t      return new XDomainRequest();\n\t    }\n\t  } catch (e) { }\n\t\n\t  if (!xdomain) {\n\t    try {\n\t      return new ActiveXObject('Microsoft.XMLHTTP');\n\t    } catch(e) { }\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 39:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks[event] = this._callbacks[event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  var self = this;\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  function on() {\n\t    self.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks[event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks[event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks[event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks[event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n\n/***/ 40:\n/***/ function(module, exports) {\n\n\t/**\n\t * Compiles a querystring\n\t * Returns string representation of the object\n\t *\n\t * @param {Object}\n\t * @api private\n\t */\n\t\n\texports.encode = function (obj) {\n\t  var str = '';\n\t\n\t  for (var i in obj) {\n\t    if (obj.hasOwnProperty(i)) {\n\t      if (str.length) str += '&';\n\t      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n\t    }\n\t  }\n\t\n\t  return str;\n\t};\n\t\n\t/**\n\t * Parses a simple querystring into an object\n\t *\n\t * @param {String} qs\n\t * @api private\n\t */\n\t\n\texports.decode = function(qs){\n\t  var qry = {};\n\t  var pairs = qs.split('&');\n\t  for (var i = 0, l = pairs.length; i < l; i++) {\n\t    var pair = pairs[i].split('=');\n\t    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n\t  }\n\t  return qry;\n\t};\n\n\n/***/ },\n\n/***/ 41:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(4)('socket.io-parser');\n\tvar json = __webpack_require__(203);\n\tvar isArray = __webpack_require__(76);\n\tvar Emitter = __webpack_require__(202);\n\tvar binary = __webpack_require__(201);\n\tvar isBuf = __webpack_require__(75);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = 4;\n\t\n\t/**\n\t * Packet types.\n\t *\n\t * @api public\n\t */\n\t\n\texports.types = [\n\t  'CONNECT',\n\t  'DISCONNECT',\n\t  'EVENT',\n\t  'ACK',\n\t  'ERROR',\n\t  'BINARY_EVENT',\n\t  'BINARY_ACK'\n\t];\n\t\n\t/**\n\t * Packet type `connect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.CONNECT = 0;\n\t\n\t/**\n\t * Packet type `disconnect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.DISCONNECT = 1;\n\t\n\t/**\n\t * Packet type `event`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.EVENT = 2;\n\t\n\t/**\n\t * Packet type `ack`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ACK = 3;\n\t\n\t/**\n\t * Packet type `error`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ERROR = 4;\n\t\n\t/**\n\t * Packet type 'binary event'\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_EVENT = 5;\n\t\n\t/**\n\t * Packet type `binary ack`. For acks with binary arguments.\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_ACK = 6;\n\t\n\t/**\n\t * Encoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Encoder = Encoder;\n\t\n\t/**\n\t * Decoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Decoder = Decoder;\n\t\n\t/**\n\t * A socket.io Encoder instance\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Encoder() {}\n\t\n\t/**\n\t * Encode a packet as a single string if non-binary, or as a\n\t * buffer sequence, depending on packet type.\n\t *\n\t * @param {Object} obj - packet object\n\t * @param {Function} callback - function to handle encodings (likely engine.write)\n\t * @return Calls callback with Array of encodings\n\t * @api public\n\t */\n\t\n\tEncoder.prototype.encode = function(obj, callback){\n\t  debug('encoding packet %j', obj);\n\t\n\t  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n\t    encodeAsBinary(obj, callback);\n\t  }\n\t  else {\n\t    var encoding = encodeAsString(obj);\n\t    callback([encoding]);\n\t  }\n\t};\n\t\n\t/**\n\t * Encode packet as string.\n\t *\n\t * @param {Object} packet\n\t * @return {String} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsString(obj) {\n\t  var str = '';\n\t  var nsp = false;\n\t\n\t  // first is type\n\t  str += obj.type;\n\t\n\t  // attachments if we have them\n\t  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n\t    str += obj.attachments;\n\t    str += '-';\n\t  }\n\t\n\t  // if we have a namespace other than `/`\n\t  // we append it followed by a comma `,`\n\t  if (obj.nsp && '/' != obj.nsp) {\n\t    nsp = true;\n\t    str += obj.nsp;\n\t  }\n\t\n\t  // immediately followed by the id\n\t  if (null != obj.id) {\n\t    if (nsp) {\n\t      str += ',';\n\t      nsp = false;\n\t    }\n\t    str += obj.id;\n\t  }\n\t\n\t  // json data\n\t  if (null != obj.data) {\n\t    if (nsp) str += ',';\n\t    str += json.stringify(obj.data);\n\t  }\n\t\n\t  debug('encoded %j as %s', obj, str);\n\t  return str;\n\t}\n\t\n\t/**\n\t * Encode packet as 'buffer sequence' by removing blobs, and\n\t * deconstructing packet into object with placeholders and\n\t * a list of buffers.\n\t *\n\t * @param {Object} packet\n\t * @return {Buffer} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsBinary(obj, callback) {\n\t\n\t  function writeEncoding(bloblessData) {\n\t    var deconstruction = binary.deconstructPacket(bloblessData);\n\t    var pack = encodeAsString(deconstruction.packet);\n\t    var buffers = deconstruction.buffers;\n\t\n\t    buffers.unshift(pack); // add packet info to beginning of data list\n\t    callback(buffers); // write all the buffers\n\t  }\n\t\n\t  binary.removeBlobs(obj, writeEncoding);\n\t}\n\t\n\t/**\n\t * A socket.io Decoder instance\n\t *\n\t * @return {Object} decoder\n\t * @api public\n\t */\n\t\n\tfunction Decoder() {\n\t  this.reconstructor = null;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter` with Decoder.\n\t */\n\t\n\tEmitter(Decoder.prototype);\n\t\n\t/**\n\t * Decodes an ecoded packet string into packet JSON.\n\t *\n\t * @param {String} obj - encoded packet\n\t * @return {Object} packet\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.add = function(obj) {\n\t  var packet;\n\t  if ('string' == typeof obj) {\n\t    packet = decodeString(obj);\n\t    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n\t      this.reconstructor = new BinaryReconstructor(packet);\n\t\n\t      // no attachments, labeled binary but no binary data to follow\n\t      if (this.reconstructor.reconPack.attachments === 0) {\n\t        this.emit('decoded', packet);\n\t      }\n\t    } else { // non-binary full packet\n\t      this.emit('decoded', packet);\n\t    }\n\t  }\n\t  else if (isBuf(obj) || obj.base64) { // raw binary data\n\t    if (!this.reconstructor) {\n\t      throw new Error('got binary data when not reconstructing a packet');\n\t    } else {\n\t      packet = this.reconstructor.takeBinaryData(obj);\n\t      if (packet) { // received final buffer\n\t        this.reconstructor = null;\n\t        this.emit('decoded', packet);\n\t      }\n\t    }\n\t  }\n\t  else {\n\t    throw new Error('Unknown type: ' + obj);\n\t  }\n\t};\n\t\n\t/**\n\t * Decode a packet String (JSON data)\n\t *\n\t * @param {String} str\n\t * @return {Object} packet\n\t * @api private\n\t */\n\t\n\tfunction decodeString(str) {\n\t  var p = {};\n\t  var i = 0;\n\t\n\t  // look up type\n\t  p.type = Number(str.charAt(0));\n\t  if (null == exports.types[p.type]) return error();\n\t\n\t  // look up attachments if type binary\n\t  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n\t    var buf = '';\n\t    while (str.charAt(++i) != '-') {\n\t      buf += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    if (buf != Number(buf) || str.charAt(i) != '-') {\n\t      throw new Error('Illegal attachments');\n\t    }\n\t    p.attachments = Number(buf);\n\t  }\n\t\n\t  // look up namespace (if any)\n\t  if ('/' == str.charAt(i + 1)) {\n\t    p.nsp = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (',' == c) break;\n\t      p.nsp += c;\n\t      if (i == str.length) break;\n\t    }\n\t  } else {\n\t    p.nsp = '/';\n\t  }\n\t\n\t  // look up id\n\t  var next = str.charAt(i + 1);\n\t  if ('' !== next && Number(next) == next) {\n\t    p.id = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (null == c || Number(c) != c) {\n\t        --i;\n\t        break;\n\t      }\n\t      p.id += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    p.id = Number(p.id);\n\t  }\n\t\n\t  // look up json data\n\t  if (str.charAt(++i)) {\n\t    try {\n\t      p.data = json.parse(str.substr(i));\n\t    } catch(e){\n\t      return error();\n\t    }\n\t  }\n\t\n\t  debug('decoded %s as %j', str, p);\n\t  return p;\n\t}\n\t\n\t/**\n\t * Deallocates a parser's resources\n\t *\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.destroy = function() {\n\t  if (this.reconstructor) {\n\t    this.reconstructor.finishedReconstruction();\n\t  }\n\t};\n\t\n\t/**\n\t * A manager of a binary event's 'buffer sequence'. Should\n\t * be constructed whenever a packet of type BINARY_EVENT is\n\t * decoded.\n\t *\n\t * @param {Object} packet\n\t * @return {BinaryReconstructor} initialized reconstructor\n\t * @api private\n\t */\n\t\n\tfunction BinaryReconstructor(packet) {\n\t  this.reconPack = packet;\n\t  this.buffers = [];\n\t}\n\t\n\t/**\n\t * Method to be called when binary data received from connection\n\t * after a BINARY_EVENT packet.\n\t *\n\t * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n\t * @return {null | Object} returns null if more binary data is expected or\n\t *   a reconstructed packet object if all buffers have been received.\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n\t  this.buffers.push(binData);\n\t  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n\t    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n\t    this.finishedReconstruction();\n\t    return packet;\n\t  }\n\t  return null;\n\t};\n\t\n\t/**\n\t * Cleans up binary packet reconstruction variables.\n\t *\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.finishedReconstruction = function() {\n\t  this.reconPack = null;\n\t  this.buffers = [];\n\t};\n\t\n\tfunction error(data){\n\t  return {\n\t    type: exports.ERROR,\n\t    data: 'parser error'\n\t  };\n\t}\n\n\n/***/ },\n\n/***/ 65:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar eio = __webpack_require__(183);\n\tvar Socket = __webpack_require__(67);\n\tvar Emitter = __webpack_require__(69);\n\tvar parser = __webpack_require__(41);\n\tvar on = __webpack_require__(66);\n\tvar bind = __webpack_require__(68);\n\tvar debug = __webpack_require__(4)('socket.io-client:manager');\n\tvar indexOf = __webpack_require__(73);\n\tvar Backoff = __webpack_require__(180);\n\t\n\t/**\n\t * IE6+ hasOwnProperty\n\t */\n\t\n\tvar has = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * Module exports\n\t */\n\t\n\tmodule.exports = Manager;\n\t\n\t/**\n\t * `Manager` constructor.\n\t *\n\t * @param {String} engine instance or engine uri/opts\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Manager(uri, opts){\n\t  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\t  if (uri && ('object' == typeof uri)) {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t  opts = opts || {};\n\t\n\t  opts.path = opts.path || '/socket.io';\n\t  this.nsps = {};\n\t  this.subs = [];\n\t  this.opts = opts;\n\t  this.reconnection(opts.reconnection !== false);\n\t  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n\t  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n\t  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n\t  this.randomizationFactor(opts.randomizationFactor || 0.5);\n\t  this.backoff = new Backoff({\n\t    min: this.reconnectionDelay(),\n\t    max: this.reconnectionDelayMax(),\n\t    jitter: this.randomizationFactor()\n\t  });\n\t  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n\t  this.readyState = 'closed';\n\t  this.uri = uri;\n\t  this.connecting = [];\n\t  this.lastPing = null;\n\t  this.encoding = false;\n\t  this.packetBuffer = [];\n\t  this.encoder = new parser.Encoder();\n\t  this.decoder = new parser.Decoder();\n\t  this.autoConnect = opts.autoConnect !== false;\n\t  if (this.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Propagate given event to sockets and emit on `this`\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.emitAll = function() {\n\t  this.emit.apply(this, arguments);\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Update `socket.id` of all sockets\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.updateSocketIds = function(){\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].id = this.engine.id;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Manager.prototype);\n\t\n\t/**\n\t * Sets the `reconnection` config.\n\t *\n\t * @param {Boolean} true/false if it should automatically reconnect\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnection = function(v){\n\t  if (!arguments.length) return this._reconnection;\n\t  this._reconnection = !!v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the reconnection attempts config.\n\t *\n\t * @param {Number} max reconnection attempts before giving up\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionAttempts = function(v){\n\t  if (!arguments.length) return this._reconnectionAttempts;\n\t  this._reconnectionAttempts = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelay = function(v){\n\t  if (!arguments.length) return this._reconnectionDelay;\n\t  this._reconnectionDelay = v;\n\t  this.backoff && this.backoff.setMin(v);\n\t  return this;\n\t};\n\t\n\tManager.prototype.randomizationFactor = function(v){\n\t  if (!arguments.length) return this._randomizationFactor;\n\t  this._randomizationFactor = v;\n\t  this.backoff && this.backoff.setJitter(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the maximum delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelayMax = function(v){\n\t  if (!arguments.length) return this._reconnectionDelayMax;\n\t  this._reconnectionDelayMax = v;\n\t  this.backoff && this.backoff.setMax(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the connection timeout. `false` to disable\n\t *\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.timeout = function(v){\n\t  if (!arguments.length) return this._timeout;\n\t  this._timeout = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Starts trying to reconnect if reconnection is enabled and we have not\n\t * started reconnecting yet\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.maybeReconnectOnOpen = function() {\n\t  // Only try to reconnect if it's the first time we're connecting\n\t  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n\t    // keeps reconnection from firing twice for the same reconnection loop\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Sets the current transport `socket`.\n\t *\n\t * @param {Function} optional, callback\n\t * @return {Manager} self\n\t * @api public\n\t */\n\t\n\tManager.prototype.open =\n\tManager.prototype.connect = function(fn){\n\t  debug('readyState %s', this.readyState);\n\t  if (~this.readyState.indexOf('open')) return this;\n\t\n\t  debug('opening %s', this.uri);\n\t  this.engine = eio(this.uri, this.opts);\n\t  var socket = this.engine;\n\t  var self = this;\n\t  this.readyState = 'opening';\n\t  this.skipReconnect = false;\n\t\n\t  // emit `open`\n\t  var openSub = on(socket, 'open', function() {\n\t    self.onopen();\n\t    fn && fn();\n\t  });\n\t\n\t  // emit `connect_error`\n\t  var errorSub = on(socket, 'error', function(data){\n\t    debug('connect_error');\n\t    self.cleanup();\n\t    self.readyState = 'closed';\n\t    self.emitAll('connect_error', data);\n\t    if (fn) {\n\t      var err = new Error('Connection error');\n\t      err.data = data;\n\t      fn(err);\n\t    } else {\n\t      // Only do this if there is no fn to handle the error\n\t      self.maybeReconnectOnOpen();\n\t    }\n\t  });\n\t\n\t  // emit `connect_timeout`\n\t  if (false !== this._timeout) {\n\t    var timeout = this._timeout;\n\t    debug('connect attempt will timeout after %d', timeout);\n\t\n\t    // set timer\n\t    var timer = setTimeout(function(){\n\t      debug('connect attempt timed out after %d', timeout);\n\t      openSub.destroy();\n\t      socket.close();\n\t      socket.emit('error', 'timeout');\n\t      self.emitAll('connect_timeout', timeout);\n\t    }, timeout);\n\t\n\t    this.subs.push({\n\t      destroy: function(){\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t\n\t  this.subs.push(openSub);\n\t  this.subs.push(errorSub);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport open.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onopen = function(){\n\t  debug('open');\n\t\n\t  // clear old subs\n\t  this.cleanup();\n\t\n\t  // mark as open\n\t  this.readyState = 'open';\n\t  this.emit('open');\n\t\n\t  // add new subs\n\t  var socket = this.engine;\n\t  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n\t  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n\t  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n\t  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n\t  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n\t  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n\t};\n\t\n\t/**\n\t * Called upon a ping.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onping = function(){\n\t  this.lastPing = new Date;\n\t  this.emitAll('ping');\n\t};\n\t\n\t/**\n\t * Called upon a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onpong = function(){\n\t  this.emitAll('pong', new Date - this.lastPing);\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondata = function(data){\n\t  this.decoder.add(data);\n\t};\n\t\n\t/**\n\t * Called when parser fully decodes a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondecoded = function(packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon socket error.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onerror = function(err){\n\t  debug('error', err);\n\t  this.emitAll('error', err);\n\t};\n\t\n\t/**\n\t * Creates a new socket for the given `nsp`.\n\t *\n\t * @return {Socket}\n\t * @api public\n\t */\n\t\n\tManager.prototype.socket = function(nsp){\n\t  var socket = this.nsps[nsp];\n\t  if (!socket) {\n\t    socket = new Socket(this, nsp);\n\t    this.nsps[nsp] = socket;\n\t    var self = this;\n\t    socket.on('connecting', onConnecting);\n\t    socket.on('connect', function(){\n\t      socket.id = self.engine.id;\n\t    });\n\t\n\t    if (this.autoConnect) {\n\t      // manually call here since connecting evnet is fired before listening\n\t      onConnecting();\n\t    }\n\t  }\n\t\n\t  function onConnecting() {\n\t    if (!~indexOf(self.connecting, socket)) {\n\t      self.connecting.push(socket);\n\t    }\n\t  }\n\t\n\t  return socket;\n\t};\n\t\n\t/**\n\t * Called upon a socket close.\n\t *\n\t * @param {Socket} socket\n\t */\n\t\n\tManager.prototype.destroy = function(socket){\n\t  var index = indexOf(this.connecting, socket);\n\t  if (~index) this.connecting.splice(index, 1);\n\t  if (this.connecting.length) return;\n\t\n\t  this.close();\n\t};\n\t\n\t/**\n\t * Writes a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tManager.prototype.packet = function(packet){\n\t  debug('writing packet %j', packet);\n\t  var self = this;\n\t\n\t  if (!self.encoding) {\n\t    // encode, then write to engine with result\n\t    self.encoding = true;\n\t    this.encoder.encode(packet, function(encodedPackets) {\n\t      for (var i = 0; i < encodedPackets.length; i++) {\n\t        self.engine.write(encodedPackets[i], packet.options);\n\t      }\n\t      self.encoding = false;\n\t      self.processPacketQueue();\n\t    });\n\t  } else { // add packet to the queue\n\t    self.packetBuffer.push(packet);\n\t  }\n\t};\n\t\n\t/**\n\t * If packet buffer is non-empty, begins encoding the\n\t * next packet in line.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.processPacketQueue = function() {\n\t  if (this.packetBuffer.length > 0 && !this.encoding) {\n\t    var pack = this.packetBuffer.shift();\n\t    this.packet(pack);\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up transport subscriptions and packet buffer.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.cleanup = function(){\n\t  debug('cleanup');\n\t\n\t  var sub;\n\t  while (sub = this.subs.shift()) sub.destroy();\n\t\n\t  this.packetBuffer = [];\n\t  this.encoding = false;\n\t  this.lastPing = null;\n\t\n\t  this.decoder.destroy();\n\t};\n\t\n\t/**\n\t * Close the current socket.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.close =\n\tManager.prototype.disconnect = function(){\n\t  debug('disconnect');\n\t  this.skipReconnect = true;\n\t  this.reconnecting = false;\n\t  if ('opening' == this.readyState) {\n\t    // `onclose` will not fire because\n\t    // an open event never happened\n\t    this.cleanup();\n\t  }\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  if (this.engine) this.engine.close();\n\t};\n\t\n\t/**\n\t * Called upon engine close.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onclose = function(reason){\n\t  debug('onclose');\n\t\n\t  this.cleanup();\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  this.emit('close', reason);\n\t\n\t  if (this._reconnection && !this.skipReconnect) {\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\n\t * Attempt a reconnection.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.reconnect = function(){\n\t  if (this.reconnecting || this.skipReconnect) return this;\n\t\n\t  var self = this;\n\t\n\t  if (this.backoff.attempts >= this._reconnectionAttempts) {\n\t    debug('reconnect failed');\n\t    this.backoff.reset();\n\t    this.emitAll('reconnect_failed');\n\t    this.reconnecting = false;\n\t  } else {\n\t    var delay = this.backoff.duration();\n\t    debug('will wait %dms before reconnect attempt', delay);\n\t\n\t    this.reconnecting = true;\n\t    var timer = setTimeout(function(){\n\t      if (self.skipReconnect) return;\n\t\n\t      debug('attempting reconnect');\n\t      self.emitAll('reconnect_attempt', self.backoff.attempts);\n\t      self.emitAll('reconnecting', self.backoff.attempts);\n\t\n\t      // check again for the case socket closed in above events\n\t      if (self.skipReconnect) return;\n\t\n\t      self.open(function(err){\n\t        if (err) {\n\t          debug('reconnect attempt error');\n\t          self.reconnecting = false;\n\t          self.reconnect();\n\t          self.emitAll('reconnect_error', err.data);\n\t        } else {\n\t          debug('reconnect success');\n\t          self.onreconnect();\n\t        }\n\t      });\n\t    }, delay);\n\t\n\t    this.subs.push({\n\t      destroy: function(){\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful reconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onreconnect = function(){\n\t  var attempt = this.backoff.attempts;\n\t  this.reconnecting = false;\n\t  this.backoff.reset();\n\t  this.updateSocketIds();\n\t  this.emitAll('reconnect', attempt);\n\t};\n\n\n/***/ },\n\n/***/ 66:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = on;\n\t\n\t/**\n\t * Helper for subscriptions.\n\t *\n\t * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n\t * @param {String} event name\n\t * @param {Function} callback\n\t * @api public\n\t */\n\t\n\tfunction on(obj, ev, fn) {\n\t  obj.on(ev, fn);\n\t  return {\n\t    destroy: function(){\n\t      obj.removeListener(ev, fn);\n\t    }\n\t  };\n\t}\n\n\n/***/ },\n\n/***/ 67:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(41);\n\tvar Emitter = __webpack_require__(69);\n\tvar toArray = __webpack_require__(204);\n\tvar on = __webpack_require__(66);\n\tvar bind = __webpack_require__(68);\n\tvar debug = __webpack_require__(4)('socket.io-client:socket');\n\tvar hasBin = __webpack_require__(199);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = Socket;\n\t\n\t/**\n\t * Internal events (blacklisted).\n\t * These events can't be emitted by the user.\n\t *\n\t * @api private\n\t */\n\t\n\tvar events = {\n\t  connect: 1,\n\t  connect_error: 1,\n\t  connect_timeout: 1,\n\t  connecting: 1,\n\t  disconnect: 1,\n\t  error: 1,\n\t  reconnect: 1,\n\t  reconnect_attempt: 1,\n\t  reconnect_failed: 1,\n\t  reconnect_error: 1,\n\t  reconnecting: 1,\n\t  ping: 1,\n\t  pong: 1\n\t};\n\t\n\t/**\n\t * Shortcut to `Emitter#emit`.\n\t */\n\t\n\tvar emit = Emitter.prototype.emit;\n\t\n\t/**\n\t * `Socket` constructor.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Socket(io, nsp){\n\t  this.io = io;\n\t  this.nsp = nsp;\n\t  this.json = this; // compat\n\t  this.ids = 0;\n\t  this.acks = {};\n\t  this.receiveBuffer = [];\n\t  this.sendBuffer = [];\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  if (this.io.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Subscribe to open, close and packet events\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.subEvents = function() {\n\t  if (this.subs) return;\n\t\n\t  var io = this.io;\n\t  this.subs = [\n\t    on(io, 'open', bind(this, 'onopen')),\n\t    on(io, 'packet', bind(this, 'onpacket')),\n\t    on(io, 'close', bind(this, 'onclose'))\n\t  ];\n\t};\n\t\n\t/**\n\t * \"Opens\" the socket.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.open =\n\tSocket.prototype.connect = function(){\n\t  if (this.connected) return this;\n\t\n\t  this.subEvents();\n\t  this.io.open(); // ensure open\n\t  if ('open' == this.io.readyState) this.onopen();\n\t  this.emit('connecting');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a `message` event.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.send = function(){\n\t  var args = toArray(arguments);\n\t  args.unshift('message');\n\t  this.emit.apply(this, args);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override `emit`.\n\t * If the event is in `events`, it's emitted normally.\n\t *\n\t * @param {String} event name\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.emit = function(ev){\n\t  if (events.hasOwnProperty(ev)) {\n\t    emit.apply(this, arguments);\n\t    return this;\n\t  }\n\t\n\t  var args = toArray(arguments);\n\t  var parserType = parser.EVENT; // default\n\t  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n\t  var packet = { type: parserType, data: args };\n\t\n\t  packet.options = {};\n\t  packet.options.compress = !this.flags || false !== this.flags.compress;\n\t\n\t  // event ack callback\n\t  if ('function' == typeof args[args.length - 1]) {\n\t    debug('emitting packet with ack id %d', this.ids);\n\t    this.acks[this.ids] = args.pop();\n\t    packet.id = this.ids++;\n\t  }\n\t\n\t  if (this.connected) {\n\t    this.packet(packet);\n\t  } else {\n\t    this.sendBuffer.push(packet);\n\t  }\n\t\n\t  delete this.flags;\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.packet = function(packet){\n\t  packet.nsp = this.nsp;\n\t  this.io.packet(packet);\n\t};\n\t\n\t/**\n\t * Called upon engine `open`.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onopen = function(){\n\t  debug('transport is open - connecting');\n\t\n\t  // write connect packet if necessary\n\t  if ('/' != this.nsp) {\n\t    this.packet({ type: parser.CONNECT });\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon engine `close`.\n\t *\n\t * @param {String} reason\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onclose = function(reason){\n\t  debug('close (%s)', reason);\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  delete this.id;\n\t  this.emit('disconnect', reason);\n\t};\n\t\n\t/**\n\t * Called with socket packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onpacket = function(packet){\n\t  if (packet.nsp != this.nsp) return;\n\t\n\t  switch (packet.type) {\n\t    case parser.CONNECT:\n\t      this.onconnect();\n\t      break;\n\t\n\t    case parser.EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.BINARY_EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.BINARY_ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.DISCONNECT:\n\t      this.ondisconnect();\n\t      break;\n\t\n\t    case parser.ERROR:\n\t      this.emit('error', packet.data);\n\t      break;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon a server event.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onevent = function(packet){\n\t  var args = packet.data || [];\n\t  debug('emitting event %j', args);\n\t\n\t  if (null != packet.id) {\n\t    debug('attaching ack callback to event');\n\t    args.push(this.ack(packet.id));\n\t  }\n\t\n\t  if (this.connected) {\n\t    emit.apply(this, args);\n\t  } else {\n\t    this.receiveBuffer.push(args);\n\t  }\n\t};\n\t\n\t/**\n\t * Produces an ack callback to emit with an event.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ack = function(id){\n\t  var self = this;\n\t  var sent = false;\n\t  return function(){\n\t    // prevent double callbacks\n\t    if (sent) return;\n\t    sent = true;\n\t    var args = toArray(arguments);\n\t    debug('sending ack %j', args);\n\t\n\t    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n\t    self.packet({\n\t      type: type,\n\t      id: id,\n\t      data: args\n\t    });\n\t  };\n\t};\n\t\n\t/**\n\t * Called upon a server acknowlegement.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onack = function(packet){\n\t  var ack = this.acks[packet.id];\n\t  if ('function' == typeof ack) {\n\t    debug('calling ack %s with %j', packet.id, packet.data);\n\t    ack.apply(this, packet.data);\n\t    delete this.acks[packet.id];\n\t  } else {\n\t    debug('bad ack %s', packet.id);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon server connect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onconnect = function(){\n\t  this.connected = true;\n\t  this.disconnected = false;\n\t  this.emit('connect');\n\t  this.emitBuffered();\n\t};\n\t\n\t/**\n\t * Emit buffered events (received and emitted).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.emitBuffered = function(){\n\t  var i;\n\t  for (i = 0; i < this.receiveBuffer.length; i++) {\n\t    emit.apply(this, this.receiveBuffer[i]);\n\t  }\n\t  this.receiveBuffer = [];\n\t\n\t  for (i = 0; i < this.sendBuffer.length; i++) {\n\t    this.packet(this.sendBuffer[i]);\n\t  }\n\t  this.sendBuffer = [];\n\t};\n\t\n\t/**\n\t * Called upon server disconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ondisconnect = function(){\n\t  debug('server disconnect (%s)', this.nsp);\n\t  this.destroy();\n\t  this.onclose('io server disconnect');\n\t};\n\t\n\t/**\n\t * Called upon forced client/server side disconnections,\n\t * this method ensures the manager stops tracking us and\n\t * that reconnections don't get triggered for this.\n\t *\n\t * @api private.\n\t */\n\t\n\tSocket.prototype.destroy = function(){\n\t  if (this.subs) {\n\t    // clean subscriptions to avoid reconnections\n\t    for (var i = 0; i < this.subs.length; i++) {\n\t      this.subs[i].destroy();\n\t    }\n\t    this.subs = null;\n\t  }\n\t\n\t  this.io.destroy(this);\n\t};\n\t\n\t/**\n\t * Disconnects the socket manually.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.close =\n\tSocket.prototype.disconnect = function(){\n\t  if (this.connected) {\n\t    debug('performing disconnect (%s)', this.nsp);\n\t    this.packet({ type: parser.DISCONNECT });\n\t  }\n\t\n\t  // remove socket from pool\n\t  this.destroy();\n\t\n\t  if (this.connected) {\n\t    // fire events\n\t    this.onclose('io client disconnect');\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the compress flag.\n\t *\n\t * @param {Boolean} if `true`, compresses the sending data\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.compress = function(compress){\n\t  this.flags = this.flags || {};\n\t  this.flags.compress = compress;\n\t  return this;\n\t};\n\n\n/***/ },\n\n/***/ 68:\n/***/ function(module, exports) {\n\n\t/**\n\t * Slice reference.\n\t */\n\t\n\tvar slice = [].slice;\n\t\n\t/**\n\t * Bind `obj` to `fn`.\n\t *\n\t * @param {Object} obj\n\t * @param {Function|String} fn or string\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(obj, fn){\n\t  if ('string' == typeof fn) fn = obj[fn];\n\t  if ('function' != typeof fn) throw new Error('bind() requires a function');\n\t  var args = slice.call(arguments, 2);\n\t  return function(){\n\t    return fn.apply(obj, args.concat(slice.call(arguments)));\n\t  }\n\t};\n\n\n/***/ },\n\n/***/ 69:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  function on() {\n\t    this.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks['$' + event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks['$' + event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks['$' + event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks['$' + event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n\n/***/ 70:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies\n\t */\n\t\n\tvar XMLHttpRequest = __webpack_require__(38);\n\tvar XHR = __webpack_require__(187);\n\tvar JSONP = __webpack_require__(186);\n\tvar websocket = __webpack_require__(188);\n\t\n\t/**\n\t * Export transports.\n\t */\n\t\n\texports.polling = polling;\n\texports.websocket = websocket;\n\t\n\t/**\n\t * Polling transport polymorphic constructor.\n\t * Decides on xhr vs jsonp based on feature detection.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction polling(opts){\n\t  var xhr;\n\t  var xd = false;\n\t  var xs = false;\n\t  var jsonp = false !== opts.jsonp;\n\t\n\t  if (global.location) {\n\t    var isSSL = 'https:' == location.protocol;\n\t    var port = location.port;\n\t\n\t    // some user agents have empty `location.port`\n\t    if (!port) {\n\t      port = isSSL ? 443 : 80;\n\t    }\n\t\n\t    xd = opts.hostname != location.hostname || port != opts.port;\n\t    xs = opts.secure != isSSL;\n\t  }\n\t\n\t  opts.xdomain = xd;\n\t  opts.xscheme = xs;\n\t  xhr = new XMLHttpRequest(opts);\n\t\n\t  if ('open' in xhr && !opts.forceJSONP) {\n\t    return new XHR(opts);\n\t  } else {\n\t    if (!jsonp) throw new Error('JSONP disabled');\n\t    return new JSONP(opts);\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 71:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(37);\n\tvar parseqs = __webpack_require__(40);\n\tvar parser = __webpack_require__(7);\n\tvar inherit = __webpack_require__(16);\n\tvar yeast = __webpack_require__(72);\n\tvar debug = __webpack_require__(4)('engine.io-client:polling');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Polling;\n\t\n\t/**\n\t * Is XHR2 supported?\n\t */\n\t\n\tvar hasXHR2 = (function() {\n\t  var XMLHttpRequest = __webpack_require__(38);\n\t  var xhr = new XMLHttpRequest({ xdomain: false });\n\t  return null != xhr.responseType;\n\t})();\n\t\n\t/**\n\t * Polling interface.\n\t *\n\t * @param {Object} opts\n\t * @api private\n\t */\n\t\n\tfunction Polling(opts){\n\t  var forceBase64 = (opts && opts.forceBase64);\n\t  if (!hasXHR2 || forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(Polling, Transport);\n\t\n\t/**\n\t * Transport name.\n\t */\n\t\n\tPolling.prototype.name = 'polling';\n\t\n\t/**\n\t * Opens the socket (triggers polling). We write a PING message to determine\n\t * when the transport is open.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.doOpen = function(){\n\t  this.poll();\n\t};\n\t\n\t/**\n\t * Pauses polling.\n\t *\n\t * @param {Function} callback upon buffers are flushed and transport is paused\n\t * @api private\n\t */\n\t\n\tPolling.prototype.pause = function(onPause){\n\t  var pending = 0;\n\t  var self = this;\n\t\n\t  this.readyState = 'pausing';\n\t\n\t  function pause(){\n\t    debug('paused');\n\t    self.readyState = 'paused';\n\t    onPause();\n\t  }\n\t\n\t  if (this.polling || !this.writable) {\n\t    var total = 0;\n\t\n\t    if (this.polling) {\n\t      debug('we are currently polling - waiting to pause');\n\t      total++;\n\t      this.once('pollComplete', function(){\n\t        debug('pre-pause polling complete');\n\t        --total || pause();\n\t      });\n\t    }\n\t\n\t    if (!this.writable) {\n\t      debug('we are currently writing - waiting to pause');\n\t      total++;\n\t      this.once('drain', function(){\n\t        debug('pre-pause writing complete');\n\t        --total || pause();\n\t      });\n\t    }\n\t  } else {\n\t    pause();\n\t  }\n\t};\n\t\n\t/**\n\t * Starts polling cycle.\n\t *\n\t * @api public\n\t */\n\t\n\tPolling.prototype.poll = function(){\n\t  debug('polling');\n\t  this.polling = true;\n\t  this.doPoll();\n\t  this.emit('poll');\n\t};\n\t\n\t/**\n\t * Overloads onData to detect payloads.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.onData = function(data){\n\t  var self = this;\n\t  debug('polling got data %s', data);\n\t  var callback = function(packet, index, total) {\n\t    // if its the first message we consider the transport open\n\t    if ('opening' == self.readyState) {\n\t      self.onOpen();\n\t    }\n\t\n\t    // if its a close packet, we close the ongoing requests\n\t    if ('close' == packet.type) {\n\t      self.onClose();\n\t      return false;\n\t    }\n\t\n\t    // otherwise bypass onData and handle the message\n\t    self.onPacket(packet);\n\t  };\n\t\n\t  // decode payload\n\t  parser.decodePayload(data, this.socket.binaryType, callback);\n\t\n\t  // if an event did not trigger closing\n\t  if ('closed' != this.readyState) {\n\t    // if we got data we're not polling\n\t    this.polling = false;\n\t    this.emit('pollComplete');\n\t\n\t    if ('open' == this.readyState) {\n\t      this.poll();\n\t    } else {\n\t      debug('ignoring poll - transport state \"%s\"', this.readyState);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * For polling, send a close packet.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.doClose = function(){\n\t  var self = this;\n\t\n\t  function close(){\n\t    debug('writing close packet');\n\t    self.write([{ type: 'close' }]);\n\t  }\n\t\n\t  if ('open' == this.readyState) {\n\t    debug('transport open - closing');\n\t    close();\n\t  } else {\n\t    // in case we're trying to close while\n\t    // handshaking is in progress (GH-164)\n\t    debug('transport not open - deferring close');\n\t    this.once('open', close);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes a packets payload.\n\t *\n\t * @param {Array} data packets\n\t * @param {Function} drain callback\n\t * @api private\n\t */\n\t\n\tPolling.prototype.write = function(packets){\n\t  var self = this;\n\t  this.writable = false;\n\t  var callbackfn = function() {\n\t    self.writable = true;\n\t    self.emit('drain');\n\t  };\n\t\n\t  var self = this;\n\t  parser.encodePayload(packets, this.supportsBinary, function(data) {\n\t    self.doWrite(data, callbackfn);\n\t  });\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.uri = function(){\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'https' : 'http';\n\t  var port = '';\n\t\n\t  // cache busting is forced\n\t  if (false !== this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  if (!this.supportsBinary && !query.sid) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // avoid port if default for schema\n\t  if (this.port && (('https' == schema && this.port != 443) ||\n\t     ('http' == schema && this.port != 80))) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n\t};\n\n\n/***/ },\n\n/***/ 72:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n\t  , length = 64\n\t  , map = {}\n\t  , seed = 0\n\t  , i = 0\n\t  , prev;\n\t\n\t/**\n\t * Return a string representing the specified number.\n\t *\n\t * @param {Number} num The number to convert.\n\t * @returns {String} The string representation of the number.\n\t * @api public\n\t */\n\tfunction encode(num) {\n\t  var encoded = '';\n\t\n\t  do {\n\t    encoded = alphabet[num % length] + encoded;\n\t    num = Math.floor(num / length);\n\t  } while (num > 0);\n\t\n\t  return encoded;\n\t}\n\t\n\t/**\n\t * Return the integer value specified by the given string.\n\t *\n\t * @param {String} str The string to convert.\n\t * @returns {Number} The integer value represented by the string.\n\t * @api public\n\t */\n\tfunction decode(str) {\n\t  var decoded = 0;\n\t\n\t  for (i = 0; i < str.length; i++) {\n\t    decoded = decoded * length + map[str.charAt(i)];\n\t  }\n\t\n\t  return decoded;\n\t}\n\t\n\t/**\n\t * Yeast: A tiny growing id generator.\n\t *\n\t * @returns {String} A unique id.\n\t * @api public\n\t */\n\tfunction yeast() {\n\t  var now = encode(+new Date());\n\t\n\t  if (now !== prev) return seed = 0, prev = now;\n\t  return now +'.'+ encode(seed++);\n\t}\n\t\n\t//\n\t// Map each character to its index.\n\t//\n\tfor (; i < length; i++) map[alphabet[i]] = i;\n\t\n\t//\n\t// Expose the `yeast`, `encode` and `decode` functions.\n\t//\n\tyeast.encode = encode;\n\tyeast.decode = decode;\n\tmodule.exports = yeast;\n\n\n/***/ },\n\n/***/ 73:\n/***/ function(module, exports) {\n\n\t\n\tvar indexOf = [].indexOf;\n\t\n\tmodule.exports = function(arr, obj){\n\t  if (indexOf) return arr.indexOf(obj);\n\t  for (var i = 0; i < arr.length; ++i) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t};\n\n/***/ },\n\n/***/ 74:\n/***/ function(module, exports) {\n\n\t/**\n\t * Parses an URI\n\t *\n\t * @author Steven Levithan <stevenlevithan.com> (MIT license)\n\t * @api private\n\t */\n\t\n\tvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\t\n\tvar parts = [\n\t    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n\t];\n\t\n\tmodule.exports = function parseuri(str) {\n\t    var src = str,\n\t        b = str.indexOf('['),\n\t        e = str.indexOf(']');\n\t\n\t    if (b != -1 && e != -1) {\n\t        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n\t    }\n\t\n\t    var m = re.exec(str || ''),\n\t        uri = {},\n\t        i = 14;\n\t\n\t    while (i--) {\n\t        uri[parts[i]] = m[i] || '';\n\t    }\n\t\n\t    if (b != -1 && e != -1) {\n\t        uri.source = src;\n\t        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n\t        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n\t        uri.ipv6uri = true;\n\t    }\n\t\n\t    return uri;\n\t};\n\n\n/***/ },\n\n/***/ 75:\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\tmodule.exports = isBuf;\n\t\n\t/**\n\t * Returns true if obj is a buffer or an arraybuffer.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction isBuf(obj) {\n\t  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 76:\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n\n/***/ 91:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.studentIndex = exports.zipSampleToStudent = undefined;\n\t\n\tvar _lodash = __webpack_require__(22);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar zipSampleToStudent = exports.zipSampleToStudent = function zipSampleToStudent(samples, students) {\n\t  if (samples.length > 0) {\n\t    _lodash2.default.forEach(samples, function (sample) {\n\t      var index = getIndexOfStudents(students, sample.student);\n\t      if (index > -1) {\n\t        var student = students[index];\n\t        if (_lodash2.default.has(sample, 'finishTime')) {\n\t          student['status'] = 'finish';\n\t        }\n\t        student['sample'] = sample;\n\t        students[index] = student;\n\t      }\n\t    });\n\t    return students;\n\t  }\n\t};\n\t\n\tvar studentIndex = exports.studentIndex = function studentIndex(students, student_id) {\n\t  return getIndexOfStudents(students, student_id);\n\t};\n\t\n\tfunction getIndexOfStudents(students, student_id) {\n\t  return _lodash2.default.findIndex(students, function (student) {\n\t    return student._id === student_id;\n\t  });\n\t}\n\n/***/ },\n\n/***/ 119:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* MIT license */\r\n\tvar convert = __webpack_require__(123);\r\n\tvar string = __webpack_require__(120);\r\n\t\r\n\tvar Color = function (obj) {\r\n\t\tif (obj instanceof Color) {\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t\tif (!(this instanceof Color)) {\r\n\t\t\treturn new Color(obj);\r\n\t\t}\r\n\t\r\n\t\tthis.values = {\r\n\t\t\trgb: [0, 0, 0],\r\n\t\t\thsl: [0, 0, 0],\r\n\t\t\thsv: [0, 0, 0],\r\n\t\t\thwb: [0, 0, 0],\r\n\t\t\tcmyk: [0, 0, 0, 0],\r\n\t\t\talpha: 1\r\n\t\t};\r\n\t\r\n\t\t// parse Color() argument\r\n\t\tvar vals;\r\n\t\tif (typeof obj === 'string') {\r\n\t\t\tvals = string.getRgba(obj);\r\n\t\t\tif (vals) {\r\n\t\t\t\tthis.setValues('rgb', vals);\r\n\t\t\t} else if (vals = string.getHsla(obj)) {\r\n\t\t\t\tthis.setValues('hsl', vals);\r\n\t\t\t} else if (vals = string.getHwb(obj)) {\r\n\t\t\t\tthis.setValues('hwb', vals);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Unable to parse color from string \"' + obj + '\"');\r\n\t\t\t}\r\n\t\t} else if (typeof obj === 'object') {\r\n\t\t\tvals = obj;\r\n\t\t\tif (vals.r !== undefined || vals.red !== undefined) {\r\n\t\t\t\tthis.setValues('rgb', vals);\r\n\t\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n\t\t\t\tthis.setValues('hsl', vals);\r\n\t\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\r\n\t\t\t\tthis.setValues('hsv', vals);\r\n\t\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n\t\t\t\tthis.setValues('hwb', vals);\r\n\t\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n\t\t\t\tthis.setValues('cmyk', vals);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Unable to parse color from object ' + JSON.stringify(obj));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\tColor.prototype = {\r\n\t\trgb: function () {\r\n\t\t\treturn this.setSpace('rgb', arguments);\r\n\t\t},\r\n\t\thsl: function () {\r\n\t\t\treturn this.setSpace('hsl', arguments);\r\n\t\t},\r\n\t\thsv: function () {\r\n\t\t\treturn this.setSpace('hsv', arguments);\r\n\t\t},\r\n\t\thwb: function () {\r\n\t\t\treturn this.setSpace('hwb', arguments);\r\n\t\t},\r\n\t\tcmyk: function () {\r\n\t\t\treturn this.setSpace('cmyk', arguments);\r\n\t\t},\r\n\t\r\n\t\trgbArray: function () {\r\n\t\t\treturn this.values.rgb;\r\n\t\t},\r\n\t\thslArray: function () {\r\n\t\t\treturn this.values.hsl;\r\n\t\t},\r\n\t\thsvArray: function () {\r\n\t\t\treturn this.values.hsv;\r\n\t\t},\r\n\t\thwbArray: function () {\r\n\t\t\tvar values = this.values;\r\n\t\t\tif (values.alpha !== 1) {\r\n\t\t\t\treturn values.hwb.concat([values.alpha]);\r\n\t\t\t}\r\n\t\t\treturn values.hwb;\r\n\t\t},\r\n\t\tcmykArray: function () {\r\n\t\t\treturn this.values.cmyk;\r\n\t\t},\r\n\t\trgbaArray: function () {\r\n\t\t\tvar values = this.values;\r\n\t\t\treturn values.rgb.concat([values.alpha]);\r\n\t\t},\r\n\t\thslaArray: function () {\r\n\t\t\tvar values = this.values;\r\n\t\t\treturn values.hsl.concat([values.alpha]);\r\n\t\t},\r\n\t\talpha: function (val) {\r\n\t\t\tif (val === undefined) {\r\n\t\t\t\treturn this.values.alpha;\r\n\t\t\t}\r\n\t\t\tthis.setValues('alpha', val);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tred: function (val) {\r\n\t\t\treturn this.setChannel('rgb', 0, val);\r\n\t\t},\r\n\t\tgreen: function (val) {\r\n\t\t\treturn this.setChannel('rgb', 1, val);\r\n\t\t},\r\n\t\tblue: function (val) {\r\n\t\t\treturn this.setChannel('rgb', 2, val);\r\n\t\t},\r\n\t\thue: function (val) {\r\n\t\t\tif (val) {\r\n\t\t\t\tval %= 360;\r\n\t\t\t\tval = val < 0 ? 360 + val : val;\r\n\t\t\t}\r\n\t\t\treturn this.setChannel('hsl', 0, val);\r\n\t\t},\r\n\t\tsaturation: function (val) {\r\n\t\t\treturn this.setChannel('hsl', 1, val);\r\n\t\t},\r\n\t\tlightness: function (val) {\r\n\t\t\treturn this.setChannel('hsl', 2, val);\r\n\t\t},\r\n\t\tsaturationv: function (val) {\r\n\t\t\treturn this.setChannel('hsv', 1, val);\r\n\t\t},\r\n\t\twhiteness: function (val) {\r\n\t\t\treturn this.setChannel('hwb', 1, val);\r\n\t\t},\r\n\t\tblackness: function (val) {\r\n\t\t\treturn this.setChannel('hwb', 2, val);\r\n\t\t},\r\n\t\tvalue: function (val) {\r\n\t\t\treturn this.setChannel('hsv', 2, val);\r\n\t\t},\r\n\t\tcyan: function (val) {\r\n\t\t\treturn this.setChannel('cmyk', 0, val);\r\n\t\t},\r\n\t\tmagenta: function (val) {\r\n\t\t\treturn this.setChannel('cmyk', 1, val);\r\n\t\t},\r\n\t\tyellow: function (val) {\r\n\t\t\treturn this.setChannel('cmyk', 2, val);\r\n\t\t},\r\n\t\tblack: function (val) {\r\n\t\t\treturn this.setChannel('cmyk', 3, val);\r\n\t\t},\r\n\t\r\n\t\thexString: function () {\r\n\t\t\treturn string.hexString(this.values.rgb);\r\n\t\t},\r\n\t\trgbString: function () {\r\n\t\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\r\n\t\t},\r\n\t\trgbaString: function () {\r\n\t\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\r\n\t\t},\r\n\t\tpercentString: function () {\r\n\t\t\treturn string.percentString(this.values.rgb, this.values.alpha);\r\n\t\t},\r\n\t\thslString: function () {\r\n\t\t\treturn string.hslString(this.values.hsl, this.values.alpha);\r\n\t\t},\r\n\t\thslaString: function () {\r\n\t\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\r\n\t\t},\r\n\t\thwbString: function () {\r\n\t\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\r\n\t\t},\r\n\t\tkeyword: function () {\r\n\t\t\treturn string.keyword(this.values.rgb, this.values.alpha);\r\n\t\t},\r\n\t\r\n\t\trgbNumber: function () {\r\n\t\t\tvar rgb = this.values.rgb;\r\n\t\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n\t\t},\r\n\t\r\n\t\tluminosity: function () {\r\n\t\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n\t\t\tvar rgb = this.values.rgb;\r\n\t\t\tvar lum = [];\r\n\t\t\tfor (var i = 0; i < rgb.length; i++) {\r\n\t\t\t\tvar chan = rgb[i] / 255;\r\n\t\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n\t\t\t}\r\n\t\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n\t\t},\r\n\t\r\n\t\tcontrast: function (color2) {\r\n\t\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n\t\t\tvar lum1 = this.luminosity();\r\n\t\t\tvar lum2 = color2.luminosity();\r\n\t\t\tif (lum1 > lum2) {\r\n\t\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\r\n\t\t\t}\r\n\t\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\r\n\t\t},\r\n\t\r\n\t\tlevel: function (color2) {\r\n\t\t\tvar contrastRatio = this.contrast(color2);\r\n\t\t\tif (contrastRatio >= 7.1) {\r\n\t\t\t\treturn 'AAA';\r\n\t\t\t}\r\n\t\r\n\t\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\r\n\t\t},\r\n\t\r\n\t\tdark: function () {\r\n\t\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n\t\t\tvar rgb = this.values.rgb;\r\n\t\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n\t\t\treturn yiq < 128;\r\n\t\t},\r\n\t\r\n\t\tlight: function () {\r\n\t\t\treturn !this.dark();\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\t\tvar rgb = [];\r\n\t\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\t\trgb[i] = 255 - this.values.rgb[i];\r\n\t\t\t}\r\n\t\t\tthis.setValues('rgb', rgb);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tlighten: function (ratio) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\thsl[2] += hsl[2] * ratio;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tdarken: function (ratio) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\thsl[2] -= hsl[2] * ratio;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tsaturate: function (ratio) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\thsl[1] += hsl[1] * ratio;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tdesaturate: function (ratio) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\thsl[1] -= hsl[1] * ratio;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\twhiten: function (ratio) {\r\n\t\t\tvar hwb = this.values.hwb;\r\n\t\t\thwb[1] += hwb[1] * ratio;\r\n\t\t\tthis.setValues('hwb', hwb);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tblacken: function (ratio) {\r\n\t\t\tvar hwb = this.values.hwb;\r\n\t\t\thwb[2] += hwb[2] * ratio;\r\n\t\t\tthis.setValues('hwb', hwb);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tgreyscale: function () {\r\n\t\t\tvar rgb = this.values.rgb;\r\n\t\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n\t\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n\t\t\tthis.setValues('rgb', [val, val, val]);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tclearer: function (ratio) {\r\n\t\t\tvar alpha = this.values.alpha;\r\n\t\t\tthis.setValues('alpha', alpha - (alpha * ratio));\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\topaquer: function (ratio) {\r\n\t\t\tvar alpha = this.values.alpha;\r\n\t\t\tthis.setValues('alpha', alpha + (alpha * ratio));\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\trotate: function (degrees) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\tvar hue = (hsl[0] + degrees) % 360;\r\n\t\t\thsl[0] = hue < 0 ? 360 + hue : hue;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Ported from sass implementation in C\r\n\t\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n\t\t */\r\n\t\tmix: function (mixinColor, weight) {\r\n\t\t\tvar color1 = this;\r\n\t\t\tvar color2 = mixinColor;\r\n\t\t\tvar p = weight === undefined ? 0.5 : weight;\r\n\t\r\n\t\t\tvar w = 2 * p - 1;\r\n\t\t\tvar a = color1.alpha() - color2.alpha();\r\n\t\r\n\t\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n\t\t\tvar w2 = 1 - w1;\r\n\t\r\n\t\t\treturn this\r\n\t\t\t\t.rgb(\r\n\t\t\t\t\tw1 * color1.red() + w2 * color2.red(),\r\n\t\t\t\t\tw1 * color1.green() + w2 * color2.green(),\r\n\t\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\r\n\t\t\t\t)\r\n\t\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\t\treturn this.rgb();\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n\t\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\r\n\t\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\r\n\t\t\t// except 'alpha' which is a number.\r\n\t\t\tvar result = new Color();\r\n\t\t\tvar source = this.values;\r\n\t\t\tvar target = result.values;\r\n\t\t\tvar value, type;\r\n\t\r\n\t\t\tfor (var prop in source) {\r\n\t\t\t\tif (source.hasOwnProperty(prop)) {\r\n\t\t\t\t\tvalue = source[prop];\r\n\t\t\t\t\ttype = ({}).toString.call(value);\r\n\t\t\t\t\tif (type === '[object Array]') {\r\n\t\t\t\t\t\ttarget[prop] = value.slice(0);\r\n\t\t\t\t\t} else if (type === '[object Number]') {\r\n\t\t\t\t\t\ttarget[prop] = value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error('unexpected color value:', value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\t}\r\n\t};\r\n\t\r\n\tColor.prototype.spaces = {\r\n\t\trgb: ['red', 'green', 'blue'],\r\n\t\thsl: ['hue', 'saturation', 'lightness'],\r\n\t\thsv: ['hue', 'saturation', 'value'],\r\n\t\thwb: ['hue', 'whiteness', 'blackness'],\r\n\t\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n\t};\r\n\t\r\n\tColor.prototype.maxes = {\r\n\t\trgb: [255, 255, 255],\r\n\t\thsl: [360, 100, 100],\r\n\t\thsv: [360, 100, 100],\r\n\t\thwb: [360, 100, 100],\r\n\t\tcmyk: [100, 100, 100, 100]\r\n\t};\r\n\t\r\n\tColor.prototype.getValues = function (space) {\r\n\t\tvar values = this.values;\r\n\t\tvar vals = {};\r\n\t\r\n\t\tfor (var i = 0; i < space.length; i++) {\r\n\t\t\tvals[space.charAt(i)] = values[space][i];\r\n\t\t}\r\n\t\r\n\t\tif (values.alpha !== 1) {\r\n\t\t\tvals.a = values.alpha;\r\n\t\t}\r\n\t\r\n\t\t// {r: 255, g: 255, b: 255, a: 0.4}\r\n\t\treturn vals;\r\n\t};\r\n\t\r\n\tColor.prototype.setValues = function (space, vals) {\r\n\t\tvar values = this.values;\r\n\t\tvar spaces = this.spaces;\r\n\t\tvar maxes = this.maxes;\r\n\t\tvar alpha = 1;\r\n\t\tvar i;\r\n\t\r\n\t\tif (space === 'alpha') {\r\n\t\t\talpha = vals;\r\n\t\t} else if (vals.length) {\r\n\t\t\t// [10, 10, 10]\r\n\t\t\tvalues[space] = vals.slice(0, space.length);\r\n\t\t\talpha = vals[space.length];\r\n\t\t} else if (vals[space.charAt(0)] !== undefined) {\r\n\t\t\t// {r: 10, g: 10, b: 10}\r\n\t\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\t\tvalues[space][i] = vals[space.charAt(i)];\r\n\t\t\t}\r\n\t\r\n\t\t\talpha = vals.a;\r\n\t\t} else if (vals[spaces[space][0]] !== undefined) {\r\n\t\t\t// {red: 10, green: 10, blue: 10}\r\n\t\t\tvar chans = spaces[space];\r\n\t\r\n\t\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\t\tvalues[space][i] = vals[chans[i]];\r\n\t\t\t}\r\n\t\r\n\t\t\talpha = vals.alpha;\r\n\t\t}\r\n\t\r\n\t\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\t\r\n\t\tif (space === 'alpha') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\r\n\t\tvar capped;\r\n\t\r\n\t\t// cap values of the space prior converting all values\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n\t\t\tvalues[space][i] = Math.round(capped);\r\n\t\t}\r\n\t\r\n\t\t// convert to all the other color spaces\r\n\t\tfor (var sname in spaces) {\r\n\t\t\tif (sname !== space) {\r\n\t\t\t\tvalues[sname] = convert[space][sname](values[space]);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\tColor.prototype.setSpace = function (space, args) {\r\n\t\tvar vals = args[0];\r\n\t\r\n\t\tif (vals === undefined) {\r\n\t\t\t// color.rgb()\r\n\t\t\treturn this.getValues(space);\r\n\t\t}\r\n\t\r\n\t\t// color.rgb(10, 10, 10)\r\n\t\tif (typeof vals === 'number') {\r\n\t\t\tvals = Array.prototype.slice.call(args);\r\n\t\t}\r\n\t\r\n\t\tthis.setValues(space, vals);\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\tColor.prototype.setChannel = function (space, index, val) {\r\n\t\tvar svalues = this.values[space];\r\n\t\tif (val === undefined) {\r\n\t\t\t// color.red()\r\n\t\t\treturn svalues[index];\r\n\t\t} else if (val === svalues[index]) {\r\n\t\t\t// color.red(color.red())\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\r\n\t\t// color.red(100)\r\n\t\tsvalues[index] = val;\r\n\t\tthis.setValues(space, svalues);\r\n\t\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\tif (typeof window !== 'undefined') {\r\n\t\twindow.Color = Color;\r\n\t}\r\n\t\r\n\tmodule.exports = Color;\r\n\n\n/***/ },\n\n/***/ 120:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* MIT license */\r\n\tvar colorNames = __webpack_require__(121);\r\n\t\r\n\tmodule.exports = {\r\n\t   getRgba: getRgba,\r\n\t   getHsla: getHsla,\r\n\t   getRgb: getRgb,\r\n\t   getHsl: getHsl,\r\n\t   getHwb: getHwb,\r\n\t   getAlpha: getAlpha,\r\n\t\r\n\t   hexString: hexString,\r\n\t   rgbString: rgbString,\r\n\t   rgbaString: rgbaString,\r\n\t   percentString: percentString,\r\n\t   percentaString: percentaString,\r\n\t   hslString: hslString,\r\n\t   hslaString: hslaString,\r\n\t   hwbString: hwbString,\r\n\t   keyword: keyword\r\n\t}\r\n\t\r\n\tfunction getRgba(string) {\r\n\t   if (!string) {\r\n\t      return;\r\n\t   }\r\n\t   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n\t       hex =  /^#([a-fA-F0-9]{6})$/,\r\n\t       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n\t       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n\t       keyword = /(\\w+)/;\r\n\t\r\n\t   var rgb = [0, 0, 0],\r\n\t       a = 1,\r\n\t       match = string.match(abbr);\r\n\t   if (match) {\r\n\t      match = match[1];\r\n\t      for (var i = 0; i < rgb.length; i++) {\r\n\t         rgb[i] = parseInt(match[i] + match[i], 16);\r\n\t      }\r\n\t   }\r\n\t   else if (match = string.match(hex)) {\r\n\t      match = match[1];\r\n\t      for (var i = 0; i < rgb.length; i++) {\r\n\t         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n\t      }\r\n\t   }\r\n\t   else if (match = string.match(rgba)) {\r\n\t      for (var i = 0; i < rgb.length; i++) {\r\n\t         rgb[i] = parseInt(match[i + 1]);\r\n\t      }\r\n\t      a = parseFloat(match[4]);\r\n\t   }\r\n\t   else if (match = string.match(per)) {\r\n\t      for (var i = 0; i < rgb.length; i++) {\r\n\t         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n\t      }\r\n\t      a = parseFloat(match[4]);\r\n\t   }\r\n\t   else if (match = string.match(keyword)) {\r\n\t      if (match[1] == \"transparent\") {\r\n\t         return [0, 0, 0, 0];\r\n\t      }\r\n\t      rgb = colorNames[match[1]];\r\n\t      if (!rgb) {\r\n\t         return;\r\n\t      }\r\n\t   }\r\n\t\r\n\t   for (var i = 0; i < rgb.length; i++) {\r\n\t      rgb[i] = scale(rgb[i], 0, 255);\r\n\t   }\r\n\t   if (!a && a != 0) {\r\n\t      a = 1;\r\n\t   }\r\n\t   else {\r\n\t      a = scale(a, 0, 1);\r\n\t   }\r\n\t   rgb[3] = a;\r\n\t   return rgb;\r\n\t}\r\n\t\r\n\tfunction getHsla(string) {\r\n\t   if (!string) {\r\n\t      return;\r\n\t   }\r\n\t   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n\t   var match = string.match(hsl);\r\n\t   if (match) {\r\n\t      var alpha = parseFloat(match[4]);\r\n\t      var h = scale(parseInt(match[1]), 0, 360),\r\n\t          s = scale(parseFloat(match[2]), 0, 100),\r\n\t          l = scale(parseFloat(match[3]), 0, 100),\r\n\t          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n\t      return [h, s, l, a];\r\n\t   }\r\n\t}\r\n\t\r\n\tfunction getHwb(string) {\r\n\t   if (!string) {\r\n\t      return;\r\n\t   }\r\n\t   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n\t   var match = string.match(hwb);\r\n\t   if (match) {\r\n\t    var alpha = parseFloat(match[4]);\r\n\t      var h = scale(parseInt(match[1]), 0, 360),\r\n\t          w = scale(parseFloat(match[2]), 0, 100),\r\n\t          b = scale(parseFloat(match[3]), 0, 100),\r\n\t          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n\t      return [h, w, b, a];\r\n\t   }\r\n\t}\r\n\t\r\n\tfunction getRgb(string) {\r\n\t   var rgba = getRgba(string);\r\n\t   return rgba && rgba.slice(0, 3);\r\n\t}\r\n\t\r\n\tfunction getHsl(string) {\r\n\t  var hsla = getHsla(string);\r\n\t  return hsla && hsla.slice(0, 3);\r\n\t}\r\n\t\r\n\tfunction getAlpha(string) {\r\n\t   var vals = getRgba(string);\r\n\t   if (vals) {\r\n\t      return vals[3];\r\n\t   }\r\n\t   else if (vals = getHsla(string)) {\r\n\t      return vals[3];\r\n\t   }\r\n\t   else if (vals = getHwb(string)) {\r\n\t      return vals[3];\r\n\t   }\r\n\t}\r\n\t\r\n\t// generators\r\n\tfunction hexString(rgb) {\r\n\t   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n\t              + hexDouble(rgb[2]);\r\n\t}\r\n\t\r\n\tfunction rgbString(rgba, alpha) {\r\n\t   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n\t      return rgbaString(rgba, alpha);\r\n\t   }\r\n\t   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n\t}\r\n\t\r\n\tfunction rgbaString(rgba, alpha) {\r\n\t   if (alpha === undefined) {\r\n\t      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n\t   }\r\n\t   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n\t           + \", \" + alpha + \")\";\r\n\t}\r\n\t\r\n\tfunction percentString(rgba, alpha) {\r\n\t   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n\t      return percentaString(rgba, alpha);\r\n\t   }\r\n\t   var r = Math.round(rgba[0]/255 * 100),\r\n\t       g = Math.round(rgba[1]/255 * 100),\r\n\t       b = Math.round(rgba[2]/255 * 100);\r\n\t\r\n\t   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n\t}\r\n\t\r\n\tfunction percentaString(rgba, alpha) {\r\n\t   var r = Math.round(rgba[0]/255 * 100),\r\n\t       g = Math.round(rgba[1]/255 * 100),\r\n\t       b = Math.round(rgba[2]/255 * 100);\r\n\t   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n\t}\r\n\t\r\n\tfunction hslString(hsla, alpha) {\r\n\t   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n\t      return hslaString(hsla, alpha);\r\n\t   }\r\n\t   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n\t}\r\n\t\r\n\tfunction hslaString(hsla, alpha) {\r\n\t   if (alpha === undefined) {\r\n\t      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n\t   }\r\n\t   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n\t           + alpha + \")\";\r\n\t}\r\n\t\r\n\t// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n\t// (hwb have alpha optional & 1 is default value)\r\n\tfunction hwbString(hwb, alpha) {\r\n\t   if (alpha === undefined) {\r\n\t      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n\t   }\r\n\t   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n\t           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n\t}\r\n\t\r\n\tfunction keyword(rgb) {\r\n\t  return reverseNames[rgb.slice(0, 3)];\r\n\t}\r\n\t\r\n\t// helpers\r\n\tfunction scale(num, min, max) {\r\n\t   return Math.min(Math.max(min, num), max);\r\n\t}\r\n\t\r\n\tfunction hexDouble(num) {\r\n\t  var str = num.toString(16).toUpperCase();\r\n\t  return (str.length < 2) ? \"0\" + str : str;\r\n\t}\r\n\t\r\n\t\r\n\t//create a list of reverse color names\r\n\tvar reverseNames = {};\r\n\tfor (var name in colorNames) {\r\n\t   reverseNames[colorNames[name]] = name;\r\n\t}\r\n\n\n/***/ },\n\n/***/ 121:\n/***/ function(module, exports) {\n\n\tmodule.exports = {\r\n\t\t\"aliceblue\": [240, 248, 255],\r\n\t\t\"antiquewhite\": [250, 235, 215],\r\n\t\t\"aqua\": [0, 255, 255],\r\n\t\t\"aquamarine\": [127, 255, 212],\r\n\t\t\"azure\": [240, 255, 255],\r\n\t\t\"beige\": [245, 245, 220],\r\n\t\t\"bisque\": [255, 228, 196],\r\n\t\t\"black\": [0, 0, 0],\r\n\t\t\"blanchedalmond\": [255, 235, 205],\r\n\t\t\"blue\": [0, 0, 255],\r\n\t\t\"blueviolet\": [138, 43, 226],\r\n\t\t\"brown\": [165, 42, 42],\r\n\t\t\"burlywood\": [222, 184, 135],\r\n\t\t\"cadetblue\": [95, 158, 160],\r\n\t\t\"chartreuse\": [127, 255, 0],\r\n\t\t\"chocolate\": [210, 105, 30],\r\n\t\t\"coral\": [255, 127, 80],\r\n\t\t\"cornflowerblue\": [100, 149, 237],\r\n\t\t\"cornsilk\": [255, 248, 220],\r\n\t\t\"crimson\": [220, 20, 60],\r\n\t\t\"cyan\": [0, 255, 255],\r\n\t\t\"darkblue\": [0, 0, 139],\r\n\t\t\"darkcyan\": [0, 139, 139],\r\n\t\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\t\"darkgray\": [169, 169, 169],\r\n\t\t\"darkgreen\": [0, 100, 0],\r\n\t\t\"darkgrey\": [169, 169, 169],\r\n\t\t\"darkkhaki\": [189, 183, 107],\r\n\t\t\"darkmagenta\": [139, 0, 139],\r\n\t\t\"darkolivegreen\": [85, 107, 47],\r\n\t\t\"darkorange\": [255, 140, 0],\r\n\t\t\"darkorchid\": [153, 50, 204],\r\n\t\t\"darkred\": [139, 0, 0],\r\n\t\t\"darksalmon\": [233, 150, 122],\r\n\t\t\"darkseagreen\": [143, 188, 143],\r\n\t\t\"darkslateblue\": [72, 61, 139],\r\n\t\t\"darkslategray\": [47, 79, 79],\r\n\t\t\"darkslategrey\": [47, 79, 79],\r\n\t\t\"darkturquoise\": [0, 206, 209],\r\n\t\t\"darkviolet\": [148, 0, 211],\r\n\t\t\"deeppink\": [255, 20, 147],\r\n\t\t\"deepskyblue\": [0, 191, 255],\r\n\t\t\"dimgray\": [105, 105, 105],\r\n\t\t\"dimgrey\": [105, 105, 105],\r\n\t\t\"dodgerblue\": [30, 144, 255],\r\n\t\t\"firebrick\": [178, 34, 34],\r\n\t\t\"floralwhite\": [255, 250, 240],\r\n\t\t\"forestgreen\": [34, 139, 34],\r\n\t\t\"fuchsia\": [255, 0, 255],\r\n\t\t\"gainsboro\": [220, 220, 220],\r\n\t\t\"ghostwhite\": [248, 248, 255],\r\n\t\t\"gold\": [255, 215, 0],\r\n\t\t\"goldenrod\": [218, 165, 32],\r\n\t\t\"gray\": [128, 128, 128],\r\n\t\t\"green\": [0, 128, 0],\r\n\t\t\"greenyellow\": [173, 255, 47],\r\n\t\t\"grey\": [128, 128, 128],\r\n\t\t\"honeydew\": [240, 255, 240],\r\n\t\t\"hotpink\": [255, 105, 180],\r\n\t\t\"indianred\": [205, 92, 92],\r\n\t\t\"indigo\": [75, 0, 130],\r\n\t\t\"ivory\": [255, 255, 240],\r\n\t\t\"khaki\": [240, 230, 140],\r\n\t\t\"lavender\": [230, 230, 250],\r\n\t\t\"lavenderblush\": [255, 240, 245],\r\n\t\t\"lawngreen\": [124, 252, 0],\r\n\t\t\"lemonchiffon\": [255, 250, 205],\r\n\t\t\"lightblue\": [173, 216, 230],\r\n\t\t\"lightcoral\": [240, 128, 128],\r\n\t\t\"lightcyan\": [224, 255, 255],\r\n\t\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\t\"lightgray\": [211, 211, 211],\r\n\t\t\"lightgreen\": [144, 238, 144],\r\n\t\t\"lightgrey\": [211, 211, 211],\r\n\t\t\"lightpink\": [255, 182, 193],\r\n\t\t\"lightsalmon\": [255, 160, 122],\r\n\t\t\"lightseagreen\": [32, 178, 170],\r\n\t\t\"lightskyblue\": [135, 206, 250],\r\n\t\t\"lightslategray\": [119, 136, 153],\r\n\t\t\"lightslategrey\": [119, 136, 153],\r\n\t\t\"lightsteelblue\": [176, 196, 222],\r\n\t\t\"lightyellow\": [255, 255, 224],\r\n\t\t\"lime\": [0, 255, 0],\r\n\t\t\"limegreen\": [50, 205, 50],\r\n\t\t\"linen\": [250, 240, 230],\r\n\t\t\"magenta\": [255, 0, 255],\r\n\t\t\"maroon\": [128, 0, 0],\r\n\t\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\t\"mediumblue\": [0, 0, 205],\r\n\t\t\"mediumorchid\": [186, 85, 211],\r\n\t\t\"mediumpurple\": [147, 112, 219],\r\n\t\t\"mediumseagreen\": [60, 179, 113],\r\n\t\t\"mediumslateblue\": [123, 104, 238],\r\n\t\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\t\"mediumturquoise\": [72, 209, 204],\r\n\t\t\"mediumvioletred\": [199, 21, 133],\r\n\t\t\"midnightblue\": [25, 25, 112],\r\n\t\t\"mintcream\": [245, 255, 250],\r\n\t\t\"mistyrose\": [255, 228, 225],\r\n\t\t\"moccasin\": [255, 228, 181],\r\n\t\t\"navajowhite\": [255, 222, 173],\r\n\t\t\"navy\": [0, 0, 128],\r\n\t\t\"oldlace\": [253, 245, 230],\r\n\t\t\"olive\": [128, 128, 0],\r\n\t\t\"olivedrab\": [107, 142, 35],\r\n\t\t\"orange\": [255, 165, 0],\r\n\t\t\"orangered\": [255, 69, 0],\r\n\t\t\"orchid\": [218, 112, 214],\r\n\t\t\"palegoldenrod\": [238, 232, 170],\r\n\t\t\"palegreen\": [152, 251, 152],\r\n\t\t\"paleturquoise\": [175, 238, 238],\r\n\t\t\"palevioletred\": [219, 112, 147],\r\n\t\t\"papayawhip\": [255, 239, 213],\r\n\t\t\"peachpuff\": [255, 218, 185],\r\n\t\t\"peru\": [205, 133, 63],\r\n\t\t\"pink\": [255, 192, 203],\r\n\t\t\"plum\": [221, 160, 221],\r\n\t\t\"powderblue\": [176, 224, 230],\r\n\t\t\"purple\": [128, 0, 128],\r\n\t\t\"rebeccapurple\": [102, 51, 153],\r\n\t\t\"red\": [255, 0, 0],\r\n\t\t\"rosybrown\": [188, 143, 143],\r\n\t\t\"royalblue\": [65, 105, 225],\r\n\t\t\"saddlebrown\": [139, 69, 19],\r\n\t\t\"salmon\": [250, 128, 114],\r\n\t\t\"sandybrown\": [244, 164, 96],\r\n\t\t\"seagreen\": [46, 139, 87],\r\n\t\t\"seashell\": [255, 245, 238],\r\n\t\t\"sienna\": [160, 82, 45],\r\n\t\t\"silver\": [192, 192, 192],\r\n\t\t\"skyblue\": [135, 206, 235],\r\n\t\t\"slateblue\": [106, 90, 205],\r\n\t\t\"slategray\": [112, 128, 144],\r\n\t\t\"slategrey\": [112, 128, 144],\r\n\t\t\"snow\": [255, 250, 250],\r\n\t\t\"springgreen\": [0, 255, 127],\r\n\t\t\"steelblue\": [70, 130, 180],\r\n\t\t\"tan\": [210, 180, 140],\r\n\t\t\"teal\": [0, 128, 128],\r\n\t\t\"thistle\": [216, 191, 216],\r\n\t\t\"tomato\": [255, 99, 71],\r\n\t\t\"turquoise\": [64, 224, 208],\r\n\t\t\"violet\": [238, 130, 238],\r\n\t\t\"wheat\": [245, 222, 179],\r\n\t\t\"white\": [255, 255, 255],\r\n\t\t\"whitesmoke\": [245, 245, 245],\r\n\t\t\"yellow\": [255, 255, 0],\r\n\t\t\"yellowgreen\": [154, 205, 50]\r\n\t};\n\n/***/ },\n\n/***/ 122:\n/***/ function(module, exports) {\n\n\t/* MIT license */\n\t\n\tmodule.exports = {\n\t  rgb2hsl: rgb2hsl,\n\t  rgb2hsv: rgb2hsv,\n\t  rgb2hwb: rgb2hwb,\n\t  rgb2cmyk: rgb2cmyk,\n\t  rgb2keyword: rgb2keyword,\n\t  rgb2xyz: rgb2xyz,\n\t  rgb2lab: rgb2lab,\n\t  rgb2lch: rgb2lch,\n\t\n\t  hsl2rgb: hsl2rgb,\n\t  hsl2hsv: hsl2hsv,\n\t  hsl2hwb: hsl2hwb,\n\t  hsl2cmyk: hsl2cmyk,\n\t  hsl2keyword: hsl2keyword,\n\t\n\t  hsv2rgb: hsv2rgb,\n\t  hsv2hsl: hsv2hsl,\n\t  hsv2hwb: hsv2hwb,\n\t  hsv2cmyk: hsv2cmyk,\n\t  hsv2keyword: hsv2keyword,\n\t\n\t  hwb2rgb: hwb2rgb,\n\t  hwb2hsl: hwb2hsl,\n\t  hwb2hsv: hwb2hsv,\n\t  hwb2cmyk: hwb2cmyk,\n\t  hwb2keyword: hwb2keyword,\n\t\n\t  cmyk2rgb: cmyk2rgb,\n\t  cmyk2hsl: cmyk2hsl,\n\t  cmyk2hsv: cmyk2hsv,\n\t  cmyk2hwb: cmyk2hwb,\n\t  cmyk2keyword: cmyk2keyword,\n\t\n\t  keyword2rgb: keyword2rgb,\n\t  keyword2hsl: keyword2hsl,\n\t  keyword2hsv: keyword2hsv,\n\t  keyword2hwb: keyword2hwb,\n\t  keyword2cmyk: keyword2cmyk,\n\t  keyword2lab: keyword2lab,\n\t  keyword2xyz: keyword2xyz,\n\t\n\t  xyz2rgb: xyz2rgb,\n\t  xyz2lab: xyz2lab,\n\t  xyz2lch: xyz2lch,\n\t\n\t  lab2xyz: lab2xyz,\n\t  lab2rgb: lab2rgb,\n\t  lab2lch: lab2lch,\n\t\n\t  lch2lab: lch2lab,\n\t  lch2xyz: lch2xyz,\n\t  lch2rgb: lch2rgb\n\t}\n\t\n\t\n\tfunction rgb2hsl(rgb) {\n\t  var r = rgb[0]/255,\n\t      g = rgb[1]/255,\n\t      b = rgb[2]/255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      delta = max - min,\n\t      h, s, l;\n\t\n\t  if (max == min)\n\t    h = 0;\n\t  else if (r == max)\n\t    h = (g - b) / delta;\n\t  else if (g == max)\n\t    h = 2 + (b - r) / delta;\n\t  else if (b == max)\n\t    h = 4 + (r - g)/ delta;\n\t\n\t  h = Math.min(h * 60, 360);\n\t\n\t  if (h < 0)\n\t    h += 360;\n\t\n\t  l = (min + max) / 2;\n\t\n\t  if (max == min)\n\t    s = 0;\n\t  else if (l <= 0.5)\n\t    s = delta / (max + min);\n\t  else\n\t    s = delta / (2 - max - min);\n\t\n\t  return [h, s * 100, l * 100];\n\t}\n\t\n\tfunction rgb2hsv(rgb) {\n\t  var r = rgb[0],\n\t      g = rgb[1],\n\t      b = rgb[2],\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      delta = max - min,\n\t      h, s, v;\n\t\n\t  if (max == 0)\n\t    s = 0;\n\t  else\n\t    s = (delta/max * 1000)/10;\n\t\n\t  if (max == min)\n\t    h = 0;\n\t  else if (r == max)\n\t    h = (g - b) / delta;\n\t  else if (g == max)\n\t    h = 2 + (b - r) / delta;\n\t  else if (b == max)\n\t    h = 4 + (r - g) / delta;\n\t\n\t  h = Math.min(h * 60, 360);\n\t\n\t  if (h < 0)\n\t    h += 360;\n\t\n\t  v = ((max / 255) * 1000) / 10;\n\t\n\t  return [h, s, v];\n\t}\n\t\n\tfunction rgb2hwb(rgb) {\n\t  var r = rgb[0],\n\t      g = rgb[1],\n\t      b = rgb[2],\n\t      h = rgb2hsl(rgb)[0],\n\t      w = 1/255 * Math.min(r, Math.min(g, b)),\n\t      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\t\n\t  return [h, w * 100, b * 100];\n\t}\n\t\n\tfunction rgb2cmyk(rgb) {\n\t  var r = rgb[0] / 255,\n\t      g = rgb[1] / 255,\n\t      b = rgb[2] / 255,\n\t      c, m, y, k;\n\t\n\t  k = Math.min(1 - r, 1 - g, 1 - b);\n\t  c = (1 - r - k) / (1 - k) || 0;\n\t  m = (1 - g - k) / (1 - k) || 0;\n\t  y = (1 - b - k) / (1 - k) || 0;\n\t  return [c * 100, m * 100, y * 100, k * 100];\n\t}\n\t\n\tfunction rgb2keyword(rgb) {\n\t  return reverseKeywords[JSON.stringify(rgb)];\n\t}\n\t\n\tfunction rgb2xyz(rgb) {\n\t  var r = rgb[0] / 255,\n\t      g = rgb[1] / 255,\n\t      b = rgb[2] / 255;\n\t\n\t  // assume sRGB\n\t  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\t  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\t  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\t\n\t  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\t  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\t  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\t\n\t  return [x * 100, y *100, z * 100];\n\t}\n\t\n\tfunction rgb2lab(rgb) {\n\t  var xyz = rgb2xyz(rgb),\n\t        x = xyz[0],\n\t        y = xyz[1],\n\t        z = xyz[2],\n\t        l, a, b;\n\t\n\t  x /= 95.047;\n\t  y /= 100;\n\t  z /= 108.883;\n\t\n\t  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n\t  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n\t  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\t\n\t  l = (116 * y) - 16;\n\t  a = 500 * (x - y);\n\t  b = 200 * (y - z);\n\t\n\t  return [l, a, b];\n\t}\n\t\n\tfunction rgb2lch(args) {\n\t  return lab2lch(rgb2lab(args));\n\t}\n\t\n\tfunction hsl2rgb(hsl) {\n\t  var h = hsl[0] / 360,\n\t      s = hsl[1] / 100,\n\t      l = hsl[2] / 100,\n\t      t1, t2, t3, rgb, val;\n\t\n\t  if (s == 0) {\n\t    val = l * 255;\n\t    return [val, val, val];\n\t  }\n\t\n\t  if (l < 0.5)\n\t    t2 = l * (1 + s);\n\t  else\n\t    t2 = l + s - l * s;\n\t  t1 = 2 * l - t2;\n\t\n\t  rgb = [0, 0, 0];\n\t  for (var i = 0; i < 3; i++) {\n\t    t3 = h + 1 / 3 * - (i - 1);\n\t    t3 < 0 && t3++;\n\t    t3 > 1 && t3--;\n\t\n\t    if (6 * t3 < 1)\n\t      val = t1 + (t2 - t1) * 6 * t3;\n\t    else if (2 * t3 < 1)\n\t      val = t2;\n\t    else if (3 * t3 < 2)\n\t      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t    else\n\t      val = t1;\n\t\n\t    rgb[i] = val * 255;\n\t  }\n\t\n\t  return rgb;\n\t}\n\t\n\tfunction hsl2hsv(hsl) {\n\t  var h = hsl[0],\n\t      s = hsl[1] / 100,\n\t      l = hsl[2] / 100,\n\t      sv, v;\n\t\n\t  if(l === 0) {\n\t      // no need to do calc on black\n\t      // also avoids divide by 0 error\n\t      return [0, 0, 0];\n\t  }\n\t\n\t  l *= 2;\n\t  s *= (l <= 1) ? l : 2 - l;\n\t  v = (l + s) / 2;\n\t  sv = (2 * s) / (l + s);\n\t  return [h, sv * 100, v * 100];\n\t}\n\t\n\tfunction hsl2hwb(args) {\n\t  return rgb2hwb(hsl2rgb(args));\n\t}\n\t\n\tfunction hsl2cmyk(args) {\n\t  return rgb2cmyk(hsl2rgb(args));\n\t}\n\t\n\tfunction hsl2keyword(args) {\n\t  return rgb2keyword(hsl2rgb(args));\n\t}\n\t\n\t\n\tfunction hsv2rgb(hsv) {\n\t  var h = hsv[0] / 60,\n\t      s = hsv[1] / 100,\n\t      v = hsv[2] / 100,\n\t      hi = Math.floor(h) % 6;\n\t\n\t  var f = h - Math.floor(h),\n\t      p = 255 * v * (1 - s),\n\t      q = 255 * v * (1 - (s * f)),\n\t      t = 255 * v * (1 - (s * (1 - f))),\n\t      v = 255 * v;\n\t\n\t  switch(hi) {\n\t    case 0:\n\t      return [v, t, p];\n\t    case 1:\n\t      return [q, v, p];\n\t    case 2:\n\t      return [p, v, t];\n\t    case 3:\n\t      return [p, q, v];\n\t    case 4:\n\t      return [t, p, v];\n\t    case 5:\n\t      return [v, p, q];\n\t  }\n\t}\n\t\n\tfunction hsv2hsl(hsv) {\n\t  var h = hsv[0],\n\t      s = hsv[1] / 100,\n\t      v = hsv[2] / 100,\n\t      sl, l;\n\t\n\t  l = (2 - s) * v;\n\t  sl = s * v;\n\t  sl /= (l <= 1) ? l : 2 - l;\n\t  sl = sl || 0;\n\t  l /= 2;\n\t  return [h, sl * 100, l * 100];\n\t}\n\t\n\tfunction hsv2hwb(args) {\n\t  return rgb2hwb(hsv2rgb(args))\n\t}\n\t\n\tfunction hsv2cmyk(args) {\n\t  return rgb2cmyk(hsv2rgb(args));\n\t}\n\t\n\tfunction hsv2keyword(args) {\n\t  return rgb2keyword(hsv2rgb(args));\n\t}\n\t\n\t// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\tfunction hwb2rgb(hwb) {\n\t  var h = hwb[0] / 360,\n\t      wh = hwb[1] / 100,\n\t      bl = hwb[2] / 100,\n\t      ratio = wh + bl,\n\t      i, v, f, n;\n\t\n\t  // wh + bl cant be > 1\n\t  if (ratio > 1) {\n\t    wh /= ratio;\n\t    bl /= ratio;\n\t  }\n\t\n\t  i = Math.floor(6 * h);\n\t  v = 1 - bl;\n\t  f = 6 * h - i;\n\t  if ((i & 0x01) != 0) {\n\t    f = 1 - f;\n\t  }\n\t  n = wh + f * (v - wh);  // linear interpolation\n\t\n\t  switch (i) {\n\t    default:\n\t    case 6:\n\t    case 0: r = v; g = n; b = wh; break;\n\t    case 1: r = n; g = v; b = wh; break;\n\t    case 2: r = wh; g = v; b = n; break;\n\t    case 3: r = wh; g = n; b = v; break;\n\t    case 4: r = n; g = wh; b = v; break;\n\t    case 5: r = v; g = wh; b = n; break;\n\t  }\n\t\n\t  return [r * 255, g * 255, b * 255];\n\t}\n\t\n\tfunction hwb2hsl(args) {\n\t  return rgb2hsl(hwb2rgb(args));\n\t}\n\t\n\tfunction hwb2hsv(args) {\n\t  return rgb2hsv(hwb2rgb(args));\n\t}\n\t\n\tfunction hwb2cmyk(args) {\n\t  return rgb2cmyk(hwb2rgb(args));\n\t}\n\t\n\tfunction hwb2keyword(args) {\n\t  return rgb2keyword(hwb2rgb(args));\n\t}\n\t\n\tfunction cmyk2rgb(cmyk) {\n\t  var c = cmyk[0] / 100,\n\t      m = cmyk[1] / 100,\n\t      y = cmyk[2] / 100,\n\t      k = cmyk[3] / 100,\n\t      r, g, b;\n\t\n\t  r = 1 - Math.min(1, c * (1 - k) + k);\n\t  g = 1 - Math.min(1, m * (1 - k) + k);\n\t  b = 1 - Math.min(1, y * (1 - k) + k);\n\t  return [r * 255, g * 255, b * 255];\n\t}\n\t\n\tfunction cmyk2hsl(args) {\n\t  return rgb2hsl(cmyk2rgb(args));\n\t}\n\t\n\tfunction cmyk2hsv(args) {\n\t  return rgb2hsv(cmyk2rgb(args));\n\t}\n\t\n\tfunction cmyk2hwb(args) {\n\t  return rgb2hwb(cmyk2rgb(args));\n\t}\n\t\n\tfunction cmyk2keyword(args) {\n\t  return rgb2keyword(cmyk2rgb(args));\n\t}\n\t\n\t\n\tfunction xyz2rgb(xyz) {\n\t  var x = xyz[0] / 100,\n\t      y = xyz[1] / 100,\n\t      z = xyz[2] / 100,\n\t      r, g, b;\n\t\n\t  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\t  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\t  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\t\n\t  // assume sRGB\n\t  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t    : r = (r * 12.92);\n\t\n\t  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t    : g = (g * 12.92);\n\t\n\t  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t    : b = (b * 12.92);\n\t\n\t  r = Math.min(Math.max(0, r), 1);\n\t  g = Math.min(Math.max(0, g), 1);\n\t  b = Math.min(Math.max(0, b), 1);\n\t\n\t  return [r * 255, g * 255, b * 255];\n\t}\n\t\n\tfunction xyz2lab(xyz) {\n\t  var x = xyz[0],\n\t      y = xyz[1],\n\t      z = xyz[2],\n\t      l, a, b;\n\t\n\t  x /= 95.047;\n\t  y /= 100;\n\t  z /= 108.883;\n\t\n\t  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n\t  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n\t  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\t\n\t  l = (116 * y) - 16;\n\t  a = 500 * (x - y);\n\t  b = 200 * (y - z);\n\t\n\t  return [l, a, b];\n\t}\n\t\n\tfunction xyz2lch(args) {\n\t  return lab2lch(xyz2lab(args));\n\t}\n\t\n\tfunction lab2xyz(lab) {\n\t  var l = lab[0],\n\t      a = lab[1],\n\t      b = lab[2],\n\t      x, y, z, y2;\n\t\n\t  if (l <= 8) {\n\t    y = (l * 100) / 903.3;\n\t    y2 = (7.787 * (y / 100)) + (16 / 116);\n\t  } else {\n\t    y = 100 * Math.pow((l + 16) / 116, 3);\n\t    y2 = Math.pow(y / 100, 1/3);\n\t  }\n\t\n\t  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\t\n\t  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\t\n\t  return [x, y, z];\n\t}\n\t\n\tfunction lab2lch(lab) {\n\t  var l = lab[0],\n\t      a = lab[1],\n\t      b = lab[2],\n\t      hr, h, c;\n\t\n\t  hr = Math.atan2(b, a);\n\t  h = hr * 360 / 2 / Math.PI;\n\t  if (h < 0) {\n\t    h += 360;\n\t  }\n\t  c = Math.sqrt(a * a + b * b);\n\t  return [l, c, h];\n\t}\n\t\n\tfunction lab2rgb(args) {\n\t  return xyz2rgb(lab2xyz(args));\n\t}\n\t\n\tfunction lch2lab(lch) {\n\t  var l = lch[0],\n\t      c = lch[1],\n\t      h = lch[2],\n\t      a, b, hr;\n\t\n\t  hr = h / 360 * 2 * Math.PI;\n\t  a = c * Math.cos(hr);\n\t  b = c * Math.sin(hr);\n\t  return [l, a, b];\n\t}\n\t\n\tfunction lch2xyz(args) {\n\t  return lab2xyz(lch2lab(args));\n\t}\n\t\n\tfunction lch2rgb(args) {\n\t  return lab2rgb(lch2lab(args));\n\t}\n\t\n\tfunction keyword2rgb(keyword) {\n\t  return cssKeywords[keyword];\n\t}\n\t\n\tfunction keyword2hsl(args) {\n\t  return rgb2hsl(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2hsv(args) {\n\t  return rgb2hsv(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2hwb(args) {\n\t  return rgb2hwb(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2cmyk(args) {\n\t  return rgb2cmyk(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2lab(args) {\n\t  return rgb2lab(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2xyz(args) {\n\t  return rgb2xyz(keyword2rgb(args));\n\t}\n\t\n\tvar cssKeywords = {\n\t  aliceblue:  [240,248,255],\n\t  antiquewhite: [250,235,215],\n\t  aqua: [0,255,255],\n\t  aquamarine: [127,255,212],\n\t  azure:  [240,255,255],\n\t  beige:  [245,245,220],\n\t  bisque: [255,228,196],\n\t  black:  [0,0,0],\n\t  blanchedalmond: [255,235,205],\n\t  blue: [0,0,255],\n\t  blueviolet: [138,43,226],\n\t  brown:  [165,42,42],\n\t  burlywood:  [222,184,135],\n\t  cadetblue:  [95,158,160],\n\t  chartreuse: [127,255,0],\n\t  chocolate:  [210,105,30],\n\t  coral:  [255,127,80],\n\t  cornflowerblue: [100,149,237],\n\t  cornsilk: [255,248,220],\n\t  crimson:  [220,20,60],\n\t  cyan: [0,255,255],\n\t  darkblue: [0,0,139],\n\t  darkcyan: [0,139,139],\n\t  darkgoldenrod:  [184,134,11],\n\t  darkgray: [169,169,169],\n\t  darkgreen:  [0,100,0],\n\t  darkgrey: [169,169,169],\n\t  darkkhaki:  [189,183,107],\n\t  darkmagenta:  [139,0,139],\n\t  darkolivegreen: [85,107,47],\n\t  darkorange: [255,140,0],\n\t  darkorchid: [153,50,204],\n\t  darkred:  [139,0,0],\n\t  darksalmon: [233,150,122],\n\t  darkseagreen: [143,188,143],\n\t  darkslateblue:  [72,61,139],\n\t  darkslategray:  [47,79,79],\n\t  darkslategrey:  [47,79,79],\n\t  darkturquoise:  [0,206,209],\n\t  darkviolet: [148,0,211],\n\t  deeppink: [255,20,147],\n\t  deepskyblue:  [0,191,255],\n\t  dimgray:  [105,105,105],\n\t  dimgrey:  [105,105,105],\n\t  dodgerblue: [30,144,255],\n\t  firebrick:  [178,34,34],\n\t  floralwhite:  [255,250,240],\n\t  forestgreen:  [34,139,34],\n\t  fuchsia:  [255,0,255],\n\t  gainsboro:  [220,220,220],\n\t  ghostwhite: [248,248,255],\n\t  gold: [255,215,0],\n\t  goldenrod:  [218,165,32],\n\t  gray: [128,128,128],\n\t  green:  [0,128,0],\n\t  greenyellow:  [173,255,47],\n\t  grey: [128,128,128],\n\t  honeydew: [240,255,240],\n\t  hotpink:  [255,105,180],\n\t  indianred:  [205,92,92],\n\t  indigo: [75,0,130],\n\t  ivory:  [255,255,240],\n\t  khaki:  [240,230,140],\n\t  lavender: [230,230,250],\n\t  lavenderblush:  [255,240,245],\n\t  lawngreen:  [124,252,0],\n\t  lemonchiffon: [255,250,205],\n\t  lightblue:  [173,216,230],\n\t  lightcoral: [240,128,128],\n\t  lightcyan:  [224,255,255],\n\t  lightgoldenrodyellow: [250,250,210],\n\t  lightgray:  [211,211,211],\n\t  lightgreen: [144,238,144],\n\t  lightgrey:  [211,211,211],\n\t  lightpink:  [255,182,193],\n\t  lightsalmon:  [255,160,122],\n\t  lightseagreen:  [32,178,170],\n\t  lightskyblue: [135,206,250],\n\t  lightslategray: [119,136,153],\n\t  lightslategrey: [119,136,153],\n\t  lightsteelblue: [176,196,222],\n\t  lightyellow:  [255,255,224],\n\t  lime: [0,255,0],\n\t  limegreen:  [50,205,50],\n\t  linen:  [250,240,230],\n\t  magenta:  [255,0,255],\n\t  maroon: [128,0,0],\n\t  mediumaquamarine: [102,205,170],\n\t  mediumblue: [0,0,205],\n\t  mediumorchid: [186,85,211],\n\t  mediumpurple: [147,112,219],\n\t  mediumseagreen: [60,179,113],\n\t  mediumslateblue:  [123,104,238],\n\t  mediumspringgreen:  [0,250,154],\n\t  mediumturquoise:  [72,209,204],\n\t  mediumvioletred:  [199,21,133],\n\t  midnightblue: [25,25,112],\n\t  mintcream:  [245,255,250],\n\t  mistyrose:  [255,228,225],\n\t  moccasin: [255,228,181],\n\t  navajowhite:  [255,222,173],\n\t  navy: [0,0,128],\n\t  oldlace:  [253,245,230],\n\t  olive:  [128,128,0],\n\t  olivedrab:  [107,142,35],\n\t  orange: [255,165,0],\n\t  orangered:  [255,69,0],\n\t  orchid: [218,112,214],\n\t  palegoldenrod:  [238,232,170],\n\t  palegreen:  [152,251,152],\n\t  paleturquoise:  [175,238,238],\n\t  palevioletred:  [219,112,147],\n\t  papayawhip: [255,239,213],\n\t  peachpuff:  [255,218,185],\n\t  peru: [205,133,63],\n\t  pink: [255,192,203],\n\t  plum: [221,160,221],\n\t  powderblue: [176,224,230],\n\t  purple: [128,0,128],\n\t  rebeccapurple: [102, 51, 153],\n\t  red:  [255,0,0],\n\t  rosybrown:  [188,143,143],\n\t  royalblue:  [65,105,225],\n\t  saddlebrown:  [139,69,19],\n\t  salmon: [250,128,114],\n\t  sandybrown: [244,164,96],\n\t  seagreen: [46,139,87],\n\t  seashell: [255,245,238],\n\t  sienna: [160,82,45],\n\t  silver: [192,192,192],\n\t  skyblue:  [135,206,235],\n\t  slateblue:  [106,90,205],\n\t  slategray:  [112,128,144],\n\t  slategrey:  [112,128,144],\n\t  snow: [255,250,250],\n\t  springgreen:  [0,255,127],\n\t  steelblue:  [70,130,180],\n\t  tan:  [210,180,140],\n\t  teal: [0,128,128],\n\t  thistle:  [216,191,216],\n\t  tomato: [255,99,71],\n\t  turquoise:  [64,224,208],\n\t  violet: [238,130,238],\n\t  wheat:  [245,222,179],\n\t  white:  [255,255,255],\n\t  whitesmoke: [245,245,245],\n\t  yellow: [255,255,0],\n\t  yellowgreen:  [154,205,50]\n\t};\n\t\n\tvar reverseKeywords = {};\n\tfor (var key in cssKeywords) {\n\t  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n\t}\n\n\n/***/ },\n\n/***/ 123:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar conversions = __webpack_require__(122);\n\t\n\tvar convert = function() {\n\t   return new Converter();\n\t}\n\t\n\tfor (var func in conversions) {\n\t  // export Raw versions\n\t  convert[func + \"Raw\"] =  (function(func) {\n\t    // accept array or plain args\n\t    return function(arg) {\n\t      if (typeof arg == \"number\")\n\t        arg = Array.prototype.slice.call(arguments);\n\t      return conversions[func](arg);\n\t    }\n\t  })(func);\n\t\n\t  var pair = /(\\w+)2(\\w+)/.exec(func),\n\t      from = pair[1],\n\t      to = pair[2];\n\t\n\t  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\t  convert[from] = convert[from] || {};\n\t\n\t  convert[from][to] = convert[func] = (function(func) { \n\t    return function(arg) {\n\t      if (typeof arg == \"number\")\n\t        arg = Array.prototype.slice.call(arguments);\n\t      \n\t      var val = conversions[func](arg);\n\t      if (typeof val == \"string\" || val === undefined)\n\t        return val; // keyword\n\t\n\t      for (var i = 0; i < val.length; i++)\n\t        val[i] = Math.round(val[i]);\n\t      return val;\n\t    }\n\t  })(func);\n\t}\n\t\n\t\n\t/* Converter does lazy conversion and caching */\n\tvar Converter = function() {\n\t   this.convs = {};\n\t};\n\t\n\t/* Either get the values for a space or\n\t  set the values for a space, depending on args */\n\tConverter.prototype.routeSpace = function(space, args) {\n\t   var values = args[0];\n\t   if (values === undefined) {\n\t      // color.rgb()\n\t      return this.getValues(space);\n\t   }\n\t   // color.rgb(10, 10, 10)\n\t   if (typeof values == \"number\") {\n\t      values = Array.prototype.slice.call(args);        \n\t   }\n\t\n\t   return this.setValues(space, values);\n\t};\n\t  \n\t/* Set the values for a space, invalidating cache */\n\tConverter.prototype.setValues = function(space, values) {\n\t   this.space = space;\n\t   this.convs = {};\n\t   this.convs[space] = values;\n\t   return this;\n\t};\n\t\n\t/* Get the values for a space. If there's already\n\t  a conversion for the space, fetch it, otherwise\n\t  compute it */\n\tConverter.prototype.getValues = function(space) {\n\t   var vals = this.convs[space];\n\t   if (!vals) {\n\t      var fspace = this.space,\n\t          from = this.convs[fspace];\n\t      vals = convert[fspace][space](from);\n\t\n\t      this.convs[space] = vals;\n\t   }\n\t  return vals;\n\t};\n\t\n\t[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n\t   Converter.prototype[space] = function(vals) {\n\t      return this.routeSpace(space, arguments);\n\t   }\n\t});\n\t\n\tmodule.exports = convert;\n\n/***/ },\n\n/***/ 124:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Chart = __webpack_require__(143)();\r\n\t\r\n\t__webpack_require__(142)(Chart);\r\n\t__webpack_require__(141)(Chart);\r\n\t__webpack_require__(138)(Chart);\r\n\t__webpack_require__(139)(Chart);\r\n\t__webpack_require__(140)(Chart);\r\n\t__webpack_require__(144)(Chart);\r\n\t__webpack_require__(145)(Chart);\r\n\t__webpack_require__(146)(Chart);\r\n\t__webpack_require__(147)(Chart);\r\n\t__webpack_require__(148)(Chart);\r\n\t__webpack_require__(149)(Chart);\r\n\t__webpack_require__(150)(Chart);\r\n\t\r\n\t__webpack_require__(151)(Chart);\r\n\t__webpack_require__(152)(Chart);\r\n\t__webpack_require__(153)(Chart);\r\n\t__webpack_require__(154)(Chart);\r\n\t\r\n\t__webpack_require__(155)(Chart);\r\n\t__webpack_require__(156)(Chart);\r\n\t__webpack_require__(157)(Chart);\r\n\t__webpack_require__(158)(Chart);\r\n\t__webpack_require__(159)(Chart);\r\n\t\r\n\t// Controllers must be loaded after elements\r\n\t// See Chart.core.datasetController.dataElementType\r\n\t__webpack_require__(132)(Chart);\r\n\t__webpack_require__(133)(Chart);\r\n\t__webpack_require__(134)(Chart);\r\n\t__webpack_require__(135)(Chart);\r\n\t__webpack_require__(136)(Chart);\r\n\t__webpack_require__(137)(Chart);\r\n\t\r\n\t__webpack_require__(125)(Chart);\r\n\t__webpack_require__(126)(Chart);\r\n\t__webpack_require__(127)(Chart);\r\n\t__webpack_require__(128)(Chart);\r\n\t__webpack_require__(129)(Chart);\r\n\t__webpack_require__(130)(Chart);\r\n\t__webpack_require__(131)(Chart);\r\n\t\r\n\twindow.Chart = module.exports = Chart;\r\n\n\n/***/ },\n\n/***/ 125:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tChart.Bar = function(context, config) {\r\n\t\t\tconfig.type = 'bar';\r\n\t\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\n\n/***/ },\n\n/***/ 126:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tChart.Bubble = function(context, config) {\r\n\t\t\tconfig.type = 'bubble';\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\n\n/***/ },\n\n/***/ 127:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tChart.Doughnut = function(context, config) {\r\n\t\t\tconfig.type = 'doughnut';\r\n\t\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\n\n/***/ },\n\n/***/ 128:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tChart.Line = function(context, config) {\r\n\t\t\tconfig.type = 'line';\r\n\t\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\n\n/***/ },\n\n/***/ 129:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tChart.PolarArea = function(context, config) {\r\n\t\t\tconfig.type = 'polarArea';\r\n\t\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\n\n/***/ },\n\n/***/ 130:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\t\r\n\t\tChart.Radar = function(context, config) {\r\n\t\t\tconfig.options = Chart.helpers.configMerge({ aspectRatio: 1 }, config.options);\r\n\t\t\tconfig.type = 'radar';\r\n\t\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\r\n\n\n/***/ },\n\n/***/ 131:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar defaultConfig = {\r\n\t\t\thover: {\r\n\t\t\t\tmode: 'single'\r\n\t\t\t},\r\n\t\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [{\r\n\t\t\t\t\ttype: \"linear\", // scatter should not use a category axis\r\n\t\t\t\t\tposition: \"bottom\",\r\n\t\t\t\t\tid: \"x-axis-1\" // need an ID so datasets can reference the scale\r\n\t\t\t\t}],\r\n\t\t\t\tyAxes: [{\r\n\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\tposition: \"left\",\r\n\t\t\t\t\tid: \"y-axis-1\"\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\r\n\t\t\ttooltips: {\r\n\t\t\t\tcallbacks: {\r\n\t\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\t// Register the default config for this type\r\n\t\tChart.defaults.scatter = defaultConfig;\r\n\t\r\n\t\t// Scatter charts use line controllers\r\n\t\tChart.controllers.scatter = Chart.controllers.line;\r\n\t\r\n\t\tChart.Scatter = function(context, config) {\r\n\t\t\tconfig.type = 'scatter';\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\n\n/***/ },\n\n/***/ 132:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.bar = {\r\n\t\t\thover: {\r\n\t\t\t\tmode: \"label\"\r\n\t\t\t},\r\n\t\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [{\r\n\t\t\t\t\ttype: \"category\",\r\n\t\r\n\t\t\t\t\t// Specific to Bar Controller\r\n\t\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\t\tbarPercentage: 0.9,\r\n\t\r\n\t\t\t\t\t// grid line settings\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}],\r\n\t\t\t\tyAxes: [{\r\n\t\t\t\t\ttype: \"linear\"\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.controllers.bar = Chart.DatasetController.extend({\r\n\t\r\n\t\t\tdataElementType: Chart.elements.Rectangle,\r\n\t\r\n\t\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\r\n\t\r\n\t\t\t\t// Use this to indicate that this is a bar dataset.\r\n\t\t\t\tthis.getMeta().bar = true;\r\n\t\t\t},\r\n\t\r\n\t\t\t// Get the number of datasets that display bars. We use this to correctly calculate the bar width\r\n\t\t\tgetBarCount: function getBarCount() {\r\n\t\t\t\tvar barCount = 0;\r\n\t\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = this.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (meta.bar && this.chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\t++barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t\treturn barCount;\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: function update(reset) {\r\n\t\t\t\thelpers.each(this.getMeta().data, function(rectangle, index) {\r\n\t\t\t\t\tthis.updateElement(rectangle, index, reset);\r\n\t\t\t\t}, this);\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateElement: function updateElement(rectangle, index, reset) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar scaleBase = yScale.getBasePixel();\r\n\t\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\t\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\r\n\t\t\t\thelpers.extend(rectangle, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_xScale: xScale,\r\n\t\t\t\t\t_yScale: yScale,\r\n\t\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t\t_index: index,\r\n\t\r\n\t\t\t\t\t// Desired view properties\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\tx: this.calculateBarX(index, this.index),\r\n\t\t\t\t\t\ty: reset ? scaleBase : this.calculateBarY(index, this.index),\r\n\t\r\n\t\t\t\t\t\t// Tooltip\r\n\t\t\t\t\t\tlabel: this.chart.data.labels[index],\r\n\t\t\t\t\t\tdatasetLabel: dataset.label,\r\n\t\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\tbase: reset ? scaleBase : this.calculateBarBase(this.index, index),\r\n\t\t\t\t\t\twidth: this.calculateBarWidth(index),\r\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\r\n\t\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\r\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\r\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\trectangle.pivot();\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarBase: function(datasetIndex, index) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar base = 0;\r\n\t\r\n\t\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\t\tvar chart = this.chart;\r\n\t\t\t\t\tvar datasets = chart.data.datasets;\r\n\t\t\t\t\tvar value = datasets[datasetIndex].data[index];\r\n\t\r\n\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\t\tvar negDS = datasets[i];\r\n\t\t\t\t\t\t\tvar negDSMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t\t\tif (negDSMeta.bar && negDSMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\t\tbase += negDS.data[index] < 0 ? negDS.data[index] : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var j = 0; j < datasetIndex; j++) {\r\n\t\t\t\t\t\t\tvar posDS = datasets[j];\r\n\t\t\t\t\t\t\tvar posDSMeta = chart.getDatasetMeta(j);\r\n\t\t\t\t\t\t\tif (posDSMeta.bar && posDSMeta.yAxisID === yScale.id && chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t\t\tbase += posDS.data[index] > 0 ? posDS.data[index] : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn yScale.getPixelForValue(base);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn yScale.getBasePixel();\r\n\t\t\t},\r\n\t\r\n\t\t\tgetRuler: function(index) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar datasetCount = this.getBarCount();\r\n\t\r\n\t\t\t\tvar tickWidth;\r\n\t\r\n\t\t\t\tif (xScale.options.type === 'category') {\r\n\t\t\t\t\ttickWidth = xScale.getPixelForTick(index + 1) - xScale.getPixelForTick(index);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Average width\r\n\t\t\t\t\ttickWidth = xScale.width / xScale.ticks.length;\r\n\t\t\t\t}\r\n\t\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\r\n\t\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\r\n\t\t\t\tvar fullBarWidth = categoryWidth / datasetCount;\r\n\t\r\n\t\t\t\tif (xScale.ticks.length !== this.chart.data.labels.length) {\r\n\t\t\t\t    var perc = xScale.ticks.length / this.chart.data.labels.length;\r\n\t\t\t\t    fullBarWidth = fullBarWidth * perc;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\r\n\t\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\r\n\t\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdatasetCount: datasetCount,\r\n\t\t\t\t\ttickWidth: tickWidth,\r\n\t\t\t\t\tcategoryWidth: categoryWidth,\r\n\t\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\t\tfullBarWidth: fullBarWidth,\r\n\t\t\t\t\tbarWidth: barWidth,\r\n\t\t\t\t\tbarSpacing: barSpacing\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarWidth: function(index) {\r\n\t\t\t\tvar xScale = this.getScaleForId(this.getMeta().xAxisID);\r\n\t\t\t\tvar ruler = this.getRuler(index);\r\n\t\t\t\treturn xScale.options.stacked ? ruler.categoryWidth : ruler.barWidth;\r\n\t\t\t},\r\n\t\r\n\t\t\t// Get bar index from the given dataset index accounting for the fact that not all bars are visible\r\n\t\t\tgetBarIndex: function(datasetIndex) {\r\n\t\t\t\tvar barIndex = 0;\r\n\t\t\t\tvar meta, j;\r\n\t\r\n\t\t\t\tfor (j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\t\tmeta = this.chart.getDatasetMeta(j);\r\n\t\t\t\t\tif (meta.bar && this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t++barIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn barIndex;\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarX: function(index, datasetIndex) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar barIndex = this.getBarIndex(datasetIndex);\r\n\t\r\n\t\t\t\tvar ruler = this.getRuler(index);\r\n\t\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, this.chart.isCombo);\r\n\t\t\t\tleftTick -= this.chart.isCombo ? (ruler.tickWidth / 2) : 0;\r\n\t\r\n\t\t\t\tif (xScale.options.stacked) {\r\n\t\t\t\t\treturn leftTick + (ruler.categoryWidth / 2) + ruler.categorySpacing;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn leftTick +\r\n\t\t\t\t\t(ruler.barWidth / 2) +\r\n\t\t\t\t\truler.categorySpacing +\r\n\t\t\t\t\t(ruler.barWidth * barIndex) +\r\n\t\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t\t(ruler.barSpacing * barIndex);\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarY: function(index, datasetIndex) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar value = this.getDataset().data[index];\r\n\t\r\n\t\t\t\tif (yScale.options.stacked) {\r\n\t\r\n\t\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\t\tsumNeg = 0;\r\n\t\r\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tvar ds = this.chart.data.datasets[i];\r\n\t\t\t\t\t\tvar dsMeta = this.chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && this.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t\t},\r\n\t\r\n\t\t\tdraw: function(ease) {\r\n\t\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\t\thelpers.each(this.getMeta().data, function(rectangle, index) {\r\n\t\t\t\t\tvar d = this.getDataset().data[index];\r\n\t\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\r\n\t\t\t\t\t\trectangle.transition(easingDecimal).draw();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t},\r\n\t\r\n\t\t\tsetHoverStyle: function(rectangle) {\r\n\t\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\t\tvar index = rectangle._index;\r\n\t\r\n\t\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\t\tvar model = rectangle._model;\r\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(rectangle) {\r\n\t\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\t\tvar index = rectangle._index;\r\n\t\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\t\tvar model = rectangle._model;\r\n\t\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\t\r\n\t\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n\t\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n\t\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n\t\t\t}\r\n\t\r\n\t\t});\r\n\t\r\n\t\r\n\t\t// including horizontalBar in the bar file, instead of a file of its own\r\n\t\t// it extends bar (like pie extends doughnut)\r\n\t\tChart.defaults.horizontalBar = {\r\n\t\t\thover: {\r\n\t\t\t\tmode: \"label\"\r\n\t\t\t},\r\n\t\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [{\r\n\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\tposition: \"bottom\"\r\n\t\t\t\t}],\r\n\t\t\t\tyAxes: [{\r\n\t\t\t\t\tposition: \"left\",\r\n\t\t\t\t\ttype: \"category\",\r\n\t\r\n\t\t\t\t\t// Specific to Horizontal Bar Controller\r\n\t\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\t\tbarPercentage: 0.9,\r\n\t\r\n\t\t\t\t\t// grid line settings\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\t\telements: {\r\n\t\t\t\trectangle: {\r\n\t\t\t\t\tborderSkipped: 'left'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltips: {\r\n\t\t\t\tcallbacks: {\r\n\t\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\t\t\tvar title = '';\r\n\t\r\n\t\t\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\r\n\t\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\r\n\t\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n\t\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\treturn title;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n\t\t\tupdateElement: function updateElement(rectangle, index, reset, numBars) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar scaleBase = xScale.getBasePixel();\r\n\t\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\t\r\n\t\t\t\thelpers.extend(rectangle, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_xScale: xScale,\r\n\t\t\t\t\t_yScale: yScale,\r\n\t\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t\t_index: index,\r\n\t\r\n\t\t\t\t\t// Desired view properties\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\tx: reset ? scaleBase : this.calculateBarX(index, this.index),\r\n\t\t\t\t\t\ty: this.calculateBarY(index, this.index),\r\n\t\r\n\t\t\t\t\t\t// Tooltip\r\n\t\t\t\t\t\tlabel: this.chart.data.labels[index],\r\n\t\t\t\t\t\tdatasetLabel: dataset.label,\r\n\t\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\tbase: reset ? scaleBase : this.calculateBarBase(this.index, index),\r\n\t\t\t\t\t\theight: this.calculateBarHeight(index),\r\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\r\n\t\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\r\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\r\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tdraw: function () {\r\n\t\r\n\t\t\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\t\t\tvar vm = this._view;\r\n\t\r\n\t\t\t\t\t\tvar halfHeight = vm.height / 2,\r\n\t\t\t\t\t\t\ttopY = vm.y - halfHeight,\r\n\t\t\t\t\t\t\tbottomY = vm.y + halfHeight,\r\n\t\t\t\t\t\t\tright = vm.base - (vm.base - vm.x),\r\n\t\t\t\t\t\t\thalfStroke = vm.borderWidth / 2;\r\n\t\r\n\t\t\t\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\t\t\ttopY += halfStroke;\r\n\t\t\t\t\t\t\tbottomY -= halfStroke;\r\n\t\t\t\t\t\t\tright += halfStroke;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\r\n\t\t\t\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\t\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\t\t\t\tctx.lineWidth = vm.borderWidth;\r\n\t\r\n\t\t\t\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t\t\t\t// | 1 2 |\r\n\t\t\t\t\t\t// | 0 3 |\r\n\t\t\t\t\t\tvar corners = [\r\n\t\t\t\t\t\t\t[vm.base, bottomY],\r\n\t\t\t\t\t\t\t[vm.base, topY],\r\n\t\t\t\t\t\t\t[right, topY],\r\n\t\t\t\t\t\t\t[right, bottomY]\r\n\t\t\t\t\t\t];\r\n\t\r\n\t\t\t\t\t\t// Find first (starting) corner with fallback to 'bottom'\r\n\t\t\t\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\t\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\r\n\t\t\t\t\t\tif (startCorner === -1)\r\n\t\t\t\t\t\t\tstartCorner = 0;\r\n\t\r\n\t\t\t\t\t\tfunction cornerAt(index) {\r\n\t\t\t\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\t\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\t\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\t\r\n\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tinRange: function (mouseX, mouseY) {\r\n\t\t\t\t\t\tvar vm = this._view;\r\n\t\t\t\t\t\tvar inRange = false;\r\n\t\r\n\t\t\t\t\t\tif (vm) {\r\n\t\t\t\t\t\t\tif (vm.x < vm.base) {\r\n\t\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.x && mouseX <= vm.base);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.base && mouseX <= vm.x);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\treturn inRange;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\trectangle.pivot();\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarBase: function (datasetIndex, index) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar base = 0;\r\n\t\r\n\t\t\t\tif (xScale.options.stacked) {\r\n\t\r\n\t\t\t\t\tvar value = this.chart.data.datasets[datasetIndex].data[index];\r\n\t\r\n\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\t\tvar negDS = this.chart.data.datasets[i];\r\n\t\t\t\t\t\t\tvar negDSMeta = this.chart.getDatasetMeta(i);\r\n\t\t\t\t\t\t\tif (negDSMeta.bar && negDSMeta.xAxisID === xScale.id && this.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\t\tbase += negDS.data[index] < 0 ? negDS.data[index] : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var j = 0; j < datasetIndex; j++) {\r\n\t\t\t\t\t\t\tvar posDS = this.chart.data.datasets[j];\r\n\t\t\t\t\t\t\tvar posDSMeta = this.chart.getDatasetMeta(j);\r\n\t\t\t\t\t\t\tif (posDSMeta.bar && posDSMeta.xAxisID === xScale.id && this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t\t\tbase += posDS.data[index] > 0 ? posDS.data[index] : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn xScale.getPixelForValue(base);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn xScale.getBasePixel();\r\n\t\t\t},\r\n\t\r\n\t\t\tgetRuler: function (index) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar datasetCount = this.getBarCount();\r\n\t\r\n\t\t\t\tvar tickHeight;\r\n\t\t\t\tif (yScale.options.type === 'category') {\r\n\t\t\t\t\ttickHeight = yScale.getPixelForTick(index + 1) - yScale.getPixelForTick(index);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Average width\r\n\t\t\t\t\ttickHeight = yScale.width / yScale.ticks.length;\r\n\t\t\t\t}\r\n\t\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\r\n\t\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\r\n\t\t\t\tvar fullBarHeight = categoryHeight / datasetCount;\r\n\t\r\n\t\t\t\tif (yScale.ticks.length !== this.chart.data.labels.length) {\r\n\t\t\t\t\tvar perc = yScale.ticks.length / this.chart.data.labels.length;\r\n\t\t\t\t\tfullBarHeight = fullBarHeight * perc;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\r\n\t\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\r\n\t\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdatasetCount: datasetCount,\r\n\t\t\t\t\ttickHeight: tickHeight,\r\n\t\t\t\t\tcategoryHeight: categoryHeight,\r\n\t\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\t\tfullBarHeight: fullBarHeight,\r\n\t\t\t\t\tbarHeight: barHeight,\r\n\t\t\t\t\tbarSpacing: barSpacing,\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarHeight: function (index) {\r\n\t\t\t\tvar yScale = this.getScaleForId(this.getMeta().yAxisID);\r\n\t\t\t\tvar ruler = this.getRuler(index);\r\n\t\t\t\treturn yScale.options.stacked ? ruler.categoryHeight : ruler.barHeight;\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarX: function (index, datasetIndex) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar value = this.getDataset().data[index];\r\n\t\r\n\t\t\t\tif (xScale.options.stacked) {\r\n\t\r\n\t\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\t\tsumNeg = 0;\r\n\t\r\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tvar ds = this.chart.data.datasets[i];\r\n\t\t\t\t\t\tvar dsMeta = this.chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && this.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn xScale.getPixelForValue(value);\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarY: function (index, datasetIndex) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar barIndex = this.getBarIndex(datasetIndex);\r\n\t\r\n\t\t\t\tvar ruler = this.getRuler(index);\r\n\t\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, this.chart.isCombo);\r\n\t\t\t\ttopTick -= this.chart.isCombo ? (ruler.tickHeight / 2) : 0;\r\n\t\r\n\t\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\t\treturn topTick + (ruler.categoryHeight / 2) + ruler.categorySpacing;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn topTick +\r\n\t\t\t\t\t(ruler.barHeight / 2) +\r\n\t\t\t\t\truler.categorySpacing +\r\n\t\t\t\t\t(ruler.barHeight * barIndex) +\r\n\t\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t\t(ruler.barSpacing * barIndex);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\n\n/***/ },\n\n/***/ 133:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.bubble = {\r\n\t\t\thover: {\r\n\t\t\t\tmode: \"single\"\r\n\t\t\t},\r\n\t\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [{\r\n\t\t\t\t\ttype: \"linear\", // bubble should probably use a linear scale by default\r\n\t\t\t\t\tposition: \"bottom\",\r\n\t\t\t\t\tid: \"x-axis-0\" // need an ID so datasets can reference the scale\r\n\t\t\t\t}],\r\n\t\t\t\tyAxes: [{\r\n\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\tposition: \"left\",\r\n\t\t\t\t\tid: \"y-axis-0\"\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\r\n\t\t\ttooltips: {\r\n\t\t\t\tcallbacks: {\r\n\t\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t\t\treturn datasetLabel + ': (' + dataPoint.x + ', ' + dataPoint.y + ', ' + dataPoint.r + ')';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.controllers.bubble = Chart.DatasetController.extend({\r\n\t\r\n\t\t\tdataElementType: Chart.elements.Point,\r\n\t\r\n\t\t\tupdate: function update(reset) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar points = meta.data;\r\n\t\r\n\t\t\t\t// Update Points\r\n\t\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\t\tthis.updateElement(point, index, reset);\r\n\t\t\t\t}, this);\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateElement: function(point, index, reset) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar data = dataset.data[index];\r\n\t\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\t\r\n\t\t\t\thelpers.extend(point, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_xScale: xScale,\r\n\t\t\t\t\t_yScale: yScale,\r\n\t\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t\t_index: index,\r\n\t\r\n\t\t\t\t\t// Desired view properties\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(data, index, this.index, this.chart.isCombo),\r\n\t\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, this.index),\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : this.getRadius(data),\r\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, pointElementOptions.backgroundColor),\r\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, pointElementOptions.borderColor),\r\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, pointElementOptions.borderWidth),\r\n\t\r\n\t\t\t\t\t\t// Tooltip\r\n\t\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tvar model = point._model;\r\n\t\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\r\n\t\r\n\t\t\t\tpoint.pivot();\r\n\t\t\t},\r\n\t\r\n\t\t\tgetRadius: function(value) {\r\n\t\t\t\treturn value.r || this.chart.options.elements.point.radius;\r\n\t\t\t},\r\n\t\r\n\t\t\tsetHoverStyle: function(point) {\r\n\t\t\t\t// Point\r\n\t\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\t\tvar index = point._index;\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar model = point._model;\r\n\t\r\n\t\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, this.chart.options.elements.point.hoverRadius)) + this.getRadius(this.getDataset().data[point._index]);\r\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(point) {\r\n\t\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\t\tvar index = point._index;\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar model = point._model;\r\n\t\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\t\r\n\t\t\t\tmodel.radius = custom.radius ? custom.radius : this.getRadius(dataset.data[point._index]);\r\n\t\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, pointElementOptions.backgroundColor);\r\n\t\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, pointElementOptions.borderColor);\r\n\t\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, pointElementOptions.borderWidth);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\n\n/***/ },\n\n/***/ 134:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers,\r\n\t\t\tdefaults = Chart.defaults;\r\n\t\r\n\t\tdefaults.doughnut = {\r\n\t\t\tanimation: {\r\n\t\t\t\t//Boolean - Whether we animate the rotation of the Doughnut\r\n\t\t\t\tanimateRotate: true,\r\n\t\t\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\r\n\t\t\t\tanimateScale: false\r\n\t\t\t},\r\n\t\t\taspectRatio: 1,\r\n\t\t\thover: {\r\n\t\t\t\tmode: 'single'\r\n\t\t\t},\r\n\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\tvar text = [];\r\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\t\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\tvar datasets = data.datasets;\r\n\t\t\t\tvar labels = data.labels;\r\n\t\r\n\t\t\t\tif (datasets.length) {\r\n\t\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n\t\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttext.push('</ul>');\r\n\t\t\t\treturn text.join(\"\");\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\t\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\t\r\n\t\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\t\tvar chart = this.chart;\r\n\t\t\t\t\tvar i, ilen, meta;\r\n\t\r\n\t\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tchart.update();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\t//The percentage of the chart that we cut out of the middle.\r\n\t\t\tcutoutPercentage: 50,\r\n\t\r\n\t\t\t//The rotation of the chart, where the first data arc begins.\r\n\t\t\trotation: Math.PI * -0.5,\r\n\t\r\n\t\t\t//The total circumference of the chart.\r\n\t\t\tcircumference: Math.PI * 2.0,\r\n\t\r\n\t\t\t// Need to override these to give a nice default\r\n\t\t\ttooltips: {\r\n\t\t\t\tcallbacks: {\r\n\t\t\t\t\ttitle: function() {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tdefaults.pie = helpers.clone(defaults.doughnut);\r\n\t\thelpers.extend(defaults.pie, {\r\n\t\t\tcutoutPercentage: 0\r\n\t\t});\r\n\t\r\n\t\r\n\t\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n\t\r\n\t\t\tdataElementType: Chart.elements.Arc,\r\n\t\r\n\t\t\tlinkScales: helpers.noop,\r\n\t\r\n\t\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n\t\t\tgetRingIndex: function getRingIndex(datasetIndex) {\r\n\t\t\t\tvar ringIndex = 0;\r\n\t\r\n\t\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\t\tif (this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t++ringIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn ringIndex;\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: function update(reset) {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar chart = _this.chart,\r\n\t\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\t\topts = chart.options,\r\n\t\t\t\t\tarcOpts = opts.elements.arc,\r\n\t\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\r\n\t\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\r\n\t\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\r\n\t\t\t\t\toffset = {\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmeta = _this.getMeta(),\r\n\t\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\r\n\t\t\t\t\tcircumference = opts.circumference;\r\n\t\r\n\t\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n\t\t\t\tif (circumference < Math.PI * 2.0) {\r\n\t\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\r\n\t\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n\t\t\t\t\tvar endAngle = startAngle + circumference;\r\n\t\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\r\n\t\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\r\n\t\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n\t\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n\t\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n\t\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n\t\t\t\t\tvar cutout = cutoutPercentage / 100.0;\r\n\t\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\r\n\t\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\r\n\t\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\r\n\t\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n\t\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tchart.outerRadius = Math.max(minSize / 2, 0);\r\n\t\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 1, 0);\r\n\t\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\t\t\t\tchart.offsetX = offset.x * chart.outerRadius;\r\n\t\t\t\tchart.offsetY = offset.y * chart.outerRadius;\r\n\t\r\n\t\t\t\tmeta.total = _this.calculateTotal();\r\n\t\r\n\t\t\t\t_this.outerRadius = chart.outerRadius - (chart.radiusLength * _this.getRingIndex(_this.index));\r\n\t\t\t\t_this.innerRadius = _this.outerRadius - chart.radiusLength;\r\n\t\r\n\t\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\t\t_this.updateElement(arc, index, reset);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar chart = _this.chart,\r\n\t\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\t\topts = chart.options,\r\n\t\t\t\t\tanimationOpts = opts.animation,\r\n\t\t\t\t\tarcOpts = opts.elements.arc,\r\n\t\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\r\n\t\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\r\n\t\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\t\tendAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\t\tdataset = _this.getDataset(),\r\n\t\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : _this.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\r\n\t\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : _this.innerRadius,\r\n\t\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : _this.outerRadius,\r\n\t\t\t\t\tcustom = arc.custom || {},\r\n\t\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\r\n\t\t\t\thelpers.extend(arc, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_datasetIndex: _this.index,\r\n\t\t\t\t\t_index: index,\r\n\t\r\n\t\t\t\t\t// Desired view properties\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\tx: centerX + chart.offsetX,\r\n\t\t\t\t\t\ty: centerY + chart.offsetY,\r\n\t\t\t\t\t\tstartAngle: startAngle,\r\n\t\t\t\t\t\tendAngle: endAngle,\r\n\t\t\t\t\t\tcircumference: circumference,\r\n\t\t\t\t\t\touterRadius: outerRadius,\r\n\t\t\t\t\t\tinnerRadius: innerRadius,\r\n\t\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tvar model = arc._model;\r\n\t\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(dataset.backgroundColor, index, arcOpts.backgroundColor);\r\n\t\t\t\tmodel.hoverBackgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, arcOpts.hoverBackgroundColor);\r\n\t\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(dataset.borderWidth, index, arcOpts.borderWidth);\r\n\t\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(dataset.borderColor, index, arcOpts.borderColor);\r\n\t\r\n\t\t\t\t// Set correct angles if not resetting\r\n\t\t\t\tif (!reset || !animationOpts.animateRotate) {\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\tmodel.startAngle = opts.rotation;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmodel.startAngle = _this.getMeta().data[index - 1]._model.endAngle;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarc.pivot();\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(arc) {\r\n\t\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateTotal: function() {\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar total = 0;\r\n\t\t\t\tvar value;\r\n\t\r\n\t\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\t\tvalue = dataset.data[index];\r\n\t\t\t\t\tif (!isNaN(value) && !element.hidden) {\r\n\t\t\t\t\t\ttotal += Math.abs(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\treturn total;\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateCircumference: function(value) {\r\n\t\t\t\tvar total = this.getMeta().total;\r\n\t\t\t\tif (total > 0 && !isNaN(value)) {\r\n\t\t\t\t\treturn (Math.PI * 2.0) * (value / total);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\n\n/***/ },\n\n/***/ 135:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.line = {\r\n\t\t\tshowLines: true,\r\n\t\r\n\t\t\thover: {\r\n\t\t\t\tmode: \"label\"\r\n\t\t\t},\r\n\t\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [{\r\n\t\t\t\t\ttype: \"category\",\r\n\t\t\t\t\tid: 'x-axis-0'\r\n\t\t\t\t}],\r\n\t\t\t\tyAxes: [{\r\n\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\tid: 'y-axis-0'\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.controllers.line = Chart.DatasetController.extend({\r\n\t\r\n\t\t\tdatasetElementType: Chart.elements.Line,\r\n\t\r\n\t\t\tdataElementType: Chart.elements.Point,\r\n\t\r\n\t\t\taddElementAndReset: function(index) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar options = me.chart.options;\r\n\t\r\n\t\t\t\tChart.DatasetController.prototype.addElementAndReset.call(me, index);\r\n\t\r\n\t\t\t\t// Make sure bezier control points are updated\r\n\t\t\t\tif (options.showLines && options.elements.line.tension !== 0) {\r\n\t\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: function update(reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar line = meta.dataset;\r\n\t\t\t\tvar points = meta.data || [];\r\n\t\t\t\tvar options = me.chart.options;\r\n\t\t\t\tvar lineElementOptions = options.elements.line;\r\n\t\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar i, ilen, dataset, custom;\r\n\t\r\n\t\t\t\t// Update Line\r\n\t\t\t\tif (options.showLines) {\r\n\t\t\t\t\tdataset = me.getDataset();\r\n\t\t\t\t\tcustom = line.custom || {};\r\n\t\r\n\t\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\tline._scale = scale;\r\n\t\t\t\t\tline._datasetIndex = me.index;\r\n\t\t\t\t\t// Data\r\n\t\t\t\t\tline._children = points;\r\n\t\t\t\t\t// Model\r\n\t\t\t\t\tline._model = {\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\t\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\t\t// Scale\r\n\t\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\t\tscaleZero: scale.getBasePixel()\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\tline.pivot();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Update Points\r\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\t\tme.updateElement(points[i], i, reset);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (options.showLines && lineElementOptions.tension !== 0) {\r\n\t\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetPointBackgroundColor: function(point, index) {\r\n\t\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\r\n\t\t\t\tif (custom.backgroundColor) {\r\n\t\t\t\t\tbackgroundColor = custom.backgroundColor;\r\n\t\t\t\t} else if (dataset.pointBackgroundColor) {\r\n\t\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n\t\t\t\t} else if (dataset.backgroundColor) {\r\n\t\t\t\t\tbackgroundColor = dataset.backgroundColor;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn backgroundColor;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetPointBorderColor: function(point, index) {\r\n\t\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\r\n\t\t\t\tif (custom.borderColor) {\r\n\t\t\t\t\tborderColor = custom.borderColor;\r\n\t\t\t\t} else if (dataset.pointBorderColor) {\r\n\t\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n\t\t\t\t} else if (dataset.borderColor) {\r\n\t\t\t\t\tborderColor = dataset.borderColor;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn borderColor;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetPointBorderWidth: function(point, index) {\r\n\t\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\r\n\t\t\t\tif (custom.borderWidth) {\r\n\t\t\t\t\tborderWidth = custom.borderWidth;\r\n\t\t\t\t} else if (dataset.pointBorderWidth) {\r\n\t\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n\t\t\t\t} else if (dataset.borderWidth) {\r\n\t\t\t\t\tborderWidth = dataset.borderWidth;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn borderWidth;\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateElement: function(point, index, reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar dataset = me.getDataset();\r\n\t\t\t\tvar datasetIndex = me.index;\r\n\t\t\t\tvar value = dataset.data[index];\r\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar pointOptions = me.chart.options.elements.point;\r\n\t\t\t\tvar x, y;\r\n\t\r\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t\t}\r\n\t\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n\t\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tx = xScale.getPixelForValue(value, index, datasetIndex, me.chart.isCombo);\r\n\t\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex, me.chart.isCombo);\r\n\t\r\n\t\t\t\t// Utility\r\n\t\t\t\tpoint._xScale = xScale;\r\n\t\t\t\tpoint._yScale = yScale;\r\n\t\t\t\tpoint._datasetIndex = datasetIndex;\r\n\t\t\t\tpoint._index = index;\r\n\t\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\tpoint._model = {\r\n\t\t\t\t\tx: x,\r\n\t\t\t\t\ty: y,\r\n\t\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n\t\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n\t\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\r\n\t\t\t\t\tborderColor: me.getPointBorderColor(point, index),\r\n\t\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\r\n\t\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculatePointY: function(value, index, datasetIndex, isCombo) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar chart = me.chart;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar sumPos = 0;\r\n\t\t\t\tvar sumNeg = 0;\r\n\t\t\t\tvar i, ds, dsMeta;\r\n\t\r\n\t\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tds = chart.data.datasets[i];\r\n\t\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (dsMeta.type === 'line' && chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateBezierControlPoints: function() {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar area = this.chart.chartArea;\r\n\t\t\t\tvar points = meta.data || [];\r\n\t\t\t\tvar i, ilen, point, model, controlPoints;\r\n\t\r\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\t\tpoint = points[i];\r\n\t\t\t\t\tmodel = point._model;\r\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\r\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\r\n\t\t\t\t\t\tmeta.dataset._model.tension\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\r\n\t\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, area.right), area.left);\r\n\t\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, area.bottom), area.top);\r\n\t\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, area.right), area.left);\r\n\t\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, area.bottom), area.top);\r\n\t\r\n\t\t\t\t\t// Now pivot the point for animation\r\n\t\t\t\t\tpoint.pivot();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tdraw: function(ease) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar points = meta.data || [];\r\n\t\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\t\tvar i, ilen;\r\n\t\r\n\t\t\t\t// Transition Point Locations\r\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\t\tpoints[i].transition(easingDecimal);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Transition and Draw the line\r\n\t\t\t\tif (this.chart.options.showLines) {\r\n\t\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Draw the points\r\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\t\tpoints[i].draw();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tsetHoverStyle: function(point) {\r\n\t\t\t\t// Point\r\n\t\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\t\tvar index = point._index;\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar model = point._model;\r\n\t\r\n\t\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(point) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\r\n\t\t\t\tvar index = point._index;\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar model = point._model;\r\n\t\r\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n\t\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\r\n\t\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\r\n\t\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\n\n/***/ },\n\n/***/ 136:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.polarArea = {\r\n\t\r\n\t\t\tscale: {\r\n\t\t\t\ttype: \"radialLinear\",\r\n\t\t\t\tlineArc: true // so that lines are circular\r\n\t\t\t},\r\n\t\r\n\t\t\t//Boolean - Whether to animate the rotation of the chart\r\n\t\t\tanimation: {\r\n\t\t\t\tanimateRotate: true,\r\n\t\t\t\tanimateScale: true\r\n\t\t\t},\r\n\t\r\n\t\t\taspectRatio: 1,\r\n\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\tvar text = [];\r\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\t\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\tvar datasets = data.datasets;\r\n\t\t\t\tvar labels = data.labels;\r\n\t\r\n\t\t\t\tif (datasets.length) {\r\n\t\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\">');\r\n\t\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttext.push('</span></li>');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttext.push('</ul>');\r\n\t\t\t\treturn text.join(\"\");\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\t\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\t\r\n\t\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\t\tvar chart = this.chart;\r\n\t\t\t\t\tvar i, ilen, meta;\r\n\t\r\n\t\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tchart.update();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\t// Need to override these to give a nice default\r\n\t\t\ttooltips: {\r\n\t\t\t\tcallbacks: {\r\n\t\t\t\t\ttitle: function() {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.controllers.polarArea = Chart.DatasetController.extend({\r\n\t\r\n\t\t\tdataElementType: Chart.elements.Arc,\r\n\t\r\n\t\t\tlinkScales: helpers.noop,\r\n\t\r\n\t\t\tupdate: function update(reset) {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar chart = _this.chart;\r\n\t\t\t\tvar chartArea = chart.chartArea;\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar opts = chart.options;\r\n\t\t\t\tvar arcOpts = opts.elements.arc;\r\n\t\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n\t\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\r\n\t\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n\t\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\t\r\n\t\t\t\t_this.outerRadius = chart.outerRadius - (chart.radiusLength * _this.index);\r\n\t\t\t\t_this.innerRadius = _this.outerRadius - chart.radiusLength;\r\n\t\r\n\t\t\t\tmeta.count = _this.countVisibleElements();\r\n\t\r\n\t\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\t\t_this.updateElement(arc, index, reset);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar chart = _this.chart;\r\n\t\t\t\tvar chartArea = chart.chartArea;\r\n\t\t\t\tvar dataset = _this.getDataset();\r\n\t\t\t\tvar opts = chart.options;\r\n\t\t\t\tvar animationOpts = opts.animation;\r\n\t\t\t\tvar arcOpts = opts.elements.arc;\r\n\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\tvar scale = chart.scale;\r\n\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\tvar labels = chart.data.labels;\r\n\t\r\n\t\t\t\tvar circumference = _this.calculateCircumference(dataset.data[index]);\r\n\t\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\r\n\t\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\r\n\t\r\n\t\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\r\n\t\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\r\n\t\t\t\tvar visibleCount = 0;\r\n\t\t\t\tvar meta = _this.getMeta();\r\n\t\t\t\tfor (var i = 0; i < index; ++i) {\r\n\t\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\r\n\t\t\t\t\t\t++visibleCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar distance = arc.hidden? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\t\t\t\tvar startAngle = (-0.5 * Math.PI) + (circumference * visibleCount);\r\n\t\t\t\tvar endAngle = startAngle + (arc.hidden? 0 : circumference);\r\n\t\r\n\t\t\t\tvar resetModel = {\r\n\t\t\t\t\tx: centerX,\r\n\t\t\t\t\ty: centerY,\r\n\t\t\t\t\tinnerRadius: 0,\r\n\t\t\t\t\touterRadius: animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]),\r\n\t\t\t\t\tstartAngle: animationOpts.animateRotate ? Math.PI * -0.5 : startAngle,\r\n\t\t\t\t\tendAngle: animationOpts.animateRotate ? Math.PI * -0.5 : endAngle,\r\n\t\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(dataset.backgroundColor, index, arcOpts.backgroundColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(dataset.borderWidth, index, arcOpts.borderWidth),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(dataset.borderColor, index, arcOpts.borderColor),\r\n\t\r\n\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\thelpers.extend(arc, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_datasetIndex: _this.index,\r\n\t\t\t\t\t_index: index,\r\n\t\t\t\t\t_scale: scale,\r\n\t\r\n\t\t\t\t\t// Desired view properties\r\n\t\t\t\t\t_model: reset ? resetModel : {\r\n\t\t\t\t\t\tx: centerX,\r\n\t\t\t\t\t\ty: centerY,\r\n\t\t\t\t\t\tinnerRadius: 0,\r\n\t\t\t\t\t\touterRadius: distance,\r\n\t\t\t\t\t\tstartAngle: startAngle,\r\n\t\t\t\t\t\tendAngle: endAngle,\r\n\t\r\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(dataset.backgroundColor, index, arcOpts.backgroundColor),\r\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(dataset.borderWidth, index, arcOpts.borderWidth),\r\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(dataset.borderColor, index, arcOpts.borderColor),\r\n\t\r\n\t\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tarc.pivot();\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(arc) {\r\n\t\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t\t},\r\n\t\r\n\t\t\tcountVisibleElements: function() {\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar count = 0;\r\n\t\r\n\t\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\treturn count;\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateCircumference: function(value) {\r\n\t\t\t\tvar count = this.getMeta().count;\r\n\t\t\t\tif (count > 0 && !isNaN(value)) {\r\n\t\t\t\t\treturn (2 * Math.PI) / count;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\n\n/***/ },\n\n/***/ 137:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.radar = {\r\n\t\t\tscale: {\r\n\t\t\t\ttype: \"radialLinear\"\r\n\t\t\t},\r\n\t\t\telements: {\r\n\t\t\t\tline: {\r\n\t\t\t\t\ttension: 0 // no bezier in radar\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.controllers.radar = Chart.DatasetController.extend({\r\n\t\r\n\t\t\tdatasetElementType: Chart.elements.Line,\r\n\t\r\n\t\t\tdataElementType: Chart.elements.Point,\r\n\t\r\n\t\t\tlinkScales: helpers.noop,\r\n\t\r\n\t\t\taddElementAndReset: function(index) {\r\n\t\t\t\tChart.DatasetController.prototype.addElementAndReset.call(this, index);\r\n\t\r\n\t\t\t\t// Make sure bezier control points are updated\r\n\t\t\t\tthis.updateBezierControlPoints();\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: function update(reset) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar line = meta.dataset;\r\n\t\t\t\tvar points = meta.data;\r\n\t\t\t\tvar custom = line.custom || {};\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar lineElementOptions = this.chart.options.elements.line;\r\n\t\t\t\tvar scale = this.chart.scale;\r\n\t\r\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thelpers.extend(meta.dataset, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t\t// Data\r\n\t\t\t\t\t_children: points,\r\n\t\t\t\t\t_loop: true,\r\n\t\t\t\t\t// Model\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\t\r\n\t\t\t\t\t\t// Scale\r\n\t\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\t\tscaleZero: scale.getBasePosition()\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tmeta.dataset.pivot();\r\n\t\r\n\t\t\t\t// Update Points\r\n\t\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\t\tthis.updateElement(point, index, reset);\r\n\t\t\t\t}, this);\r\n\t\r\n\t\r\n\t\t\t\t// Update bezier control points\r\n\t\t\t\tthis.updateBezierControlPoints();\r\n\t\t\t},\r\n\t\t\tupdateElement: function(point, index, reset) {\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar scale = this.chart.scale;\r\n\t\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\t\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\r\n\t\r\n\t\t\t\thelpers.extend(point, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t\t_index: index,\r\n\t\t\t\t\t_scale: scale,\r\n\t\r\n\t\t\t\t\t// Desired view properties\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\r\n\t\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\r\n\t\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.tension, this.chart.options.elements.line.tension),\r\n\t\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\r\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\r\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\r\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\r\n\t\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\r\n\t\r\n\t\t\t\t\t\t// Tooltip\r\n\t\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\r\n\t\t\t},\r\n\t\t\tupdateBezierControlPoints: function() {\r\n\t\t\t\tvar chartArea = this.chart.chartArea;\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\r\n\t\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\t\tvar model = point._model;\r\n\t\t\t\t\tvar controlPoints = helpers.splineCurve(\r\n\t\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\r\n\t\t\t\t\t\tmodel.tension\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\r\n\t\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\r\n\t\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\r\n\t\r\n\t\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\r\n\t\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\r\n\t\r\n\t\t\t\t\t// Now pivot the point for animation\r\n\t\t\t\t\tpoint.pivot();\r\n\t\t\t\t}, this);\r\n\t\t\t},\r\n\t\r\n\t\t\tdraw: function(ease) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar easingDecimal = ease || 1;\r\n\t\r\n\t\t\t\t// Transition Point Locations\r\n\t\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\t\tpoint.transition(easingDecimal);\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Transition and Draw the line\r\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\t\r\n\t\t\t\t// Draw the points\r\n\t\t\t\thelpers.each(meta.data, function(point) {\r\n\t\t\t\t\tpoint.draw();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tsetHoverStyle: function(point) {\r\n\t\t\t\t// Point\r\n\t\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar index = point._index;\r\n\t\t\t\tvar model = point._model;\r\n\t\r\n\t\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(point) {\r\n\t\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar index = point._index;\r\n\t\t\t\tvar model = point._model;\r\n\t\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\t\r\n\t\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);\r\n\t\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\r\n\t\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\r\n\t\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\n\n/***/ },\n\n/***/ 138:\n/***/ function(module, exports) {\n\n\t/*global window: false */\r\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.global.animation = {\r\n\t\t\tduration: 1000,\r\n\t\t\teasing: \"easeOutQuart\",\r\n\t\t\tonProgress: helpers.noop,\r\n\t\t\tonComplete: helpers.noop\r\n\t\t};\r\n\t\r\n\t\tChart.Animation = Chart.Element.extend({\r\n\t\t\tcurrentStep: null, // the current animation step\r\n\t\t\tnumSteps: 60, // default number of steps\r\n\t\t\teasing: \"\", // the easing to use for this animation\r\n\t\t\trender: null, // render function used by the animation service\r\n\t\r\n\t\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n\t\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\r\n\t\t});\r\n\t\r\n\t\tChart.animationService = {\r\n\t\t\tframeDuration: 17,\r\n\t\t\tanimations: [],\r\n\t\t\tdropFrames: 0,\r\n\t\t\trequest: null,\r\n\t\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\r\n\t\r\n\t\t\t\tif (!lazy) {\r\n\t\t\t\t\tchartInstance.animating = true;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor (var index = 0; index < this.animations.length; ++index) {\r\n\t\t\t\t\tif (this.animations[index].chartInstance === chartInstance) {\r\n\t\t\t\t\t\t// replacing an in progress animation\r\n\t\t\t\t\t\tthis.animations[index].animationObject = animationObject;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.animations.push({\r\n\t\t\t\t\tchartInstance: chartInstance,\r\n\t\t\t\t\tanimationObject: animationObject\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n\t\t\t\tif (this.animations.length === 1) {\r\n\t\t\t\t\tthis.requestAnimationFrame();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// Cancel the animation for a given chart instance\r\n\t\t\tcancelAnimation: function(chartInstance) {\r\n\t\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\r\n\t\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\tthis.animations.splice(index, 1);\r\n\t\t\t\t\tchartInstance.animating = false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trequestAnimationFrame: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif (me.request === null) {\r\n\t\t\t\t\t// Skip animation frame requests until the active one is executed.\r\n\t\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\r\n\t\t\t\t\t// and 'mouseout' events will trigger multiple renders.\r\n\t\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\r\n\t\t\t\t\t\tme.request = null;\r\n\t\t\t\t\t\tme.startDigest();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstartDigest: function() {\r\n\t\r\n\t\t\t\tvar startTime = Date.now();\r\n\t\t\t\tvar framesToDrop = 0;\r\n\t\r\n\t\t\t\tif (this.dropFrames > 1) {\r\n\t\t\t\t\tframesToDrop = Math.floor(this.dropFrames);\r\n\t\t\t\t\tthis.dropFrames = this.dropFrames % 1;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\twhile (i < this.animations.length) {\r\n\t\t\t\t\tif (this.animations[i].animationObject.currentStep === null) {\r\n\t\t\t\t\t\tthis.animations[i].animationObject.currentStep = 0;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.animations[i].animationObject.currentStep += 1 + framesToDrop;\r\n\t\r\n\t\t\t\t\tif (this.animations[i].animationObject.currentStep > this.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\t\tthis.animations[i].animationObject.currentStep = this.animations[i].animationObject.numSteps;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.animations[i].animationObject.render(this.animations[i].chartInstance, this.animations[i].animationObject);\r\n\t\t\t\t\tif (this.animations[i].animationObject.onAnimationProgress && this.animations[i].animationObject.onAnimationProgress.call) {\r\n\t\t\t\t\t\tthis.animations[i].animationObject.onAnimationProgress.call(this.animations[i].chartInstance, this.animations[i]);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (this.animations[i].animationObject.currentStep === this.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\t\tif (this.animations[i].animationObject.onAnimationComplete && this.animations[i].animationObject.onAnimationComplete.call) {\r\n\t\t\t\t\t\t\tthis.animations[i].animationObject.onAnimationComplete.call(this.animations[i].chartInstance, this.animations[i]);\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// executed the last frame. Remove the animation.\r\n\t\t\t\t\t\tthis.animations[i].chartInstance.animating = false;\r\n\t\r\n\t\t\t\t\t\tthis.animations.splice(i, 1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t++i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar endTime = Date.now();\r\n\t\t\t\tvar dropFrames = (endTime - startTime) / this.frameDuration;\r\n\t\r\n\t\t\t\tthis.dropFrames += dropFrames;\r\n\t\r\n\t\t\t\t// Do we have more stuff to animate?\r\n\t\t\t\tif (this.animations.length > 0) {\r\n\t\t\t\t\tthis.requestAnimationFrame();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\n\n/***/ },\n\n/***/ 139:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\t//Create a dictionary of chart types, to allow for extension of existing types\r\n\t\tChart.types = {};\r\n\t\r\n\t\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n\t\t//Destroy method on the chart will remove the instance of the chart from this reference.\r\n\t\tChart.instances = {};\r\n\t\r\n\t\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n\t\tChart.controllers = {};\r\n\t\r\n\t\t// The main controller of a chart\r\n\t\tChart.Controller = function(instance) {\r\n\t\r\n\t\t\tthis.chart = instance;\r\n\t\t\tthis.config = instance.config;\r\n\t\t\tthis.options = this.config.options = helpers.configMerge(Chart.defaults.global, Chart.defaults[this.config.type], this.config.options || {});\r\n\t\t\tthis.id = helpers.uid();\r\n\t\r\n\t\t\tObject.defineProperty(this, 'data', {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this.config.data;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\t//Add the chart instance to the global namespace\r\n\t\t\tChart.instances[this.id] = this;\r\n\t\r\n\t\t\tif (this.options.responsive) {\r\n\t\t\t\t// Silent resize before chart draws\r\n\t\t\t\tthis.resize(true);\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.initialize();\r\n\t\r\n\t\t\treturn this;\r\n\t\t};\r\n\t\r\n\t\thelpers.extend(Chart.Controller.prototype, {\r\n\t\r\n\t\t\tinitialize: function initialize() {\r\n\t\t\t\t// Before init plugin notification\r\n\t\t\t\tChart.pluginService.notifyPlugins('beforeInit', [this]);\r\n\t\r\n\t\t\t\tthis.bindEvents();\r\n\t\r\n\t\t\t\t// Make sure controllers are built first so that each dataset is bound to an axis before the scales\r\n\t\t\t\t// are built\r\n\t\t\t\tthis.ensureScalesHaveIDs();\r\n\t\t\t\tthis.buildOrUpdateControllers();\r\n\t\t\t\tthis.buildScales();\r\n\t\t\t\tthis.buildSurroundingItems();\r\n\t\t\t\tthis.updateLayout();\r\n\t\t\t\tthis.resetElements();\r\n\t\t\t\tthis.initToolTip();\r\n\t\t\t\tthis.update();\r\n\t\r\n\t\t\t\t// After init plugin notification\r\n\t\t\t\tChart.pluginService.notifyPlugins('afterInit', [this]);\r\n\t\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\r\n\t\t\tclear: function clear() {\r\n\t\t\t\thelpers.clear(this.chart);\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\r\n\t\t\tstop: function stop() {\r\n\t\t\t\t// Stops any current animation loop occuring\r\n\t\t\t\tChart.animationService.cancelAnimation(this);\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\r\n\t\t\tresize: function resize(silent) {\r\n\t\t\t\tvar canvas = this.chart.canvas;\r\n\t\t\t\tvar newWidth = helpers.getMaximumWidth(this.chart.canvas);\r\n\t\t\t\tvar newHeight = (this.options.maintainAspectRatio && isNaN(this.chart.aspectRatio) === false && isFinite(this.chart.aspectRatio) && this.chart.aspectRatio !== 0) ? newWidth / this.chart.aspectRatio : helpers.getMaximumHeight(this.chart.canvas);\r\n\t\r\n\t\t\t\tvar sizeChanged = this.chart.width !== newWidth || this.chart.height !== newHeight;\r\n\t\r\n\t\t\t\tif (!sizeChanged)\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\tcanvas.width = this.chart.width = newWidth;\r\n\t\t\t\tcanvas.height = this.chart.height = newHeight;\r\n\t\r\n\t\t\t\thelpers.retinaScale(this.chart);\r\n\t\r\n\t\t\t\tif (!silent) {\r\n\t\t\t\t\tthis.stop();\r\n\t\t\t\t\tthis.update(this.options.responsiveAnimationDuration);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\r\n\t\t\tensureScalesHaveIDs: function ensureScalesHaveIDs() {\r\n\t\t\t\tvar options = this.options;\r\n\t\t\t\tvar scalesOptions = options.scales || {};\r\n\t\t\t\tvar scaleOptions = options.scale;\r\n\t\r\n\t\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n\t\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n\t\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tif (scaleOptions) {\r\n\t\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Builds a map of scale ID to scale object for future lookup.\r\n\t\t\t */\r\n\t\t\tbuildScales: function buildScales() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar options = me.options;\r\n\t\t\t\tvar scales = me.scales = {};\r\n\t\t\t\tvar items = [];\r\n\t\r\n\t\t\t\tif (options.scales) {\r\n\t\t\t\t\titems = items.concat(\r\n\t\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\r\n\t\t\t\t\t\t\treturn { options: xAxisOptions, dtype: 'category' }; }),\r\n\t\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\r\n\t\t\t\t\t\t\treturn { options: yAxisOptions, dtype: 'linear' }; }));\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (options.scale) {\r\n\t\t\t\t\titems.push({ options: options.scale, dtype: 'radialLinear', isDefault: true });\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thelpers.each(items, function(item, index) {\r\n\t\t\t\t\tvar scaleOptions = item.options;\r\n\t\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\r\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n\t\t\t\t\tif (!scaleClass) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar scale = new scaleClass({\r\n\t\t\t\t\t\tid: scaleOptions.id,\r\n\t\t\t\t\t\toptions: scaleOptions,\r\n\t\t\t\t\t\tctx: me.chart.ctx,\r\n\t\t\t\t\t\tchart: me\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tscales[scale.id] = scale;\r\n\t\r\n\t\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n\t\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n\t\t\t\t\t// make the logic easier and remove some useless? custom code.\r\n\t\t\t\t\tif (item.isDefault) {\r\n\t\t\t\t\t\tme.scale = scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tChart.scaleService.addScalesToLayout(this);\r\n\t\t\t},\r\n\t\r\n\t\t\tbuildSurroundingItems: function() {\r\n\t\t\t\tif (this.options.title) {\r\n\t\t\t\t\tthis.titleBlock = new Chart.Title({\r\n\t\t\t\t\t\tctx: this.chart.ctx,\r\n\t\t\t\t\t\toptions: this.options.title,\r\n\t\t\t\t\t\tchart: this\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tChart.layoutService.addBox(this, this.titleBlock);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (this.options.legend) {\r\n\t\t\t\t\tthis.legend = new Chart.Legend({\r\n\t\t\t\t\t\tctx: this.chart.ctx,\r\n\t\t\t\t\t\toptions: this.options.legend,\r\n\t\t\t\t\t\tchart: this\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tChart.layoutService.addBox(this, this.legend);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateLayout: function() {\r\n\t\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\r\n\t\t\t},\r\n\t\r\n\t\t\tbuildOrUpdateControllers: function buildOrUpdateControllers() {\r\n\t\t\t\tvar types = [];\r\n\t\t\t\tvar newControllers = [];\r\n\t\r\n\t\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (!meta.type) {\r\n\t\t\t\t\t\tmeta.type = dataset.type || this.config.type;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttypes.push(meta.type);\r\n\t\r\n\t\t\t\t\tif (meta.controller) {\r\n\t\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](this, datasetIndex);\r\n\t\t\t\t\t\tnewControllers.push(meta.controller);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t\tif (types.length > 1) {\r\n\t\t\t\t\tfor (var i = 1; i < types.length; i++) {\r\n\t\t\t\t\t\tif (types[i] !== types[i - 1]) {\r\n\t\t\t\t\t\t\tthis.isCombo = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn newControllers;\r\n\t\t\t},\r\n\t\r\n\t\t\tresetElements: function resetElements() {\r\n\t\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tthis.getDatasetMeta(datasetIndex).controller.reset();\r\n\t\t\t\t}, this);\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: function update(animationDuration, lazy) {\r\n\t\t\t\tChart.pluginService.notifyPlugins('beforeUpdate', [this]);\r\n\t\r\n\t\t\t\t// In case the entire data object changed\r\n\t\t\t\tthis.tooltip._data = this.data;\r\n\t\r\n\t\t\t\t// Make sure dataset controllers are updated and new controllers are reset\r\n\t\t\t\tvar newControllers = this.buildOrUpdateControllers();\r\n\t\r\n\t\t\t\t// Make sure all dataset controllers have correct meta data counts\r\n\t\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tthis.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\r\n\t\r\n\t\t\t\t// Apply changes to the dataets that require the scales to have been calculated i.e BorderColor chages\r\n\t\t\t\tChart.pluginService.notifyPlugins('afterScaleUpdate', [this]);\r\n\t\r\n\t\t\t\t// Can only reset the new controllers after the scales have been updated\r\n\t\t\t\thelpers.each(newControllers, function(controller) {\r\n\t\t\t\t\tcontroller.reset();\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// This will loop through any data and do the appropriate element update for the type\r\n\t\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tthis.getDatasetMeta(datasetIndex).controller.update();\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t\t// Do this before render so that any plugins that need final scale updates can use it\r\n\t\t\t\tChart.pluginService.notifyPlugins('afterUpdate', [this]);\r\n\t\r\n\t\t\t\tthis.render(animationDuration, lazy);\r\n\t\t\t},\r\n\t\r\n\t\t\trender: function render(duration, lazy) {\r\n\t\t\t\tChart.pluginService.notifyPlugins('beforeRender', [this]);\r\n\t\r\n\t\t\t\tvar animationOptions = this.options.animation;\r\n\t\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n\t\t\t\t\tvar animation = new Chart.Animation();\r\n\t\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; //60 fps\r\n\t\t\t\t\tanimation.easing = animationOptions.easing;\r\n\t\r\n\t\t\t\t\t// render function\r\n\t\t\t\t\tanimation.render = function(chartInstance, animationObject) {\r\n\t\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\r\n\t\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\r\n\t\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\r\n\t\r\n\t\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t// user events\r\n\t\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\r\n\t\t\t\t\tanimation.onAnimationComplete = animationOptions.onComplete;\r\n\t\r\n\t\t\t\t\tChart.animationService.addAnimation(this, animation, duration, lazy);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.draw();\r\n\t\t\t\t\tif (animationOptions && animationOptions.onComplete && animationOptions.onComplete.call) {\r\n\t\t\t\t\t\tanimationOptions.onComplete.call(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\r\n\t\t\tdraw: function(ease) {\r\n\t\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\t\tthis.clear();\r\n\t\r\n\t\t\t\tChart.pluginService.notifyPlugins('beforeDraw', [this, easingDecimal]);\r\n\t\r\n\t\t\t\t// Draw all the scales\r\n\t\t\t\thelpers.each(this.boxes, function(box) {\r\n\t\t\t\t\tbox.draw(this.chartArea);\r\n\t\t\t\t}, this);\r\n\t\t\t\tif (this.scale) {\r\n\t\t\t\t\tthis.scale.draw();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Clip out the chart area so that anything outside does not draw. This is necessary for zoom and pan to function\r\n\t\t\t\tvar context = this.chart.ctx;\r\n\t\t\t\tcontext.save();\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.rect(this.chartArea.left, this.chartArea.top, this.chartArea.right - this.chartArea.left, this.chartArea.bottom - this.chartArea.top);\r\n\t\t\t\tcontext.clip();\r\n\t\r\n\t\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\r\n\t\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tif (this.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\tthis.getDatasetMeta(datasetIndex).controller.draw(ease);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this, true);\r\n\t\r\n\t\t\t\t// Restore from the clipping operation\r\n\t\t\t\tcontext.restore();\r\n\t\r\n\t\t\t\t// Finally draw the tooltip\r\n\t\t\t\tthis.tooltip.transition(easingDecimal).draw();\r\n\t\r\n\t\t\t\tChart.pluginService.notifyPlugins('afterDraw', [this, easingDecimal]);\r\n\t\t\t},\r\n\t\r\n\t\t\t// Get the single element that was clicked on\r\n\t\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n\t\t\tgetElementAtEvent: function(e) {\r\n\t\t\t\tvar eventPosition = helpers.getRelativePosition(e, this.chart);\r\n\t\t\t\tvar elementsArray = [];\r\n\t\r\n\t\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tif (this.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\t\t\t\tif (element.inRange(eventPosition.x, eventPosition.y)) {\r\n\t\t\t\t\t\t\t\telementsArray.push(element);\r\n\t\t\t\t\t\t\t\treturn elementsArray;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t\treturn elementsArray;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetElementsAtEvent: function(e) {\r\n\t\t\t\tvar eventPosition = helpers.getRelativePosition(e, this.chart);\r\n\t\t\t\tvar elementsArray = [];\r\n\t\r\n\t\t\t\tvar found = (function() {\r\n\t\t\t\t\tif (this.data.datasets) {\r\n\t\t\t\t\t\tfor (var i = 0; i < this.data.datasets.length; i++) {\r\n\t\t\t\t\t\t\tvar meta = this.getDatasetMeta(i);\r\n\t\t\t\t\t\t\tif (this.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\t\tfor (var j = 0; j < meta.data.length; j++) {\r\n\t\t\t\t\t\t\t\t\tif (meta.data[j].inRange(eventPosition.x, eventPosition.y)) {\r\n\t\t\t\t\t\t\t\t\t\treturn meta.data[j];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}).call(this);\r\n\t\r\n\t\t\t\tif (!found) {\r\n\t\t\t\t\treturn elementsArray;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tif (this.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\telementsArray.push(meta.data[found._index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t\treturn elementsArray;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetElementsAtEventForMode: function(e, mode) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tswitch (mode) {\r\n\t\t\t\tcase 'single':\r\n\t\t\t\t\treturn me.getElementAtEvent(e);\r\n\t\t\t\tcase 'label':\r\n\t\t\t\t\treturn me.getElementsAtEvent(e);\r\n\t\t\t\tcase 'dataset':\r\n\t\t\t\t\treturn me.getDatasetAtEvent(e);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn e;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetDatasetAtEvent: function(e) {\r\n\t\t\t\tvar elementsArray = this.getElementAtEvent(e);\r\n\t\r\n\t\t\t\tif (elementsArray.length > 0) {\r\n\t\t\t\t\telementsArray = this.getDatasetMeta(elementsArray[0]._datasetIndex).data;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn elementsArray;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetDatasetMeta: function(datasetIndex) {\r\n\t\t\t\tvar dataset = this.data.datasets[datasetIndex];\r\n\t\t\t\tif (!dataset._meta) {\r\n\t\t\t\t\tdataset._meta = {};\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar meta = dataset._meta[this.id];\r\n\t\t\t\tif (!meta) {\r\n\t\t\t\t\tmeta = dataset._meta[this.id] = {\r\n\t\t\t\t\ttype: null,\r\n\t\t\t\t\tdata: [],\r\n\t\t\t\t\tdataset: null,\r\n\t\t\t\t\tcontroller: null,\r\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\r\n\t\t\t\t\txAxisID: null,\r\n\t\t\t\t\tyAxisID: null\r\n\t\t\t\t};\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn meta;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVisibleDatasetCount: function() {\r\n\t\t\t\tvar count = 0;\r\n\t\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\r\n\t\t\t\t\t if (this.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn count;\r\n\t\t\t},\r\n\t\r\n\t\t\tisDatasetVisible: function(datasetIndex) {\r\n\t\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\t\r\n\t\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n\t\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n\t\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n\t\t\t},\r\n\t\r\n\t\t\tgenerateLegend: function generateLegend() {\r\n\t\t\t\treturn this.options.legendCallback(this);\r\n\t\t\t},\r\n\t\r\n\t\t\tdestroy: function destroy() {\r\n\t\t\t\tthis.clear();\r\n\t\t\t\thelpers.unbindEvents(this, this.events);\r\n\t\t\t\thelpers.removeResizeListener(this.chart.canvas.parentNode);\r\n\t\r\n\t\t\t\t// Reset canvas height/width attributes\r\n\t\t\t\tvar canvas = this.chart.canvas;\r\n\t\t\t\tcanvas.width = this.chart.width;\r\n\t\t\t\tcanvas.height = this.chart.height;\r\n\t\r\n\t\t\t\t// if we scaled the canvas in response to a devicePixelRatio !== 1, we need to undo that transform here\r\n\t\t\t\tif (this.chart.originalDevicePixelRatio !== undefined) {\r\n\t\t\t\t\tthis.chart.ctx.scale(1 / this.chart.originalDevicePixelRatio, 1 / this.chart.originalDevicePixelRatio);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Reset to the old style since it may have been changed by the device pixel ratio changes\r\n\t\t\t\tcanvas.style.width = this.chart.originalCanvasStyleWidth;\r\n\t\t\t\tcanvas.style.height = this.chart.originalCanvasStyleHeight;\r\n\t\r\n\t\t\t\tChart.pluginService.notifyPlugins('destroy', [this]);\r\n\t\r\n\t\t\t\tdelete Chart.instances[this.id];\r\n\t\t\t},\r\n\t\r\n\t\t\ttoBase64Image: function toBase64Image() {\r\n\t\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\r\n\t\t\t},\r\n\t\r\n\t\t\tinitToolTip: function initToolTip() {\r\n\t\t\t\tthis.tooltip = new Chart.Tooltip({\r\n\t\t\t\t\t_chart: this.chart,\r\n\t\t\t\t\t_chartInstance: this,\r\n\t\t\t\t\t_data: this.data,\r\n\t\t\t\t\t_options: this.options\r\n\t\t\t\t}, this);\r\n\t\t\t},\r\n\t\r\n\t\t\tbindEvents: function bindEvents() {\r\n\t\t\t\thelpers.bindEvents(this, this.options.events, function(evt) {\r\n\t\t\t\t\tthis.eventHandler(evt);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateHoverStyle: function(elements, mode, enabled) {\r\n\t\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\r\n\t\t\t\tvar element, i, ilen;\r\n\t\r\n\t\t\t\tswitch (mode) {\r\n\t\t\t\tcase 'single':\r\n\t\t\t\t\telements = [ elements[0] ];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'label':\r\n\t\t\t\tcase 'dataset':\r\n\t\t\t\t\t// elements = elements;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// unsupported mode\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\r\n\t\t\t\t\telement = elements[i];\r\n\t\t\t\t\tif (element) {\r\n\t\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\teventHandler: function eventHandler(e) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar tooltip = me.tooltip;\r\n\t\t\t\tvar options = me.options || {};\r\n\t\t\t\tvar hoverOptions = options.hover;\r\n\t\t\t\tvar tooltipsOptions = options.tooltips;\r\n\t\r\n\t\t\t\tme.lastActive = me.lastActive || [];\r\n\t\t\t\tme.lastTooltipActive = me.lastTooltipActive || [];\r\n\t\r\n\t\t\t\t// Find Active Elements for hover and tooltips\r\n\t\t\t\tif (e.type === 'mouseout') {\r\n\t\t\t\t\tme.active = [];\r\n\t\t\t\t\tme.tooltipActive = [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode);\r\n\t\t\t\t\tme.tooltipActive =  me.getElementsAtEventForMode(e, tooltipsOptions.mode);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// On Hover hook\r\n\t\t\t\tif (hoverOptions.onHover) {\r\n\t\t\t\t\thoverOptions.onHover.call(me, me.active);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\r\n\t\t\t\t\tif (options.onClick) {\r\n\t\t\t\t\t\toptions.onClick.call(me, e, me.active);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (me.legend && me.legend.handleEvent) {\r\n\t\t\t\t\t\tme.legend.handleEvent(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Remove styling for last active (even if it may still be active)\r\n\t\t\t\tif (me.lastActive.length) {\r\n\t\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Built in hover styling\r\n\t\t\t\tif (me.active.length && hoverOptions.mode) {\r\n\t\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Built in Tooltips\r\n\t\t\t\tif (tooltipsOptions.enabled || tooltipsOptions.custom) {\r\n\t\t\t\t\ttooltip.initialize();\r\n\t\t\t\t\ttooltip._active = me.tooltipActive;\r\n\t\t\t\t\ttooltip.update(true);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Hover animations\r\n\t\t\t\ttooltip.pivot();\r\n\t\r\n\t\t\t\tif (!me.animating) {\r\n\t\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\r\n\t\t\t\t\tif (!helpers.arrayEquals(me.active, me.lastActive) ||\r\n\t\t\t\t\t\t!helpers.arrayEquals(me.tooltipActive, me.lastTooltipActive)) {\r\n\t\r\n\t\t\t\t\t\tme.stop();\r\n\t\r\n\t\t\t\t\t\tif (tooltipsOptions.enabled || tooltipsOptions.custom) {\r\n\t\t\t\t\t\t\ttooltip.update(true);\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// We only need to render at this point. Updating will cause scales to be\r\n\t\t\t\t\t\t// recomputed generating flicker & using more memory than necessary.\r\n\t\t\t\t\t\tme.render(hoverOptions.animationDuration, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Remember Last Actives\r\n\t\t\t\tme.lastActive = me.active;\r\n\t\t\t\tme.lastTooltipActive = me.tooltipActive;\r\n\t\t\t\treturn me;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\n\n/***/ },\n\n/***/ 140:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\tvar noop = helpers.noop;\r\n\t\r\n\t\t// Base class for all dataset controllers (line, bar, etc)\r\n\t\tChart.DatasetController = function(chart, datasetIndex) {\r\n\t\t\tthis.initialize.call(this, chart, datasetIndex);\r\n\t\t};\r\n\t\r\n\t\thelpers.extend(Chart.DatasetController.prototype, {\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n\t\t\t * @type {Chart.core.element}\r\n\t\t\t */\r\n\t\t\tdatasetElementType: null,\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n\t\t\t * @type {Chart.core.element}\r\n\t\t\t */\r\n\t\t\tdataElementType: null,\r\n\t\r\n\t\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\t\tthis.chart = chart;\r\n\t\t\t\tthis.index = datasetIndex;\r\n\t\t\t\tthis.linkScales();\r\n\t\t\t\tthis.addElements();\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateIndex: function(datasetIndex) {\r\n\t\t\t\tthis.index = datasetIndex;\r\n\t\t\t},\r\n\t\r\n\t\t\tlinkScales: function() {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\r\n\t\t\t\tif (meta.xAxisID === null) {\r\n\t\t\t\t\tmeta.xAxisID = dataset.xAxisID || this.chart.options.scales.xAxes[0].id;\r\n\t\t\t\t}\r\n\t\t\t\tif (meta.yAxisID === null) {\r\n\t\t\t\t\tmeta.yAxisID = dataset.yAxisID || this.chart.options.scales.yAxes[0].id;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetDataset: function() {\r\n\t\t\t\treturn this.chart.data.datasets[this.index];\r\n\t\t\t},\r\n\t\r\n\t\t\tgetMeta: function() {\r\n\t\t\t\treturn this.chart.getDatasetMeta(this.index);\r\n\t\t\t},\r\n\t\r\n\t\t\tgetScaleForId: function(scaleID) {\r\n\t\t\t\treturn this.chart.scales[scaleID];\r\n\t\t\t},\r\n\t\r\n\t\t\treset: function() {\r\n\t\t\t\tthis.update(true);\r\n\t\t\t},\r\n\t\r\n\t\t\tcreateMetaDataset: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar type = me.datasetElementType;\r\n\t\t\t\treturn type && new type({\r\n\t\t\t\t\t_chart: me.chart.chart,\r\n\t\t\t\t\t_datasetIndex: me.index\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tcreateMetaData: function(index) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar type = me.dataElementType;\r\n\t\t\t\treturn type && new type({\r\n\t\t\t\t\t_chart: me.chart.chart,\r\n\t\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t\t_index: index\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\taddElements: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar data = me.getDataset().data || [];\r\n\t\t\t\tvar metaData = meta.data;\r\n\t\t\t\tvar i, ilen;\r\n\t\r\n\t\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\r\n\t\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(meta, i);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\r\n\t\t\t},\r\n\t\r\n\t\t\taddElementAndReset: function(index) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar element = me.createMetaData(index);\r\n\t\t\t\tme.getMeta().data.splice(index, 0, element);\r\n\t\t\t\tme.updateElement(element, index, true);\r\n\t\t\t},\r\n\t\r\n\t\t\tbuildOrUpdateElements: function buildOrUpdateElements() {\r\n\t\t\t\t// Handle the number of data points changing\r\n\t\t\t\tvar meta = this.getMeta(),\r\n\t\t\t\t\tmd = meta.data,\r\n\t\t\t\t\tnumData = this.getDataset().data.length,\r\n\t\t\t\t\tnumMetaData = md.length;\r\n\t\r\n\t\t\t\t// Make sure that we handle number of datapoints changing\r\n\t\t\t\tif (numData < numMetaData) {\r\n\t\t\t\t\t// Remove excess bars for data points that have been removed\r\n\t\t\t\t\tmd.splice(numData, numMetaData - numData);\r\n\t\t\t\t} else if (numData > numMetaData) {\r\n\t\t\t\t\t// Add new elements\r\n\t\t\t\t\tfor (var index = numMetaData; index < numData; ++index) {\r\n\t\t\t\t\t\tthis.addElementAndReset(index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: noop,\r\n\t\r\n\t\t\tdraw: function(ease) {\r\n\t\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\t\thelpers.each(this.getMeta().data, function(element, index) {\r\n\t\t\t\t\telement.transition(easingDecimal).draw();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(element, elementOpts) {\r\n\t\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\t\tindex = element._index,\r\n\t\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\t\tcolor = helpers.color,\r\n\t\t\t\t\tmodel = element._model;\r\n\t\r\n\t\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n\t\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n\t\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n\t\t\t},\r\n\t\r\n\t\t\tsetHoverStyle: function(element) {\r\n\t\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\t\tindex = element._index,\r\n\t\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\t\tcolor = helpers.color,\r\n\t\t\t\t\tgetHoverColor = helpers.getHoverColor,\r\n\t\t\t\t\tmodel = element._model;\r\n\t\r\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t\tChart.DatasetController.extend = helpers.inherits;\r\n\t};\n\n/***/ },\n\n/***/ 141:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t  var helpers = Chart.helpers;\r\n\t\r\n\t  Chart.elements = {};\r\n\t\r\n\t  Chart.Element = function(configuration) {\r\n\t    helpers.extend(this, configuration);\r\n\t    this.initialize.apply(this, arguments);\r\n\t  };\r\n\t  helpers.extend(Chart.Element.prototype, {\r\n\t    initialize: function() {\r\n\t      this.hidden = false;\r\n\t    },\r\n\t    pivot: function() {\r\n\t      if (!this._view) {\r\n\t        this._view = helpers.clone(this._model);\r\n\t      }\r\n\t      this._start = helpers.clone(this._view);\r\n\t      return this;\r\n\t    },\r\n\t    transition: function(ease) {\r\n\t      if (!this._view) {\r\n\t        this._view = helpers.clone(this._model);\r\n\t      }\r\n\t\r\n\t      // No animation -> No Transition\r\n\t      if (ease === 1) {\r\n\t        this._view = this._model;\r\n\t        this._start = null;\r\n\t        return this;\r\n\t      }\r\n\t\r\n\t      if (!this._start) {\r\n\t        this.pivot();\r\n\t      }\r\n\t\r\n\t      helpers.each(this._model, function(value, key) {\r\n\t\r\n\t        if (key[0] === '_') {\r\n\t          // Only non-underscored properties\r\n\t        }\r\n\t\r\n\t        // Init if doesn't exist\r\n\t        else if (!this._view.hasOwnProperty(key)) {\r\n\t          if (typeof value === 'number' && !isNaN(this._view[key])) {\r\n\t            this._view[key] = value * ease;\r\n\t          } else {\r\n\t            this._view[key] = value;\r\n\t          }\r\n\t        }\r\n\t\r\n\t        // No unnecessary computations\r\n\t        else if (value === this._view[key]) {\r\n\t          // It's the same! Woohoo!\r\n\t        }\r\n\t\r\n\t        // Color transitions if possible\r\n\t        else if (typeof value === 'string') {\r\n\t          try {\r\n\t            var color = helpers.color(this._model[key]).mix(helpers.color(this._start[key]), ease);\r\n\t            this._view[key] = color.rgbString();\r\n\t          } catch (err) {\r\n\t            this._view[key] = value;\r\n\t          }\r\n\t        }\r\n\t        // Number transitions\r\n\t        else if (typeof value === 'number') {\r\n\t          var startVal = this._start[key] !== undefined && isNaN(this._start[key]) === false ? this._start[key] : 0;\r\n\t          this._view[key] = ((this._model[key] - startVal) * ease) + startVal;\r\n\t        }\r\n\t        // Everything else\r\n\t        else {\r\n\t          this._view[key] = value;\r\n\t        }\r\n\t      }, this);\r\n\t\r\n\t      return this;\r\n\t    },\r\n\t    tooltipPosition: function() {\r\n\t      return {\r\n\t        x: this._model.x,\r\n\t        y: this._model.y\r\n\t      };\r\n\t    },\r\n\t    hasValue: function() {\r\n\t      return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n\t    }\r\n\t  });\r\n\t\r\n\t  Chart.Element.extend = helpers.inherits;\r\n\t\r\n\t};\r\n\n\n/***/ },\n\n/***/ 142:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*global window: false */\r\n\t/*global document: false */\r\n\t\"use strict\";\r\n\t\r\n\tvar color = __webpack_require__(119);\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\t//Global Chart helpers object for utility methods and classes\r\n\t\tvar helpers = Chart.helpers = {};\r\n\t\r\n\t\t//-- Basic js utility methods\r\n\t\thelpers.each = function(loopable, callback, self, reverse) {\r\n\t\t\t// Check to see if null or undefined firstly.\r\n\t\t\tvar i, len;\r\n\t\t\tif (helpers.isArray(loopable)) {\r\n\t\t\t\tlen = loopable.length;\r\n\t\t\t\tif (reverse) {\r\n\t\t\t\t\tfor (i = len - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof loopable === 'object') {\r\n\t\t\t\tvar keys = Object.keys(loopable);\r\n\t\t\t\tlen = keys.length;\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.clone = function(obj) {\r\n\t\t\tvar objClone = {};\r\n\t\t\thelpers.each(obj, function(value, key) {\r\n\t\t\t\tif (helpers.isArray(value)) {\r\n\t\t\t\t\tobjClone[key] = value.slice(0);\r\n\t\t\t\t} else if (typeof value === 'object' && value !== null) {\r\n\t\t\t\t\tobjClone[key] = helpers.clone(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobjClone[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn objClone;\r\n\t\t};\r\n\t\thelpers.extend = function(base) {\r\n\t\t\tvar len = arguments.length;\r\n\t\t\tvar additionalArgs = [];\r\n\t\t\tfor (var i = 1; i < len; i++) {\r\n\t\t\t\tadditionalArgs.push(arguments[i]);\r\n\t\t\t}\r\n\t\t\thelpers.each(additionalArgs, function(extensionObject) {\r\n\t\t\t\thelpers.each(extensionObject, function(value, key) {\r\n\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn base;\r\n\t\t};\r\n\t\t// Need a special merge function to chart configs since they are now grouped\r\n\t\thelpers.configMerge = function(_base) {\r\n\t\t\tvar base = helpers.clone(_base);\r\n\t\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\r\n\t\t\t\thelpers.each(extension, function(value, key) {\r\n\t\t\t\t\tif (key === 'scales') {\r\n\t\t\t\t\t\t// Scale config merging is complex. Add out own function here for that\r\n\t\t\t\t\t\tbase[key] = helpers.scaleMerge(base.hasOwnProperty(key) ? base[key] : {}, value);\r\n\t\r\n\t\t\t\t\t} else if (key === 'scale') {\r\n\t\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\r\n\t\t\t\t\t\tbase[key] = helpers.configMerge(base.hasOwnProperty(key) ? base[key] : {}, Chart.scaleService.getScaleDefaults(value.type), value);\r\n\t\t\t\t\t} else if (base.hasOwnProperty(key) && helpers.isArray(base[key]) && helpers.isArray(value)) {\r\n\t\t\t\t\t\t// In this case we have an array of objects replacing another array. Rather than doing a strict replace,\r\n\t\t\t\t\t\t// merge. This allows easy scale option merging\r\n\t\t\t\t\t\tvar baseArray = base[key];\r\n\t\r\n\t\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\t\r\n\t\t\t\t\t\t\tif (index < baseArray.length) {\r\n\t\t\t\t\t\t\t\tif (typeof baseArray[index] === 'object' && baseArray[index] !== null && typeof valueObj === 'object' && valueObj !== null) {\r\n\t\t\t\t\t\t\t\t\t// Two objects are coming together. Do a merge of them.\r\n\t\t\t\t\t\t\t\t\tbaseArray[index] = helpers.configMerge(baseArray[index], valueObj);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Just overwrite in this case since there is nothing to merge\r\n\t\t\t\t\t\t\t\t\tbaseArray[index] = valueObj;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbaseArray.push(valueObj); // nothing to merge\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === \"object\" && base[key] !== null && typeof value === \"object\") {\r\n\t\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\r\n\t\t\treturn base;\r\n\t\t};\r\n\t\thelpers.extendDeep = function(_base) {\r\n\t\t\treturn _extendDeep.apply(this, arguments);\r\n\t\r\n\t\t\tfunction _extendDeep(dst) {\r\n\t\t\t\thelpers.each(arguments, function(obj) {\r\n\t\t\t\t\tif (obj !== dst) {\r\n\t\t\t\t\t\thelpers.each(obj, function(value, key) {\r\n\t\t\t\t\t\t\tif (dst[key] && dst[key].constructor && dst[key].constructor === Object) {\r\n\t\t\t\t\t\t\t\t_extendDeep(dst[key], value);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tdst[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn dst;\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.scaleMerge = function(_base, extension) {\r\n\t\t\tvar base = helpers.clone(_base);\r\n\t\r\n\t\t\thelpers.each(extension, function(value, key) {\r\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\r\n\t\t\t\t\t// These properties are arrays of items\r\n\t\t\t\t\tif (base.hasOwnProperty(key)) {\r\n\t\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\t\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\r\n\t\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\r\n\t\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\r\n\t\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\r\n\t\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\r\n\t\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Type is the same\r\n\t\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbase[key] = [];\r\n\t\t\t\t\t\thelpers.each(value, function(valueObj) {\r\n\t\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === \"object\" && base[key] !== null && typeof value === \"object\") {\r\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\treturn base;\r\n\t\t};\r\n\t\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\r\n\t\t\tif (value === undefined || value === null) {\r\n\t\t\t\treturn defaultValue;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (helpers.isArray(value)) {\r\n\t\t\t\treturn index < value.length ? value[index] : defaultValue;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn value;\r\n\t\t};\r\n\t\thelpers.getValueOrDefault = function(value, defaultValue) {\r\n\t\t\treturn value === undefined ? defaultValue : value;\r\n\t\t};\r\n\t\thelpers.indexOf = function(arrayToSearch, item) {\r\n\t\t\tif (Array.prototype.indexOf) {\r\n\t\t\t\treturn arrayToSearch.indexOf(item);\r\n\t\t\t} else {\r\n\t\t\t\tfor (var i = 0; i < arrayToSearch.length; i++) {\r\n\t\t\t\t\tif (arrayToSearch[i] === item)\r\n\t\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.where = function(collection, filterCallback) {\r\n\t\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\r\n\t\t\t\treturn collection.filter(filterCallback);\r\n\t\t\t} else {\r\n\t\t\t\tvar filtered = [];\r\n\t\r\n\t\t\t\thelpers.each(collection, function(item) {\r\n\t\t\t\t\tif (filterCallback(item)) {\r\n\t\t\t\t\t\tfiltered.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\treturn filtered;\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.findIndex = function(arrayToSearch, callback, thisArg) {\r\n\t\t\tvar index = -1;\r\n\t\t\tif (Array.prototype.findIndex) {\r\n\t\t\t\tindex = arrayToSearch.findIndex(callback, thisArg);\r\n\t\t\t} else {\r\n\t\t\t\tfor (var i = 0; i < arrayToSearch.length; ++i) {\r\n\t\t\t\t\tthisArg = thisArg !== undefined ? thisArg : arrayToSearch;\r\n\t\r\n\t\t\t\t\tif (callback.call(thisArg, arrayToSearch[i], i, arrayToSearch)) {\r\n\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn index;\r\n\t\t};\r\n\t\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t\t// Default to start of the array\r\n\t\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\t\tstartIndex = -1;\r\n\t\t\t}\r\n\t\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n\t\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\t\treturn currentItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t\t// Default to end of the array\r\n\t\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\t\tstartIndex = arrayToSearch.length;\r\n\t\t\t}\r\n\t\t\tfor (var i = startIndex - 1; i >= 0; i--) {\r\n\t\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\t\treturn currentItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.inherits = function(extensions) {\r\n\t\t\t//Basic javascript inheritance based on the model created in Backbone.js\r\n\t\t\tvar parent = this;\r\n\t\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function() {\r\n\t\t\t\treturn parent.apply(this, arguments);\r\n\t\t\t};\r\n\t\r\n\t\t\tvar Surrogate = function() {\r\n\t\t\t\tthis.constructor = ChartElement;\r\n\t\t\t};\r\n\t\t\tSurrogate.prototype = parent.prototype;\r\n\t\t\tChartElement.prototype = new Surrogate();\r\n\t\r\n\t\t\tChartElement.extend = helpers.inherits;\r\n\t\r\n\t\t\tif (extensions) {\r\n\t\t\t\thelpers.extend(ChartElement.prototype, extensions);\r\n\t\t\t}\r\n\t\r\n\t\t\tChartElement.__super__ = parent.prototype;\r\n\t\r\n\t\t\treturn ChartElement;\r\n\t\t};\r\n\t\thelpers.noop = function() {};\r\n\t\thelpers.uid = (function() {\r\n\t\t\tvar id = 0;\r\n\t\t\treturn function() {\r\n\t\t\t\treturn id++;\r\n\t\t\t};\r\n\t\t})();\r\n\t\thelpers.warn = function(str) {\r\n\t\t\t//Method for warning of errors\r\n\t\t\tif (console && typeof console.warn === \"function\") {\r\n\t\t\t\tconsole.warn(str);\r\n\t\t\t}\r\n\t\t};\r\n\t\t//-- Math methods\r\n\t\thelpers.isNumber = function(n) {\r\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\r\n\t\t};\r\n\t\thelpers.almostEquals = function(x, y, epsilon) {\r\n\t\t\treturn Math.abs(x - y) < epsilon;\r\n\t\t};\r\n\t\thelpers.max = function(array) {\r\n\t\t\treturn array.reduce(function(max, value) {\r\n\t\t\t\tif (!isNaN(value)) {\r\n\t\t\t\t\treturn Math.max(max, value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn max;\r\n\t\t\t\t}\r\n\t\t\t}, Number.NEGATIVE_INFINITY);\r\n\t\t};\r\n\t\thelpers.min = function(array) {\r\n\t\t\treturn array.reduce(function(min, value) {\r\n\t\t\t\tif (!isNaN(value)) {\r\n\t\t\t\t\treturn Math.min(min, value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn min;\r\n\t\t\t\t}\r\n\t\t\t}, Number.POSITIVE_INFINITY);\r\n\t\t};\r\n\t\thelpers.sign = function(x) {\r\n\t\t\tif (Math.sign) {\r\n\t\t\t\treturn Math.sign(x);\r\n\t\t\t} else {\r\n\t\t\t\tx = +x; // convert to a number\r\n\t\t\t\tif (x === 0 || isNaN(x)) {\r\n\t\t\t\t\treturn x;\r\n\t\t\t\t}\r\n\t\t\t\treturn x > 0 ? 1 : -1;\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.log10 = function(x) {\r\n\t\t\tif (Math.log10) {\r\n\t\t\t\treturn Math.log10(x);\r\n\t\t\t} else {\r\n\t\t\t\treturn Math.log(x) / Math.LN10;\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.toRadians = function(degrees) {\r\n\t\t\treturn degrees * (Math.PI / 180);\r\n\t\t};\r\n\t\thelpers.toDegrees = function(radians) {\r\n\t\t\treturn radians * (180 / Math.PI);\r\n\t\t};\r\n\t\t// Gets the angle from vertical upright to the point about a centre.\r\n\t\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n\t\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\r\n\t\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\r\n\t\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\t\r\n\t\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\t\r\n\t\t\tif (angle < (-0.5 * Math.PI)) {\r\n\t\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n\t\t\t}\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\tangle: angle,\r\n\t\t\t\tdistance: radialDistanceFromCenter\r\n\t\t\t};\r\n\t\t};\r\n\t\thelpers.aliasPixel = function(pixelWidth) {\r\n\t\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n\t\t};\r\n\t\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n\t\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\r\n\t\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\t\r\n\t\t\t// This function must also respect \"skipped\" points\r\n\t\r\n\t\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\r\n\t\t\t\tcurrent = middlePoint,\r\n\t\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\r\n\t\r\n\t\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n\t\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\t\r\n\t\t\tvar s01 = d01 / (d01 + d12);\r\n\t\t\tvar s12 = d12 / (d01 + d12);\r\n\t\r\n\t\t\t// If all points are the same, s01 & s02 will be inf\r\n\t\t\ts01 = isNaN(s01) ? 0 : s01;\r\n\t\t\ts12 = isNaN(s12) ? 0 : s12;\r\n\t\r\n\t\t\tvar fa = t * s01; // scaling factor for triangle Ta\r\n\t\t\tvar fb = t * s12;\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\tprevious: {\r\n\t\t\t\t\tx: current.x - fa * (next.x - previous.x),\r\n\t\t\t\t\ty: current.y - fa * (next.y - previous.y)\r\n\t\t\t\t},\r\n\t\t\t\tnext: {\r\n\t\t\t\t\tx: current.x + fb * (next.x - previous.x),\r\n\t\t\t\t\ty: current.y + fb * (next.y - previous.y)\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\thelpers.nextItem = function(collection, index, loop) {\r\n\t\t\tif (loop) {\r\n\t\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n\t\t\t}\r\n\t\r\n\t\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n\t\t};\r\n\t\thelpers.previousItem = function(collection, index, loop) {\r\n\t\t\tif (loop) {\r\n\t\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n\t\t\t}\r\n\t\t\treturn index <= 0 ? collection[0] : collection[index - 1];\r\n\t\t};\r\n\t\t// Implementation of the nice number algorithm used in determining where axis labels will go\r\n\t\thelpers.niceNum = function(range, round) {\r\n\t\t\tvar exponent = Math.floor(helpers.log10(range));\r\n\t\t\tvar fraction = range / Math.pow(10, exponent);\r\n\t\t\tvar niceFraction;\r\n\t\r\n\t\t\tif (round) {\r\n\t\t\t\tif (fraction < 1.5) {\r\n\t\t\t\t\tniceFraction = 1;\r\n\t\t\t\t} else if (fraction < 3) {\r\n\t\t\t\t\tniceFraction = 2;\r\n\t\t\t\t} else if (fraction < 7) {\r\n\t\t\t\t\tniceFraction = 5;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tniceFraction = 10;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (fraction <= 1.0) {\r\n\t\t\t\t\tniceFraction = 1;\r\n\t\t\t\t} else if (fraction <= 2) {\r\n\t\t\t\t\tniceFraction = 2;\r\n\t\t\t\t} else if (fraction <= 5) {\r\n\t\t\t\t\tniceFraction = 5;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tniceFraction = 10;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn niceFraction * Math.pow(10, exponent);\r\n\t\t};\r\n\t\t//Easing functions adapted from Robert Penner's easing equations\r\n\t\t//http://www.robertpenner.com/easing/\r\n\t\tvar easingEffects = helpers.easingEffects = {\r\n\t\t\tlinear: function(t) {\r\n\t\t\t\treturn t;\r\n\t\t\t},\r\n\t\t\teaseInQuad: function(t) {\r\n\t\t\t\treturn t * t;\r\n\t\t\t},\r\n\t\t\teaseOutQuad: function(t) {\r\n\t\t\t\treturn -1 * t * (t - 2);\r\n\t\t\t},\r\n\t\t\teaseInOutQuad: function(t) {\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn 1 / 2 * t * t;\r\n\t\t\t\t}\r\n\t\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\r\n\t\t\t},\r\n\t\t\teaseInCubic: function(t) {\r\n\t\t\t\treturn t * t * t;\r\n\t\t\t},\r\n\t\t\teaseOutCubic: function(t) {\r\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\r\n\t\t\t},\r\n\t\t\teaseInOutCubic: function(t) {\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn 1 / 2 * t * t * t;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\r\n\t\t\t},\r\n\t\t\teaseInQuart: function(t) {\r\n\t\t\t\treturn t * t * t * t;\r\n\t\t\t},\r\n\t\t\teaseOutQuart: function(t) {\r\n\t\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\r\n\t\t\t},\r\n\t\t\teaseInOutQuart: function(t) {\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn 1 / 2 * t * t * t * t;\r\n\t\t\t\t}\r\n\t\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\r\n\t\t\t},\r\n\t\t\teaseInQuint: function(t) {\r\n\t\t\t\treturn 1 * (t /= 1) * t * t * t * t;\r\n\t\t\t},\r\n\t\t\teaseOutQuint: function(t) {\r\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\r\n\t\t\t},\r\n\t\t\teaseInOutQuint: function(t) {\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn 1 / 2 * t * t * t * t * t;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\r\n\t\t\t},\r\n\t\t\teaseInSine: function(t) {\r\n\t\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\r\n\t\t\t},\r\n\t\t\teaseOutSine: function(t) {\r\n\t\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\r\n\t\t\t},\r\n\t\t\teaseInOutSine: function(t) {\r\n\t\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\r\n\t\t\t},\r\n\t\t\teaseInExpo: function(t) {\r\n\t\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\r\n\t\t\t},\r\n\t\t\teaseOutExpo: function(t) {\r\n\t\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\r\n\t\t\t},\r\n\t\t\teaseInOutExpo: function(t) {\r\n\t\t\t\tif (t === 0) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (t === 1) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\r\n\t\t\t\t}\r\n\t\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\r\n\t\t\t},\r\n\t\t\teaseInCirc: function(t) {\r\n\t\t\t\tif (t >= 1) {\r\n\t\t\t\t\treturn t;\r\n\t\t\t\t}\r\n\t\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\r\n\t\t\t},\r\n\t\t\teaseOutCirc: function(t) {\r\n\t\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\r\n\t\t\t},\r\n\t\t\teaseInOutCirc: function(t) {\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n\t\t\t},\r\n\t\t\teaseInElastic: function(t) {\r\n\t\t\t\tvar s = 1.70158;\r\n\t\t\t\tvar p = 0;\r\n\t\t\t\tvar a = 1;\r\n\t\t\t\tif (t === 0) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (!p) {\r\n\t\t\t\t\tp = 1 * 0.3;\r\n\t\t\t\t}\r\n\t\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\t\ta = 1;\r\n\t\t\t\t\ts = p / 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t\t}\r\n\t\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t\t},\r\n\t\t\teaseOutElastic: function(t) {\r\n\t\t\t\tvar s = 1.70158;\r\n\t\t\t\tvar p = 0;\r\n\t\t\t\tvar a = 1;\r\n\t\t\t\tif (t === 0) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (!p) {\r\n\t\t\t\t\tp = 1 * 0.3;\r\n\t\t\t\t}\r\n\t\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\t\ta = 1;\r\n\t\t\t\t\ts = p / 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t\t}\r\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\r\n\t\t\t},\r\n\t\t\teaseInOutElastic: function(t) {\r\n\t\t\t\tvar s = 1.70158;\r\n\t\t\t\tvar p = 0;\r\n\t\t\t\tvar a = 1;\r\n\t\t\t\tif (t === 0) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\tif ((t /= 1 / 2) === 2) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (!p) {\r\n\t\t\t\t\tp = 1 * (0.3 * 1.5);\r\n\t\t\t\t}\r\n\t\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\t\ta = 1;\r\n\t\t\t\t\ts = p / 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t\t}\r\n\t\t\t\tif (t < 1) {\r\n\t\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t\t\t}\r\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\t\t\t},\r\n\t\t\teaseInBack: function(t) {\r\n\t\t\t\tvar s = 1.70158;\r\n\t\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\r\n\t\t\t},\r\n\t\t\teaseOutBack: function(t) {\r\n\t\t\t\tvar s = 1.70158;\r\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\r\n\t\t\t},\r\n\t\t\teaseInOutBack: function(t) {\r\n\t\t\t\tvar s = 1.70158;\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n\t\t\t\t}\r\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n\t\t\t},\r\n\t\t\teaseInBounce: function(t) {\r\n\t\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\r\n\t\t\t},\r\n\t\t\teaseOutBounce: function(t) {\r\n\t\t\t\tif ((t /= 1) < (1 / 2.75)) {\r\n\t\t\t\t\treturn 1 * (7.5625 * t * t);\r\n\t\t\t\t} else if (t < (2 / 2.75)) {\r\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\r\n\t\t\t\t} else if (t < (2.5 / 2.75)) {\r\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\teaseInOutBounce: function(t) {\r\n\t\t\t\tif (t < 1 / 2) {\r\n\t\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\r\n\t\t\t\t}\r\n\t\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\r\n\t\t\t}\r\n\t\t};\r\n\t\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n\t\thelpers.requestAnimFrame = (function() {\r\n\t\t\treturn window.requestAnimationFrame ||\r\n\t\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\t\twindow.mozRequestAnimationFrame ||\r\n\t\t\t\twindow.oRequestAnimationFrame ||\r\n\t\t\t\twindow.msRequestAnimationFrame ||\r\n\t\t\t\tfunction(callback) {\r\n\t\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\r\n\t\t\t\t};\r\n\t\t})();\r\n\t\thelpers.cancelAnimFrame = (function() {\r\n\t\t\treturn window.cancelAnimationFrame ||\r\n\t\t\t\twindow.webkitCancelAnimationFrame ||\r\n\t\t\t\twindow.mozCancelAnimationFrame ||\r\n\t\t\t\twindow.oCancelAnimationFrame ||\r\n\t\t\t\twindow.msCancelAnimationFrame ||\r\n\t\t\t\tfunction(callback) {\r\n\t\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\r\n\t\t\t\t};\r\n\t\t})();\r\n\t\t//-- DOM methods\r\n\t\thelpers.getRelativePosition = function(evt, chart) {\r\n\t\t\tvar mouseX, mouseY;\r\n\t\t\tvar e = evt.originalEvent || evt,\r\n\t\t\t\tcanvas = evt.currentTarget || evt.srcElement,\r\n\t\t\t\tboundingRect = canvas.getBoundingClientRect();\r\n\t\r\n\t\t\tvar touches = e.touches;\r\n\t\t\tif (touches && touches.length > 0) {\r\n\t\t\t\tmouseX = touches[0].clientX;\r\n\t\t\t\tmouseY = touches[0].clientY;\r\n\t\r\n\t\t\t} else {\r\n\t\t\t\tmouseX = e.clientX;\r\n\t\t\t\tmouseY = e.clientY;\r\n\t\t\t}\r\n\t\r\n\t\t\t// Scale mouse coordinates into canvas coordinates\r\n\t\t\t// by following the pattern laid out by 'jerryj' in the comments of\r\n\t\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n\t\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n\t\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n\t\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n\t\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n\t\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n\t\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\t\r\n\t\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n\t\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n\t\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n\t\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\tx: mouseX,\r\n\t\t\t\ty: mouseY\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\thelpers.addEvent = function(node, eventType, method) {\r\n\t\t\tif (node.addEventListener) {\r\n\t\t\t\tnode.addEventListener(eventType, method);\r\n\t\t\t} else if (node.attachEvent) {\r\n\t\t\t\tnode.attachEvent(\"on\" + eventType, method);\r\n\t\t\t} else {\r\n\t\t\t\tnode[\"on\" + eventType] = method;\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.removeEvent = function(node, eventType, handler) {\r\n\t\t\tif (node.removeEventListener) {\r\n\t\t\t\tnode.removeEventListener(eventType, handler, false);\r\n\t\t\t} else if (node.detachEvent) {\r\n\t\t\t\tnode.detachEvent(\"on\" + eventType, handler);\r\n\t\t\t} else {\r\n\t\t\t\tnode[\"on\" + eventType] = helpers.noop;\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.bindEvents = function(chartInstance, arrayOfEvents, handler) {\r\n\t\t\t// Create the events object if it's not already present\r\n\t\t\tvar events = chartInstance.events = chartInstance.events || {};\r\n\t\r\n\t\t\thelpers.each(arrayOfEvents, function(eventName) {\r\n\t\t\t\tevents[eventName] = function() {\r\n\t\t\t\t\thandler.apply(chartInstance, arguments);\r\n\t\t\t\t};\r\n\t\t\t\thelpers.addEvent(chartInstance.chart.canvas, eventName, events[eventName]);\r\n\t\t\t});\r\n\t\t};\r\n\t\thelpers.unbindEvents = function(chartInstance, arrayOfEvents) {\r\n\t\t\tvar canvas = chartInstance.chart.canvas;\r\n\t\t\thelpers.each(arrayOfEvents, function(handler, eventName) {\r\n\t\t\t\thelpers.removeEvent(canvas, eventName, handler);\r\n\t\t\t});\r\n\t\t};\r\n\t\r\n\t\t// Private helper function to convert max-width/max-height values that may be percentages into a number\r\n\t\tfunction parseMaxStyle(styleValue, node, parentProperty) {\r\n\t\t\tvar valueInPixels;\r\n\t\t\tif (typeof(styleValue) === 'string') {\r\n\t\t\t\tvalueInPixels = parseInt(styleValue, 10);\r\n\t\r\n\t\t\t\tif (styleValue.indexOf('%') != -1) {\r\n\t\t\t\t\t// percentage * size in dimension\r\n\t\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvalueInPixels = styleValue;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn valueInPixels;\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * Returns if the given value contains an effective constraint.\r\n\t\t * @private\r\n\t\t */\r\n\t\tfunction isConstrainedValue(value) {\r\n\t\t\treturn value !== undefined &&  value !== null && value !== 'none';\r\n\t\t}\r\n\t\r\n\t\t// Private helper to get a constraint dimension\r\n\t\t// @param domNode : the node to check the constraint on\r\n\t\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n\t\t// @param percentageProperty : property of parent to use when calculating width as a percentage\r\n\t\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n\t\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n\t\t\tvar view = document.defaultView;\r\n\t\t\tvar parentNode = domNode.parentNode;\r\n\t\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n\t\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n\t\t\tvar hasCNode = isConstrainedValue(constrainedNode);\r\n\t\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\r\n\t\t\tvar infinity = Number.POSITIVE_INFINITY;\r\n\t\r\n\t\t\tif (hasCNode || hasCContainer) {\r\n\t\t\t\treturn Math.min(\r\n\t\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n\t\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 'none';\r\n\t\t}\r\n\t\t// returns Number or undefined if no constraint\r\n\t\thelpers.getConstraintWidth = function(domNode) {\r\n\t\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n\t\t};\r\n\t\t// returns Number or undefined if no constraint\r\n\t\thelpers.getConstraintHeight = function(domNode) {\r\n\t\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n\t\t};\r\n\t\thelpers.getMaximumWidth = function(domNode) {\r\n\t\t\tvar container = domNode.parentNode;\r\n\t\t\tvar padding = parseInt(helpers.getStyle(container, 'padding-left')) + parseInt(helpers.getStyle(container, 'padding-right'));\r\n\t\t\tvar w = container.clientWidth - padding;\r\n\t\t\tvar cw = helpers.getConstraintWidth(domNode);\r\n\t\t\treturn isNaN(cw)? w : Math.min(w, cw);\r\n\t\t};\r\n\t\thelpers.getMaximumHeight = function(domNode) {\r\n\t\t\tvar container = domNode.parentNode;\r\n\t\t\tvar padding = parseInt(helpers.getStyle(container, 'padding-top')) + parseInt(helpers.getStyle(container, 'padding-bottom'));\r\n\t\t\tvar h = container.clientHeight - padding;\r\n\t\t\tvar ch = helpers.getConstraintHeight(domNode);\r\n\t\t\treturn isNaN(ch)? h : Math.min(h, ch);\r\n\t\t};\r\n\t\thelpers.getStyle = function(el, property) {\r\n\t\t\treturn el.currentStyle ?\r\n\t\t\t\tel.currentStyle[property] :\r\n\t\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n\t\t};\r\n\t\thelpers.retinaScale = function(chart) {\r\n\t\t\tvar ctx = chart.ctx;\r\n\t\t\tvar canvas = chart.canvas;\r\n\t\t\tvar width = canvas.width;\r\n\t\t\tvar height = canvas.height;\r\n\t\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\r\n\t\r\n\t\t\tif (pixelRatio !== 1) {\r\n\t\t\t\tcanvas.height = height * pixelRatio;\r\n\t\t\t\tcanvas.width = width * pixelRatio;\r\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\r\n\t\r\n\t\t\t\t// Store the device pixel ratio so that we can go backwards in `destroy`.\r\n\t\t\t\t// The devicePixelRatio changes with zoom, so there are no guarantees that it is the same\r\n\t\t\t\t// when destroy is called\r\n\t\t\t\tchart.originalDevicePixelRatio = chart.originalDevicePixelRatio || pixelRatio;\r\n\t\t\t}\r\n\t\r\n\t\t\tcanvas.style.width = width + 'px';\r\n\t\t\tcanvas.style.height = height + 'px';\r\n\t\t};\r\n\t\t//-- Canvas methods\r\n\t\thelpers.clear = function(chart) {\r\n\t\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n\t\t};\r\n\t\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n\t\t\treturn fontStyle + \" \" + pixelSize + \"px \" + fontFamily;\r\n\t\t};\r\n\t\thelpers.longestText = function(ctx, font, arrayOfStrings, cache) {\r\n\t\t\tcache = cache || {};\r\n\t\t\tvar data = cache.data = cache.data || {};\r\n\t\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\t\r\n\t\t\tif (cache.font !== font) {\r\n\t\t\t\tdata = cache.data = {};\r\n\t\t\t\tgc = cache.garbageCollect = [];\r\n\t\t\t\tcache.font = font;\r\n\t\t\t}\r\n\t\r\n\t\t\tctx.font = font;\r\n\t\t\tvar longest = 0;\r\n\t\t\thelpers.each(arrayOfStrings, function(string) {\r\n\t\t\t\t// Undefined strings should not be measured\r\n\t\t\t\tif (string !== undefined && string !== null) {\r\n\t\t\t\t\tvar textWidth = data[string];\r\n\t\t\t\t\tif (!textWidth) {\r\n\t\t\t\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\r\n\t\t\t\t\t\tgc.push(string);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (textWidth > longest) {\r\n\t\t\t\t\t\tlongest = textWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\tvar gcLen = gc.length / 2;\r\n\t\t\tif (gcLen > arrayOfStrings.length) {\r\n\t\t\t\tfor (var i = 0; i < gcLen; i++) {\r\n\t\t\t\t\tdelete data[gc[i]];\r\n\t\t\t\t}\r\n\t\t\t\tgc.splice(0, gcLen);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn longest;\r\n\t\t};\r\n\t\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x + radius, y);\r\n\t\t\tctx.lineTo(x + width - radius, y);\r\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n\t\t\tctx.lineTo(x + width, y + height - radius);\r\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n\t\t\tctx.lineTo(x + radius, y + height);\r\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n\t\t\tctx.lineTo(x, y + radius);\r\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\r\n\t\t\tctx.closePath();\r\n\t\t};\r\n\t\thelpers.color = function(c) {\r\n\t\t\tif (!color) {\r\n\t\t\t\tconsole.log('Color.js not found!');\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\t\r\n\t\t\t/* global CanvasGradient */\r\n\t\t\tif (c instanceof CanvasGradient) {\r\n\t\t\t\treturn color(Chart.defaults.global.defaultColor);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn color(c);\r\n\t\t};\r\n\t\thelpers.addResizeListener = function(node, callback) {\r\n\t\t\t// Hide an iframe before the node\r\n\t\t\tvar hiddenIframe = document.createElement('iframe');\r\n\t\t\tvar hiddenIframeClass = 'chartjs-hidden-iframe';\r\n\t\r\n\t\t\tif (hiddenIframe.classlist) {\r\n\t\t\t\t// can use classlist\r\n\t\t\t\thiddenIframe.classlist.add(hiddenIframeClass);\r\n\t\t\t} else {\r\n\t\t\t\thiddenIframe.setAttribute('class', hiddenIframeClass);\r\n\t\t\t}\r\n\t\r\n\t\t\t// Set the style\r\n\t\t\tvar style = hiddenIframe.style;\r\n\t\t\tstyle.width = '100%';\r\n\t\t\tstyle.display = 'block';\r\n\t\t\tstyle.border = 0;\r\n\t\t\tstyle.height = 0;\r\n\t\t\tstyle.margin = 0;\r\n\t\t\tstyle.position = 'absolute';\r\n\t\t\tstyle.left = 0;\r\n\t\t\tstyle.right = 0;\r\n\t\t\tstyle.top = 0;\r\n\t\t\tstyle.bottom = 0;\r\n\t\r\n\t\t\t// Insert the iframe so that contentWindow is available\r\n\t\t\tnode.insertBefore(hiddenIframe, node.firstChild);\r\n\t\r\n\t\t\t(hiddenIframe.contentWindow || hiddenIframe).onresize = function() {\r\n\t\t\t\tif (callback) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\thelpers.removeResizeListener = function(node) {\r\n\t\t\tvar hiddenIframe = node.querySelector('.chartjs-hidden-iframe');\r\n\t\r\n\t\t\t// Remove the resize detect iframe\r\n\t\t\tif (hiddenIframe) {\r\n\t\t\t\thiddenIframe.parentNode.removeChild(hiddenIframe);\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.isArray = function(obj) {\r\n\t\t\tif (!Array.isArray) {\r\n\t\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\r\n\t\t\t}\r\n\t\t\treturn Array.isArray(obj);\r\n\t\t};\r\n\t\t//! @see http://stackoverflow.com/a/14853974\r\n\t\thelpers.arrayEquals = function(a0, a1) {\r\n\t\t\tvar i, ilen, v0, v1;\r\n\t\r\n\t\t\tif (!a0 || !a1 || a0.length != a1.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\r\n\t\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\r\n\t\t\t\tv0 = a0[i];\r\n\t\t\t\tv1 = a1[i];\r\n\t\r\n\t\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\r\n\t\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (v0 != v1) {\r\n\t\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\thelpers.pushAllIfDefined = function(element, array) {\r\n\t\t\tif (typeof element === \"undefined\") {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (helpers.isArray(element)) {\r\n\t\t\t\tarray.push.apply(array, element);\r\n\t\t\t} else {\r\n\t\t\t\tarray.push(element);\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.callCallback = function(fn, args, _tArg) {\r\n\t\t\tif (fn && typeof fn.call === 'function') {\r\n\t\t\t\tfn.apply(_tArg, args);\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.getHoverColor = function(color) {\r\n\t\t\t/* global CanvasPattern */\r\n\t\t\treturn (color instanceof CanvasPattern) ?\r\n\t\t\t\tcolor :\r\n\t\t\t\thelpers.color(color).saturate(0.5).darken(0.1).rgbString();\r\n\t\t};\r\n\t};\r\n\n\n/***/ },\n\n/***/ 143:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function() {\r\n\t\r\n\t\t//Occupy the global variable of Chart, and create a simple base class\r\n\t\tvar Chart = function(context, config) {\r\n\t\t\tthis.config = config;\r\n\t\r\n\t\t\t// Support a jQuery'd canvas element\r\n\t\t\tif (context.length && context[0].getContext) {\r\n\t\t\t\tcontext = context[0];\r\n\t\t\t}\r\n\t\r\n\t\t\t// Support a canvas domnode\r\n\t\t\tif (context.getContext) {\r\n\t\t\t\tcontext = context.getContext(\"2d\");\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.ctx = context;\r\n\t\t\tthis.canvas = context.canvas;\r\n\t\r\n\t\t\t// Figure out what the size of the chart will be.\r\n\t\t\t// If the canvas has a specified width and height, we use those else\r\n\t\t\t// we look to see if the canvas node has a CSS width and height.\r\n\t\t\t// If there is still no height, fill the parent container\r\n\t\t\tthis.width = context.canvas.width || parseInt(Chart.helpers.getStyle(context.canvas, 'width')) || Chart.helpers.getMaximumWidth(context.canvas);\r\n\t\t\tthis.height = context.canvas.height || parseInt(Chart.helpers.getStyle(context.canvas, 'height')) || Chart.helpers.getMaximumHeight(context.canvas);\r\n\t\r\n\t\t\tthis.aspectRatio = this.width / this.height;\r\n\t\r\n\t\t\tif (isNaN(this.aspectRatio) || isFinite(this.aspectRatio) === false) {\r\n\t\t\t\t// If the canvas has no size, try and figure out what the aspect ratio will be.\r\n\t\t\t\t// Some charts prefer square canvases (pie, radar, etc). If that is specified, use that\r\n\t\t\t\t// else use the canvas default ratio of 2\r\n\t\t\t\tthis.aspectRatio = config.aspectRatio !== undefined ? config.aspectRatio : 2;\r\n\t\t\t}\r\n\t\r\n\t\t\t// Store the original style of the element so we can set it back\r\n\t\t\tthis.originalCanvasStyleWidth = context.canvas.style.width;\r\n\t\t\tthis.originalCanvasStyleHeight = context.canvas.style.height;\r\n\t\r\n\t\t\t// High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\r\n\t\t\tChart.helpers.retinaScale(this);\r\n\t\r\n\t\t\tif (config) {\r\n\t\t\t\tthis.controller = new Chart.Controller(this);\r\n\t\t\t}\r\n\t\r\n\t\t\t// Always bind this so that if the responsive state changes we still work\r\n\t\t\tvar _this = this;\r\n\t\t\tChart.helpers.addResizeListener(context.canvas.parentNode, function() {\r\n\t\t\t\tif (_this.controller && _this.controller.config.options.responsive) {\r\n\t\t\t\t\t_this.controller.resize();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\treturn this.controller ? this.controller : this;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//Globally expose the defaults to allow for user updating/changing\r\n\t\tChart.defaults = {\r\n\t\t\tglobal: {\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tresponsiveAnimationDuration: 0,\r\n\t\t\t\tmaintainAspectRatio: true,\r\n\t\t\t\tevents: [\"mousemove\", \"mouseout\", \"click\", \"touchstart\", \"touchmove\"],\r\n\t\t\t\thover: {\r\n\t\t\t\t\tonHover: null,\r\n\t\t\t\t\tmode: 'single',\r\n\t\t\t\t\tanimationDuration: 400\r\n\t\t\t\t},\r\n\t\t\t\tonClick: null,\r\n\t\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\r\n\t\t\t\tdefaultFontColor: '#666',\r\n\t\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n\t\t\t\tdefaultFontSize: 12,\r\n\t\t\t\tdefaultFontStyle: 'normal',\r\n\t\t\t\tshowLines: true,\r\n\t\r\n\t\t\t\t// Element defaults defined in element extensions\r\n\t\t\t\telements: {},\r\n\t\r\n\t\t\t\t// Legend callback string\r\n\t\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\t\tvar text = [];\r\n\t\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\t\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\r\n\t\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n\t\t\t\t\t\tif (chart.data.datasets[i].label) {\r\n\t\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</ul>');\r\n\t\r\n\t\t\t\t\treturn text.join(\"\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\treturn Chart;\r\n\t\r\n\t};\r\n\n\n/***/ },\n\n/***/ 144:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n\t\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n\t\t// It is this service's responsibility of carrying out that layout.\r\n\t\tChart.layoutService = {\r\n\t\t\tdefaults: {},\r\n\t\r\n\t\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\r\n\t\t\taddBox: function(chartInstance, box) {\r\n\t\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\t\tchartInstance.boxes = [];\r\n\t\t\t\t}\r\n\t\t\t\tchartInstance.boxes.push(box);\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveBox: function(chartInstance, box) {\r\n\t\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\r\n\t\t\t},\r\n\t\r\n\t\t\t// The most important function\r\n\t\t\tupdate: function(chartInstance, width, height) {\r\n\t\r\n\t\t\t\tif (!chartInstance) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar xPadding = 0;\r\n\t\t\t\tvar yPadding = 0;\r\n\t\r\n\t\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\t\treturn box.options.position === \"left\";\r\n\t\t\t\t});\r\n\t\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\t\treturn box.options.position === \"right\";\r\n\t\t\t\t});\r\n\t\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\t\treturn box.options.position === \"top\";\r\n\t\t\t\t});\r\n\t\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\t\treturn box.options.position === \"bottom\";\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\r\n\t\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\t\treturn box.options.position === \"chartArea\";\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Ensure that full width boxes are at the very top / bottom\r\n\t\t\t\ttopBoxes.sort(function(a, b) {\r\n\t\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\r\n\t\t\t\t});\r\n\t\t\t\tbottomBoxes.sort(function(a, b) {\r\n\t\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\r\n\t\t\t\t// Our canvas looks like the following.\r\n\t\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n\t\t\t\t// B1 is the bottom axis\r\n\t\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n\t\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n\t\t\t\t// an error will be thrown.\r\n\t\t\t\t//\r\n\t\t\t\t// |----------------------------------------------------|\r\n\t\t\t\t// |                  T1 (Full Width)                   |\r\n\t\t\t\t// |----------------------------------------------------|\r\n\t\t\t\t// |    |    |                 T2                  |    |\r\n\t\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t\t// |    |    | C1 |                           | C2 |    |\r\n\t\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t\t// |    |    |                                     |    |\r\n\t\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\r\n\t\t\t\t// |    |    |                                     |    |\r\n\t\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t\t// |    |    | C3 |                           | C4 |    |\r\n\t\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t\t// |    |    |                 B1                  |    |\r\n\t\t\t\t// |----------------------------------------------------|\r\n\t\t\t\t// |                  B2 (Full Width)                   |\r\n\t\t\t\t// |----------------------------------------------------|\r\n\t\t\t\t//\r\n\t\t\t\t// What we do to find the best sizing, we do the following\r\n\t\t\t\t// 1. Determine the minimum size of the chart area.\r\n\t\t\t\t// 2. Split the remaining width equally between each vertical axis\r\n\t\t\t\t// 3. Split the remaining height equally between each horizontal axis\r\n\t\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n\t\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n\t\t\t\t// 6. Refit each axis\r\n\t\t\t\t// 7. Position each axis in the final location\r\n\t\t\t\t// 8. Tell the chart the final location of the chart area\r\n\t\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\t\r\n\t\t\t\t// Step 1\r\n\t\t\t\tvar chartWidth = width - (2 * xPadding);\r\n\t\t\t\tvar chartHeight = height - (2 * yPadding);\r\n\t\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\r\n\t\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\r\n\t\r\n\t\t\t\t// Step 2\r\n\t\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\t\r\n\t\t\t\t// Step 3\r\n\t\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\t\r\n\t\t\t\t// Step 4\r\n\t\t\t\tvar maxChartAreaWidth = chartWidth;\r\n\t\t\t\tvar maxChartAreaHeight = chartHeight;\r\n\t\t\t\tvar minBoxSizes = [];\r\n\t\r\n\t\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\t\r\n\t\t\t\tfunction getMinimumBoxSize(box) {\r\n\t\t\t\t\tvar minSize;\r\n\t\t\t\t\tvar isHorizontal = box.isHorizontal();\r\n\t\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n\t\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\r\n\t\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tminBoxSizes.push({\r\n\t\t\t\t\t\thorizontal: isHorizontal,\r\n\t\t\t\t\t\tminSize: minSize,\r\n\t\t\t\t\t\tbox: box\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n\t\t\t\t// be if the axes are drawn at their minimum sizes.\r\n\t\r\n\t\t\t\t// Steps 5 & 6\r\n\t\t\t\tvar totalLeftBoxesWidth = xPadding;\r\n\t\t\t\tvar totalRightBoxesWidth = xPadding;\r\n\t\t\t\tvar totalTopBoxesHeight = yPadding;\r\n\t\t\t\tvar totalBottomBoxesHeight = yPadding;\r\n\t\r\n\t\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\r\n\t\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\t\r\n\t\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Set the Left and Right margins for the horizontal boxes\r\n\t\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\t\r\n\t\t\t\t// Function to fit a box\r\n\t\t\t\tfunction fitBox(box) {\r\n\t\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBoxSize) {\r\n\t\t\t\t\t\treturn minBoxSize.box === box;\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\t\t\t\t\tright: totalRightBoxesWidth,\r\n\t\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\t\tbottom: 0\r\n\t\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n\t\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\r\n\t\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\r\n\t\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Let the left layout know the final margin\r\n\t\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\t\r\n\t\t\t\tfunction finalFitVerticalBox(box) {\r\n\t\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBoxSize) {\r\n\t\t\t\t\t\treturn minBoxSize.box === box;\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\tright: 0,\r\n\t\t\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\t\t\tbottom: totalBottomBoxesHeight\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n\t\t\t\ttotalLeftBoxesWidth = xPadding;\r\n\t\t\t\ttotalRightBoxesWidth = xPadding;\r\n\t\t\t\ttotalTopBoxesHeight = yPadding;\r\n\t\t\t\ttotalBottomBoxesHeight = yPadding;\r\n\t\r\n\t\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t\t});\r\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n\t\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n\t\t\t\t// without calling `fit` again\r\n\t\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n\t\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\t\r\n\t\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n\t\t\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\r\n\t\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Step 7 - Position the boxes\r\n\t\t\t\tvar left = xPadding;\r\n\t\t\t\tvar top = yPadding;\r\n\t\t\t\tvar right = 0;\r\n\t\t\t\tvar bottom = 0;\r\n\t\r\n\t\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\t\r\n\t\t\t\t// Account for chart width and height\r\n\t\t\t\tleft += maxChartAreaWidth;\r\n\t\t\t\ttop += maxChartAreaHeight;\r\n\t\r\n\t\t\t\thelpers.each(rightBoxes, placeBox);\r\n\t\t\t\thelpers.each(bottomBoxes, placeBox);\r\n\t\r\n\t\t\t\tfunction placeBox(box) {\r\n\t\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\t\tbox.left = box.options.fullWidth ? xPadding : totalLeftBoxesWidth;\r\n\t\t\t\t\t\tbox.right = box.options.fullWidth ? width - xPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n\t\t\t\t\t\tbox.top = top;\r\n\t\t\t\t\t\tbox.bottom = top + box.height;\r\n\t\r\n\t\t\t\t\t\t// Move to next point\r\n\t\t\t\t\t\ttop = box.bottom;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tbox.left = left;\r\n\t\t\t\t\t\tbox.right = left + box.width;\r\n\t\t\t\t\t\tbox.top = totalTopBoxesHeight;\r\n\t\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\t\r\n\t\t\t\t\t\t// Move to next point\r\n\t\t\t\t\t\tleft = box.right;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Step 8\r\n\t\t\t\tchartInstance.chartArea = {\r\n\t\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\r\n\t\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// Step 9\r\n\t\t\t\thelpers.each(chartAreaBoxes, function(box) {\r\n\t\t\t\t\tbox.left = chartInstance.chartArea.left;\r\n\t\t\t\t\tbox.top = chartInstance.chartArea.top;\r\n\t\t\t\t\tbox.right = chartInstance.chartArea.right;\r\n\t\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\r\n\t\r\n\t\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\n\n/***/ },\n\n/***/ 145:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\tvar noop = helpers.noop;\r\n\t\r\n\t\tChart.defaults.global.legend = {\r\n\t\r\n\t\t\tdisplay: true,\r\n\t\t\tposition: 'top',\r\n\t\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\t\t\treverse: false,\r\n\t\r\n\t\t\t// a callback that will handle\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.datasetIndex;\r\n\t\t\t\tvar ci = this.chart;\r\n\t\t\t\tvar meta = ci.getDatasetMeta(index);\r\n\t\r\n\t\t\t\t// See controller.isDatasetVisible comment\r\n\t\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\r\n\t\r\n\t\t\t\t// We hid a dataset ... rerender the chart\r\n\t\t\t\tci.update();\r\n\t\t\t},\r\n\t\r\n\t\t\tlabels: {\r\n\t\t\t\tboxWidth: 40,\r\n\t\t\t\tpadding: 10,\r\n\t\t\t\t// Generates labels shown in the legend\r\n\t\t\t\t// Valid properties to return:\r\n\t\t\t\t// text : text to display\r\n\t\t\t\t// fillStyle : fill of coloured box\r\n\t\t\t\t// strokeStyle: stroke of coloured box\r\n\t\t\t\t// hidden : if this legend item refers to a hidden item\r\n\t\t\t\t// lineCap : cap style for line\r\n\t\t\t\t// lineDash\r\n\t\t\t\t// lineDashOffset :\r\n\t\t\t\t// lineJoin :\r\n\t\t\t\t// lineWidth :\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttext: dataset.label,\r\n\t\t\t\t\t\t\tfillStyle: dataset.backgroundColor,\r\n\t\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\r\n\t\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\r\n\t\t\t\t\t\t\tlineDash: dataset.borderDash,\r\n\t\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\r\n\t\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\r\n\t\t\t\t\t\t\tlineWidth: dataset.borderWidth,\r\n\t\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\r\n\t\r\n\t\t\t\t\t\t\t// Below is extra data used for toggling the datasets\r\n\t\t\t\t\t\t\tdatasetIndex: i\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}, this) : [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.Legend = Chart.Element.extend({\r\n\t\r\n\t\t\tinitialize: function(config) {\r\n\t\t\t\thelpers.extend(this, config);\r\n\t\r\n\t\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\t\tthis.legendHitBoxes = [];\r\n\t\r\n\t\t\t\t// Are we in doughnut mode which has a different data type\r\n\t\t\t\tthis.doughnutMode = false;\r\n\t\t\t},\r\n\t\r\n\t\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t\t// Any function defined here is inherited by all legend types.\r\n\t\t\t// Any function can be extended by the legend type\r\n\t\r\n\t\t\tbeforeUpdate: noop,\r\n\t\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\r\n\t\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\t\tthis.beforeUpdate();\r\n\t\r\n\t\t\t\t// Absorb the master measurements\r\n\t\t\t\tthis.maxWidth = maxWidth;\r\n\t\t\t\tthis.maxHeight = maxHeight;\r\n\t\t\t\tthis.margins = margins;\r\n\t\r\n\t\t\t\t// Dimensions\r\n\t\t\t\tthis.beforeSetDimensions();\r\n\t\t\t\tthis.setDimensions();\r\n\t\t\t\tthis.afterSetDimensions();\r\n\t\t\t\t// Labels\r\n\t\t\t\tthis.beforeBuildLabels();\r\n\t\t\t\tthis.buildLabels();\r\n\t\t\t\tthis.afterBuildLabels();\r\n\t\r\n\t\t\t\t// Fit\r\n\t\t\t\tthis.beforeFit();\r\n\t\t\t\tthis.fit();\r\n\t\t\t\tthis.afterFit();\r\n\t\t\t\t//\r\n\t\t\t\tthis.afterUpdate();\r\n\t\r\n\t\t\t\treturn this.minSize;\r\n\t\t\t},\r\n\t\t\tafterUpdate: noop,\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeSetDimensions: noop,\r\n\t\t\tsetDimensions: function() {\r\n\t\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\t\tthis.width = this.maxWidth;\r\n\t\t\t\t\tthis.left = 0;\r\n\t\t\t\t\tthis.right = this.width;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.height = this.maxHeight;\r\n\t\r\n\t\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\t\tthis.top = 0;\r\n\t\t\t\t\tthis.bottom = this.height;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Reset padding\r\n\t\t\t\tthis.paddingLeft = 0;\r\n\t\t\t\tthis.paddingTop = 0;\r\n\t\t\t\tthis.paddingRight = 0;\r\n\t\t\t\tthis.paddingBottom = 0;\r\n\t\r\n\t\t\t\t// Reset minSize\r\n\t\t\t\tthis.minSize = {\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tafterSetDimensions: noop,\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeBuildLabels: noop,\r\n\t\t\tbuildLabels: function() {\r\n\t\t\t\tthis.legendItems = this.options.labels.generateLabels.call(this, this.chart);\r\n\t\t\t\tif(this.options.reverse){\r\n\t\t\t\t\tthis.legendItems.reverse();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tafterBuildLabels: noop,\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeFit: noop,\r\n\t\t\tfit: function() {\r\n\t\t\t\tvar opts = this.options;\r\n\t\t\t\tvar labelOpts = opts.labels;\r\n\t\t\t\tvar display = opts.display;\r\n\t\r\n\t\t\t\tvar ctx = this.ctx;\r\n\t\r\n\t\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\t\r\n\t\t\t\t// Reset hit boxes\r\n\t\t\t\tvar hitboxes = this.legendHitBoxes = [];\r\n\t\r\n\t\t\t\tvar minSize = this.minSize;\r\n\t\t\t\tvar isHorizontal = this.isHorizontal();\r\n\t\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize.width = this.maxWidth; // fill all the width\r\n\t\t\t\t\tminSize.height = display ? 10 : 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.width = display ? 10 : 0;\r\n\t\t\t\t\tminSize.height = this.maxHeight; // fill all the height\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Increase sizes here\r\n\t\t\t\tif (display) {\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\t// Labels\r\n\t\r\n\t\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n\t\t\t\t\t\tvar lineWidths = this.lineWidths = [0];\r\n\t\t\t\t\t\tvar totalHeight = this.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\t\r\n\t\t\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\t\tctx.font = labelFont;\r\n\t\r\n\t\t\t\t\t\thelpers.each(this.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\t\tvar width = labelOpts.boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\t\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= this.width) {\r\n\t\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\t\tlineWidths[lineWidths.length] = this.left;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n\t\t\t\t\t\t}, this);\r\n\t\r\n\t\t\t\t\t\tminSize.height += totalHeight;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// TODO vertical\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.width = minSize.width;\r\n\t\t\t\tthis.height = minSize.height;\r\n\t\t\t},\r\n\t\t\tafterFit: noop,\r\n\t\r\n\t\t\t// Shared Methods\r\n\t\t\tisHorizontal: function() {\r\n\t\t\t\treturn this.options.position === \"top\" || this.options.position === \"bottom\";\r\n\t\t\t},\r\n\t\r\n\t\t\t// Actualy draw the legend on the canvas\r\n\t\t\tdraw: function() {\r\n\t\t\t\tvar opts = this.options;\r\n\t\t\t\tvar labelOpts = opts.labels;\r\n\t\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\t\tlineDefault = globalDefault.elements.line,\r\n\t\t\t\t\tlegendWidth = this.width,\r\n\t\t\t\t\tlineWidths = this.lineWidths;\r\n\t\r\n\t\t\t\tif (opts.display) {\r\n\t\t\t\t\tvar ctx = this.ctx,\r\n\t\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\t\tx: this.left + ((legendWidth - lineWidths[0]) / 2),\r\n\t\t\t\t\t\t\ty: this.top + labelOpts.padding,\r\n\t\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\r\n\t\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\t\r\n\t\t\t\t\t// Horizontal\r\n\t\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\t\t// Labels\r\n\t\t\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\t\tctx.lineWidth = 0.5;\r\n\t\t\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\r\n\t\t\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\r\n\t\t\t\t\t\tctx.font = labelFont;\r\n\t\r\n\t\t\t\t\t\tvar boxWidth = labelOpts.boxWidth,\r\n\t\t\t\t\t\t\thitboxes = this.legendHitBoxes;\r\n\t\r\n\t\t\t\t\t\thelpers.each(this.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\r\n\t\t\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\r\n\t\t\t\t\t\t\t\tx = cursor.x,\r\n\t\t\t\t\t\t\t\ty = cursor.y;\r\n\t\r\n\t\t\t\t\t\t\tif (x + width >= legendWidth) {\r\n\t\t\t\t\t\t\t\ty = cursor.y += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t\t\t\tx = cursor.x = this.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// Set the ctx for the box\r\n\t\t\t\t\t\t\tctx.save();\r\n\t\r\n\t\t\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n\t\t\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n\t\t\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n\t\t\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n\t\t\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n\t\t\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n\t\r\n\t\t\t\t\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\t\t\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// Draw the box\r\n\t\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\r\n\t\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\r\n\t\r\n\t\t\t\t\t\t\tctx.restore();\r\n\t\r\n\t\t\t\t\t\t\thitboxes[i].left = x;\r\n\t\t\t\t\t\t\thitboxes[i].top = y;\r\n\t\r\n\t\t\t\t\t\t\t// Fill the actual label\r\n\t\t\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\r\n\t\r\n\t\t\t\t\t\t\tif (legendItem.hidden) {\r\n\t\t\t\t\t\t\t\t// Strikethrough the text if hidden\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tctx.lineWidth = 2;\r\n\t\t\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\r\n\t\t\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\t// Handle an event\r\n\t\t\thandleEvent: function(e) {\r\n\t\t\t\tvar position = helpers.getRelativePosition(e, this.chart.chart),\r\n\t\t\t\t\tx = position.x,\r\n\t\t\t\t\ty = position.y,\r\n\t\t\t\t\topts = this.options;\r\n\t\r\n\t\t\t\tif (x >= this.left && x <= this.right && y >= this.top && y <= this.bottom) {\r\n\t\t\t\t\t// See if we are touching one of the dataset boxes\r\n\t\t\t\t\tvar lh = this.legendHitBoxes;\r\n\t\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\r\n\t\t\t\t\t\tvar hitBox = lh[i];\r\n\t\r\n\t\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n\t\t\t\t\t\t\t// Touching an element\r\n\t\t\t\t\t\t\tif (opts.onClick) {\r\n\t\t\t\t\t\t\t\topts.onClick.call(this, e, this.legendItems[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t};\r\n\n\n/***/ },\n\n/***/ 146:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\t// Plugins are stored here\r\n\t\tChart.plugins = [];\r\n\t\tChart.pluginService = {\r\n\t\t\t// Register a new plugin\r\n\t\t\tregister: function(plugin) {\r\n\t\t\t\tvar p = Chart.plugins;\r\n\t\t\t\tif (p.indexOf(plugin) === -1) {\r\n\t\t\t\t\tp.push(plugin);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\t// Remove a registered plugin\r\n\t\t\tremove: function(plugin) {\r\n\t\t\t\tvar p = Chart.plugins;\r\n\t\t\t\tvar idx = p.indexOf(plugin);\r\n\t\t\t\tif (idx !== -1) {\r\n\t\t\t\t\tp.splice(idx, 1);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\t// Iterate over all plugins\r\n\t\t\tnotifyPlugins: function(method, args, scope) {\r\n\t\t\t\thelpers.each(Chart.plugins, function(plugin) {\r\n\t\t\t\t\tif (plugin[method] && typeof plugin[method] === 'function') {\r\n\t\t\t\t\t\tplugin[method].apply(scope, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, scope);\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tvar noop = helpers.noop;\r\n\t\tChart.PluginBase = Chart.Element.extend({\r\n\t\t\t// Plugin methods. All functions are passed the chart instance\r\n\t\r\n\t\t\t// Called at start of chart init\r\n\t\t\tbeforeInit: noop,\r\n\t\r\n\t\t\t// Called at end of chart init\r\n\t\t\tafterInit: noop,\r\n\t\r\n\t\t\t// Called at start of update\r\n\t\t\tbeforeUpdate: noop,\r\n\t\r\n\t\t\t// Called at end of update\r\n\t\t\tafterUpdate: noop,\r\n\t\r\n\t\t\t// Called at start of draw\r\n\t\t\tbeforeDraw: noop,\r\n\t\r\n\t\t\t// Called at end of draw\r\n\t\t\tafterDraw: noop,\r\n\t\r\n\t\t\t// Called during destroy\r\n\t\t\tdestroy: noop\r\n\t\t});\r\n\t};\r\n\n\n/***/ },\n\n/***/ 147:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.scale = {\r\n\t\t\tdisplay: true,\r\n\t\t\tposition: \"left\",\r\n\t\r\n\t\t\t// grid line settings\r\n\t\t\tgridLines: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tcolor: \"rgba(0, 0, 0, 0.1)\",\r\n\t\t\t\tlineWidth: 1,\r\n\t\t\t\tdrawBorder: true,\r\n\t\t\t\tdrawOnChartArea: true,\r\n\t\t\t\tdrawTicks: true,\r\n\t\t\t\ttickMarkLength: 10,\r\n\t\t\t\tzeroLineWidth: 1,\r\n\t\t\t\tzeroLineColor: \"rgba(0,0,0,0.25)\",\r\n\t\t\t\toffsetGridLines: false\r\n\t\t\t},\r\n\t\r\n\t\t\t// scale label\r\n\t\t\tscaleLabel: {\r\n\t\t\t\t// actual label\r\n\t\t\t\tlabelString: '',\r\n\t\r\n\t\t\t\t// display property\r\n\t\t\t\tdisplay: false\r\n\t\t\t},\r\n\t\r\n\t\t\t// label settings\r\n\t\t\tticks: {\r\n\t\t\t\tbeginAtZero: false,\r\n\t\t\t\tminRotation: 0,\r\n\t\t\t\tmaxRotation: 50,\r\n\t\t\t\tmirror: false,\r\n\t\t\t\tpadding: 10,\r\n\t\t\t\treverse: false,\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tautoSkip: true,\r\n\t\t\t\tautoSkipPadding: 0,\r\n\t\t\t\tlabelOffset: 0,\r\n\t\t\t\tcallback: function(value) {\r\n\t\t\t\t\treturn '' + value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.Scale = Chart.Element.extend({\r\n\t\r\n\t\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t\t// Any function defined here is inherited by all scale types.\r\n\t\t\t// Any function can be extended by the scale type\r\n\t\r\n\t\t\tbeforeUpdate: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\r\n\t\t\t},\r\n\t\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\r\n\t\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\t\tthis.beforeUpdate();\r\n\t\r\n\t\t\t\t// Absorb the master measurements\r\n\t\t\t\tthis.maxWidth = maxWidth;\r\n\t\t\t\tthis.maxHeight = maxHeight;\r\n\t\t\t\tthis.margins = helpers.extend({\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tbottom: 0\r\n\t\t\t\t}, margins);\r\n\t\r\n\t\t\t\t// Dimensions\r\n\t\t\t\tthis.beforeSetDimensions();\r\n\t\t\t\tthis.setDimensions();\r\n\t\t\t\tthis.afterSetDimensions();\r\n\t\r\n\t\t\t\t// Data min/max\r\n\t\t\t\tthis.beforeDataLimits();\r\n\t\t\t\tthis.determineDataLimits();\r\n\t\t\t\tthis.afterDataLimits();\r\n\t\r\n\t\t\t\t// Ticks\r\n\t\t\t\tthis.beforeBuildTicks();\r\n\t\t\t\tthis.buildTicks();\r\n\t\t\t\tthis.afterBuildTicks();\r\n\t\r\n\t\t\t\tthis.beforeTickToLabelConversion();\r\n\t\t\t\tthis.convertTicksToLabels();\r\n\t\t\t\tthis.afterTickToLabelConversion();\r\n\t\r\n\t\t\t\t// Tick Rotation\r\n\t\t\t\tthis.beforeCalculateTickRotation();\r\n\t\t\t\tthis.calculateTickRotation();\r\n\t\t\t\tthis.afterCalculateTickRotation();\r\n\t\t\t\t// Fit\r\n\t\t\t\tthis.beforeFit();\r\n\t\t\t\tthis.fit();\r\n\t\t\t\tthis.afterFit();\r\n\t\t\t\t//\r\n\t\t\t\tthis.afterUpdate();\r\n\t\r\n\t\t\t\treturn this.minSize;\r\n\t\r\n\t\t\t},\r\n\t\t\tafterUpdate: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeSetDimensions: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\r\n\t\t\t},\r\n\t\t\tsetDimensions: function() {\r\n\t\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\t\tthis.width = this.maxWidth;\r\n\t\t\t\t\tthis.left = 0;\r\n\t\t\t\t\tthis.right = this.width;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.height = this.maxHeight;\r\n\t\r\n\t\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\t\tthis.top = 0;\r\n\t\t\t\t\tthis.bottom = this.height;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Reset padding\r\n\t\t\t\tthis.paddingLeft = 0;\r\n\t\t\t\tthis.paddingTop = 0;\r\n\t\t\t\tthis.paddingRight = 0;\r\n\t\t\t\tthis.paddingBottom = 0;\r\n\t\t\t},\r\n\t\t\tafterSetDimensions: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\t// Data limits\r\n\t\t\tbeforeDataLimits: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\r\n\t\t\t},\r\n\t\t\tdetermineDataLimits: helpers.noop,\r\n\t\t\tafterDataLimits: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\t//\r\n\t\t\tbeforeBuildTicks: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\r\n\t\t\t},\r\n\t\t\tbuildTicks: helpers.noop,\r\n\t\t\tafterBuildTicks: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\tbeforeTickToLabelConversion: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\r\n\t\t\t},\r\n\t\t\tconvertTicksToLabels: function() {\r\n\t\t\t\t// Convert ticks to strings\r\n\t\t\t\tthis.ticks = this.ticks.map(function(numericalTick, index, ticks) {\r\n\t\t\t\t\t\tif (this.options.ticks.userCallback) {\r\n\t\t\t\t\t\t\treturn this.options.ticks.userCallback(numericalTick, index, ticks);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.options.ticks.callback(numericalTick, index, ticks);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tthis);\r\n\t\t\t},\r\n\t\t\tafterTickToLabelConversion: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeCalculateTickRotation: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\r\n\t\t\t},\r\n\t\t\tcalculateTickRotation: function() {\r\n\t\t\t\tvar context = this.ctx;\r\n\t\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\t\tvar optionTicks = this.options.ticks;\r\n\t\r\n\t\t\t\t//Get the width of each grid by calculating the difference\r\n\t\t\t\t//between x offsets between 0 and 1.\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\t\tcontext.font = tickLabelFont;\r\n\t\r\n\t\t\t\tvar firstWidth = context.measureText(this.ticks[0]).width;\r\n\t\t\t\tvar lastWidth = context.measureText(this.ticks[this.ticks.length - 1]).width;\r\n\t\t\t\tvar firstRotated;\r\n\t\r\n\t\t\t\tthis.labelRotation = optionTicks.minRotation || 0;\r\n\t\t\t\tthis.paddingRight = 0;\r\n\t\t\t\tthis.paddingLeft = 0;\r\n\t\r\n\t\t\t\tif (this.options.display) {\r\n\t\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\t\tthis.paddingRight = lastWidth / 2 + 3;\r\n\t\t\t\t\t\tthis.paddingLeft = firstWidth / 2 + 3;\r\n\t\r\n\t\t\t\t\t\tif (!this.longestTextCache) {\r\n\t\t\t\t\t\t\tthis.longestTextCache = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickLabelFont, this.ticks, this.longestTextCache);\r\n\t\t\t\t\t\tvar labelWidth = originalLabelWidth;\r\n\t\t\t\t\t\tvar cosRotation;\r\n\t\t\t\t\t\tvar sinRotation;\r\n\t\r\n\t\t\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\r\n\t\t\t\t\t\t// only the index matters for a dataset scale, but we want a consistent interface between scales\r\n\t\t\t\t\t\tvar tickWidth = this.getPixelForTick(1) - this.getPixelForTick(0) - 6;\r\n\t\r\n\t\t\t\t\t\t//Max label rotation can be set or default to 90 - also act as a loop counter\r\n\t\t\t\t\t\twhile (labelWidth > tickWidth && this.labelRotation < optionTicks.maxRotation) {\r\n\t\t\t\t\t\t\tcosRotation = Math.cos(helpers.toRadians(this.labelRotation));\r\n\t\t\t\t\t\t\tsinRotation = Math.sin(helpers.toRadians(this.labelRotation));\r\n\t\r\n\t\t\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\r\n\t\r\n\t\t\t\t\t\t\t// We're right aligning the text now.\r\n\t\t\t\t\t\t\tif (firstRotated + tickFontSize / 2 > this.yLabelWidth) {\r\n\t\t\t\t\t\t\t\tthis.paddingLeft = firstRotated + tickFontSize / 2;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tthis.paddingRight = tickFontSize / 2;\r\n\t\r\n\t\t\t\t\t\t\tif (sinRotation * originalLabelWidth > this.maxHeight) {\r\n\t\t\t\t\t\t\t\t// go back one step\r\n\t\t\t\t\t\t\t\tthis.labelRotation--;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tthis.labelRotation++;\r\n\t\t\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (this.margins) {\r\n\t\t\t\t\tthis.paddingLeft = Math.max(this.paddingLeft - this.margins.left, 0);\r\n\t\t\t\t\tthis.paddingRight = Math.max(this.paddingRight - this.margins.right, 0);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tafterCalculateTickRotation: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeFit: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\r\n\t\t\t},\r\n\t\t\tfit: function() {\r\n\t\t\t\t// Reset\r\n\t\t\t\tvar minSize = this.minSize = {\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tvar opts = this.options;\r\n\t\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t\tvar scaleLabelOpts = opts.scaleLabel;\r\n\t\t\t\tvar display = opts.display;\r\n\t\t\t\tvar isHorizontal = this.isHorizontal();\r\n\t\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\r\n\t\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabelOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabelOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabelOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\r\n\t\r\n\t\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\r\n\t\r\n\t\t\t\t// Width\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\r\n\t\t\t\t\tminSize.width = this.isFullWidth() ? this.maxWidth - this.margins.left - this.margins.right : this.maxWidth;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.width = display ? tickMarkLength : 0;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// height\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize.height = display ? tickMarkLength : 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.height = this.maxHeight; // fill all the height\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Are we showing a title for the scale?\r\n\t\t\t\tif (scaleLabelOpts.display && display) {\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tminSize.height += (scaleLabelFontSize * 1.5);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tminSize.width += (scaleLabelFontSize * 1.5);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (tickOpts.display && display) {\r\n\t\t\t\t\t// Don't bother fitting the ticks if we are not showing them\r\n\t\t\t\t\tif (!this.longestTextCache) {\r\n\t\t\t\t\t\tthis.longestTextCache = {};\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar largestTextWidth = helpers.longestText(this.ctx, tickLabelFont, this.ticks, this.longestTextCache);\r\n\t\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\t// A horizontal axis is more constrained by the height.\r\n\t\t\t\t\t\tthis.longestLabelWidth = largestTextWidth;\r\n\t\r\n\t\t\t\t\t\t// TODO - improve this calculation\r\n\t\t\t\t\t\tvar labelHeight = (Math.sin(helpers.toRadians(this.labelRotation)) * this.longestLabelWidth) + 1.5 * tickFontSize;\r\n\t\r\n\t\t\t\t\t\tminSize.height = Math.min(this.maxHeight, minSize.height + labelHeight);\r\n\t\t\t\t\t\tthis.ctx.font = tickLabelFont;\r\n\t\r\n\t\t\t\t\t\tvar firstLabelWidth = this.ctx.measureText(this.ticks[0]).width;\r\n\t\t\t\t\t\tvar lastLabelWidth = this.ctx.measureText(this.ticks[this.ticks.length - 1]).width;\r\n\t\r\n\t\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\r\n\t\t\t\t\t\t// by the font height\r\n\t\t\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(this.labelRotation));\r\n\t\t\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(this.labelRotation));\r\n\t\t\t\t\t\tthis.paddingLeft = this.labelRotation !== 0 ? (cosRotation * firstLabelWidth) + 3 : firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n\t\t\t\t\t\tthis.paddingRight = this.labelRotation !== 0 ? (sinRotation * (tickFontSize / 2)) + 3 : lastLabelWidth / 2 + 3; // when rotated\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\r\n\t\t\t\t\t\tvar maxLabelWidth = this.maxWidth - minSize.width;\r\n\t\r\n\t\t\t\t\t\t// Account for padding\r\n\t\t\t\t\t\tvar mirror = tickOpts.mirror;\r\n\t\t\t\t\t\tif (!mirror) {\r\n\t\t\t\t\t\t\tlargestTextWidth += this.options.ticks.padding;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// If mirrored text is on the inside so don't expand\r\n\t\t\t\t\t\t\tlargestTextWidth = 0;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif (largestTextWidth < maxLabelWidth) {\r\n\t\t\t\t\t\t\t// We don't need all the room\r\n\t\t\t\t\t\t\tminSize.width += largestTextWidth;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Expand to max size\r\n\t\t\t\t\t\t\tminSize.width = this.maxWidth;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tthis.paddingTop = tickFontSize / 2;\r\n\t\t\t\t\t\tthis.paddingBottom = tickFontSize / 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (this.margins) {\r\n\t\t\t\t\tthis.paddingLeft = Math.max(this.paddingLeft - this.margins.left, 0);\r\n\t\t\t\t\tthis.paddingTop = Math.max(this.paddingTop - this.margins.top, 0);\r\n\t\t\t\t\tthis.paddingRight = Math.max(this.paddingRight - this.margins.right, 0);\r\n\t\t\t\t\tthis.paddingBottom = Math.max(this.paddingBottom - this.margins.bottom, 0);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.width = minSize.width;\r\n\t\t\t\tthis.height = minSize.height;\r\n\t\r\n\t\t\t},\r\n\t\t\tafterFit: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterFit, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\t// Shared Methods\r\n\t\t\tisHorizontal: function() {\r\n\t\t\t\treturn this.options.position === \"top\" || this.options.position === \"bottom\";\r\n\t\t\t},\r\n\t\t\tisFullWidth: function() {\r\n\t\t\t\treturn (this.options.fullWidth);\r\n\t\t\t},\r\n\t\r\n\t\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n\t\t\tgetRightValue: function getRightValue(rawValue) {\r\n\t\t\t\t// Null and undefined values first\r\n\t\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\r\n\t\t\t\t\treturn NaN;\r\n\t\t\t\t}\r\n\t\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number\r\n\t\t\t\tif (typeof(rawValue) === 'number' && isNaN(rawValue)) {\r\n\t\t\t\t\treturn NaN;\r\n\t\t\t\t}\r\n\t\t\t\t// If it is in fact an object, dive in one more level\r\n\t\t\t\tif (typeof(rawValue) === \"object\") {\r\n\t\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\r\n\t\t\t\t\t\treturn rawValue;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Value is good, return it\r\n\t\t\t\treturn rawValue;\r\n\t\t\t},\r\n\t\r\n\t\t\t// Used to get the value to display in the tooltip for the data at the given index\r\n\t\t\t// function getLabelForIndex(index, datasetIndex)\r\n\t\t\tgetLabelForIndex: helpers.noop,\r\n\t\r\n\t\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\t\tgetPixelForValue: helpers.noop,\r\n\t\r\n\t\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n\t\t\tgetValueForPixel: helpers.noop,\r\n\t\r\n\t\t\t// Used for tick location, should\r\n\t\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\t\tvar tickWidth = innerWidth / Math.max((this.ticks.length - ((this.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\t\t\tvar pixel = (tickWidth * index) + this.paddingLeft;\r\n\t\r\n\t\t\t\t\tif (includeOffset) {\r\n\t\t\t\t\t\tpixel += tickWidth / 2;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar finalVal = this.left + Math.round(pixel);\r\n\t\t\t\t\tfinalVal += this.isFullWidth() ? this.margins.left : 0;\r\n\t\t\t\t\treturn finalVal;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\t\treturn this.top + (index * (innerHeight / (this.ticks.length - 1)));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\t// Utility for getting the pixel location of a percentage of scale\r\n\t\t\tgetPixelForDecimal: function(decimal /*, includeOffset*/ ) {\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\t\tvar valueOffset = (innerWidth * decimal) + this.paddingLeft;\r\n\t\r\n\t\t\t\t\tvar finalVal = this.left + Math.round(valueOffset);\r\n\t\t\t\t\tfinalVal += this.isFullWidth() ? this.margins.left : 0;\r\n\t\t\t\t\treturn finalVal;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.top + (decimal * this.height);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetBasePixel: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar min = me.min;\r\n\t\t\t\tvar max = me.max;\r\n\t\r\n\t\t\t\treturn me.getPixelForValue(\r\n\t\t\t\t\tme.beginAtZero? 0:\r\n\t\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t\t0);\r\n\t\t\t},\r\n\t\r\n\t\t\t// Actualy draw the scale on the canvas\r\n\t\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n\t\t\tdraw: function(chartArea) {\r\n\t\t\t\tvar options = this.options;\r\n\t\t\t\tif (!options.display) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar context = this.ctx;\r\n\t\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\t\tvar optionTicks = options.ticks;\r\n\t\t\t\tvar gridLines = options.gridLines;\r\n\t\t\t\tvar scaleLabel = options.scaleLabel;\r\n\t\r\n\t\t\t\tvar setContextLineSettings;\r\n\t\t\t\tvar isRotated = this.labelRotation !== 0;\r\n\t\t\t\tvar skipRatio;\r\n\t\t\t\tvar scaleLabelX;\r\n\t\t\t\tvar scaleLabelY;\r\n\t\t\t\tvar useAutoskipper = optionTicks.autoSkip;\r\n\t\r\n\t\t\t\t// figure out the maximum number of gridlines to show\r\n\t\t\t\tvar maxTicks;\r\n\t\t\t\tif (optionTicks.maxTicksLimit) {\r\n\t\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\t\tvar tl = gridLines.tickMarkLength;\r\n\t\r\n\t\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabel.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabel.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabel.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\r\n\t\r\n\t\t\t\tvar labelRotationRadians = helpers.toRadians(this.labelRotation);\r\n\t\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\r\n\t\t\t\tvar sinRotation = Math.sin(labelRotationRadians);\r\n\t\t\t\tvar longestRotatedLabel = this.longestLabelWidth * cosRotation;\r\n\t\t\t\tvar rotatedLabelHeight = tickFontSize * sinRotation;\r\n\t\r\n\t\t\t\t// Make sure we draw text in the correct color and font\r\n\t\t\t\tcontext.fillStyle = tickFontColor;\r\n\t\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\tsetContextLineSettings = true;\r\n\t\t\t\t\tvar yTickStart = options.position === \"bottom\" ? this.top : this.bottom - tl;\r\n\t\t\t\t\tvar yTickEnd = options.position === \"bottom\" ? this.top + tl : this.bottom;\r\n\t\t\t\t\tskipRatio = false;\r\n\t\r\n\t                // Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\r\n\t                // See #2584\r\n\t                if (isRotated) {\r\n\t                    longestRotatedLabel /= 2;\r\n\t                }\r\n\t\r\n\t\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * this.ticks.length > (this.width - (this.paddingLeft + this.paddingRight))) {\r\n\t\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * this.ticks.length) / (this.width - (this.paddingLeft + this.paddingRight)));\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// if they defined a max number of optionTicks,\r\n\t\t\t\t\t// increase skipRatio until that number is met\r\n\t\t\t\t\tif (maxTicks && this.ticks.length > maxTicks) {\r\n\t\t\t\t\t\twhile (!skipRatio || this.ticks.length / (skipRatio || 1) > maxTicks) {\r\n\t\t\t\t\t\t\tif (!skipRatio) {\r\n\t\t\t\t\t\t\t\tskipRatio = 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tskipRatio += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (!useAutoskipper) {\r\n\t\t\t\t\t\tskipRatio = false;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\thelpers.each(this.ticks, function (label, index) {\r\n\t\t\t\t\t\t// Blank optionTicks\r\n\t\t\t\t\t\tvar isLastTick = this.ticks.length === index + 1;\r\n\t\r\n\t\t\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\r\n\t\t\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= this.ticks.length);\r\n\t\t\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar xLineValue = this.getPixelForTick(index); // xvalues for grid lines\r\n\t\t\t\t\t\tvar xLabelValue = this.getPixelForTick(index, gridLines.offsetGridLines); // x values for optionTicks (need to consider offsetLabel option)\r\n\t\r\n\t\t\t\t\t\tif (gridLines.display) {\r\n\t\t\t\t\t\t\tif (index === (typeof this.zeroLineIndex !== 'undefined' ? this.zeroLineIndex : 0)) {\r\n\t\t\t\t\t\t\t\t// Draw the first index specially\r\n\t\t\t\t\t\t\t\tcontext.lineWidth = gridLines.zeroLineWidth;\r\n\t\t\t\t\t\t\t\tcontext.strokeStyle = gridLines.zeroLineColor;\r\n\t\t\t\t\t\t\t\tsetContextLineSettings = true; // reset next time\r\n\t\t\t\t\t\t\t} else if (setContextLineSettings) {\r\n\t\t\t\t\t\t\t\tcontext.lineWidth = gridLines.lineWidth;\r\n\t\t\t\t\t\t\t\tcontext.strokeStyle = gridLines.color;\r\n\t\t\t\t\t\t\t\tsetContextLineSettings = false;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\txLineValue += helpers.aliasPixel(context.lineWidth);\r\n\t\r\n\t\t\t\t\t\t\t// Draw the label area\r\n\t\t\t\t\t\t\tcontext.beginPath();\r\n\t\r\n\t\t\t\t\t\t\tif (gridLines.drawTicks) {\r\n\t\t\t\t\t\t\t\tcontext.moveTo(xLineValue, yTickStart);\r\n\t\t\t\t\t\t\t\tcontext.lineTo(xLineValue, yTickEnd);\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// Draw the chart area\r\n\t\t\t\t\t\t\tif (gridLines.drawOnChartArea) {\r\n\t\t\t\t\t\t\t\tcontext.moveTo(xLineValue, chartArea.top);\r\n\t\t\t\t\t\t\t\tcontext.lineTo(xLineValue, chartArea.bottom);\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// Need to stroke in the loop because we are potentially changing line widths & colours\r\n\t\t\t\t\t\t\tcontext.stroke();\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif (optionTicks.display) {\r\n\t\t\t\t\t\t\tcontext.save();\r\n\t\t\t\t\t\t\tcontext.translate(xLabelValue + optionTicks.labelOffset, (isRotated) ? this.top + 12 : options.position === \"top\" ? this.bottom - tl : this.top + tl);\r\n\t\t\t\t\t\t\tcontext.rotate(labelRotationRadians * -1);\r\n\t\t\t\t\t\t\tcontext.font = tickLabelFont;\r\n\t\t\t\t\t\t\tcontext.textAlign = (isRotated) ? \"right\" : \"center\";\r\n\t\t\t\t\t\t\tcontext.textBaseline = (isRotated) ? \"middle\" : options.position === \"top\" ? \"bottom\" : \"top\";\r\n\t\t\t\t\t\t\tcontext.fillText(label, 0, 0);\r\n\t\t\t\t\t\t\tcontext.restore();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\r\n\t\t\t\t\tif (scaleLabel.display) {\r\n\t\t\t\t\t\t// Draw the scale label\r\n\t\t\t\t\t\tcontext.textAlign = \"center\";\r\n\t\t\t\t\t\tcontext.textBaseline = 'middle';\r\n\t\t\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\r\n\t\t\t\t\t\tcontext.font = scaleLabelFont;\r\n\t\r\n\t\t\t\t\t\tscaleLabelX = this.left + ((this.right - this.left) / 2); // midpoint of the width\r\n\t\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? this.bottom - (scaleLabelFontSize / 2) : this.top + (scaleLabelFontSize / 2);\r\n\t\r\n\t\t\t\t\t\tcontext.fillText(scaleLabel.labelString, scaleLabelX, scaleLabelY);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetContextLineSettings = true;\r\n\t\t\t\t\tvar xTickStart = options.position === \"right\" ? this.left : this.right - 5;\r\n\t\t\t\t\tvar xTickEnd = options.position === \"right\" ? this.left + 5 : this.right;\r\n\t\r\n\t\t\t\t\thelpers.each(this.ticks, function (label, index) {\r\n\t\t\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\r\n\t\t\t\t\t\tif (label === undefined || label === null) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar yLineValue = this.getPixelForTick(index); // xvalues for grid lines\r\n\t\r\n\t\t\t\t\t\tif (gridLines.display) {\r\n\t\t\t\t\t\t\tif (index === (typeof this.zeroLineIndex !== 'undefined' ? this.zeroLineIndex : 0)) {\r\n\t\t\t\t\t\t\t\t// Draw the first index specially\r\n\t\t\t\t\t\t\t\tcontext.lineWidth = gridLines.zeroLineWidth;\r\n\t\t\t\t\t\t\t\tcontext.strokeStyle = gridLines.zeroLineColor;\r\n\t\t\t\t\t\t\t\tsetContextLineSettings = true; // reset next time\r\n\t\t\t\t\t\t\t} else if (setContextLineSettings) {\r\n\t\t\t\t\t\t\t\tcontext.lineWidth = gridLines.lineWidth;\r\n\t\t\t\t\t\t\t\tcontext.strokeStyle = gridLines.color;\r\n\t\t\t\t\t\t\t\tsetContextLineSettings = false;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tyLineValue += helpers.aliasPixel(context.lineWidth);\r\n\t\r\n\t\t\t\t\t\t\t// Draw the label area\r\n\t\t\t\t\t\t\tcontext.beginPath();\r\n\t\r\n\t\t\t\t\t\t\tif (gridLines.drawTicks) {\r\n\t\t\t\t\t\t\t\tcontext.moveTo(xTickStart, yLineValue);\r\n\t\t\t\t\t\t\t\tcontext.lineTo(xTickEnd, yLineValue);\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// Draw the chart area\r\n\t\t\t\t\t\t\tif (gridLines.drawOnChartArea) {\r\n\t\t\t\t\t\t\t\tcontext.moveTo(chartArea.left, yLineValue);\r\n\t\t\t\t\t\t\t\tcontext.lineTo(chartArea.right, yLineValue);\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// Need to stroke in the loop because we are potentially changing line widths & colours\r\n\t\t\t\t\t\t\tcontext.stroke();\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif (optionTicks.display) {\r\n\t\t\t\t\t\t\tvar xLabelValue;\r\n\t\t\t\t\t\t\tvar yLabelValue = this.getPixelForTick(index, gridLines.offsetGridLines); // x values for optionTicks (need to consider offsetLabel option)\r\n\t\r\n\t\t\t\t\t\t\tcontext.save();\r\n\t\r\n\t\t\t\t\t\t\tif (options.position === \"left\") {\r\n\t\t\t\t\t\t\t\tif (optionTicks.mirror) {\r\n\t\t\t\t\t\t\t\t\txLabelValue = this.right + optionTicks.padding;\r\n\t\t\t\t\t\t\t\t\tcontext.textAlign = \"left\";\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\txLabelValue = this.right - optionTicks.padding;\r\n\t\t\t\t\t\t\t\t\tcontext.textAlign = \"right\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// right side\r\n\t\t\t\t\t\t\t\tif (optionTicks.mirror) {\r\n\t\t\t\t\t\t\t\t\txLabelValue = this.left - optionTicks.padding;\r\n\t\t\t\t\t\t\t\t\tcontext.textAlign = \"right\";\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\txLabelValue = this.left + optionTicks.padding;\r\n\t\t\t\t\t\t\t\t\tcontext.textAlign = \"left\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tcontext.translate(xLabelValue, yLabelValue + optionTicks.labelOffset);\r\n\t\t\t\t\t\t\tcontext.rotate(labelRotationRadians * -1);\r\n\t\t\t\t\t\t\tcontext.font = tickLabelFont;\r\n\t\t\t\t\t\t\tcontext.textBaseline = \"middle\";\r\n\t\t\t\t\t\t\tcontext.fillText(label, 0, 0);\r\n\t\t\t\t\t\t\tcontext.restore();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\r\n\t\t\t\t\tif (scaleLabel.display) {\r\n\t\t\t\t\t\t// Draw the scale label\r\n\t\t\t\t\t\tscaleLabelX = options.position === 'left' ? this.left + (scaleLabelFontSize / 2) : this.right - (scaleLabelFontSize / 2);\r\n\t\t\t\t\t\tscaleLabelY = this.top + ((this.bottom - this.top) / 2);\r\n\t\t\t\t\t\tvar rotation = options.position === 'left' ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n\t\r\n\t\t\t\t\t\tcontext.save();\r\n\t\t\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\r\n\t\t\t\t\t\tcontext.rotate(rotation);\r\n\t\t\t\t\t\tcontext.textAlign = \"center\";\r\n\t\t\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\r\n\t\t\t\t\t\tcontext.font = scaleLabelFont;\r\n\t\t\t\t\t\tcontext.textBaseline = 'middle';\r\n\t\t\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\r\n\t\t\t\t\t\tcontext.restore();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (gridLines.drawBorder) {\r\n\t\t\t\t\t// Draw the line at the edge of the axis\r\n\t\t\t\t\tcontext.lineWidth = gridLines.lineWidth;\r\n\t\t\t\t\tcontext.strokeStyle = gridLines.color;\r\n\t\t\t\t\tvar x1 = this.left,\r\n\t\t\t\t\t\tx2 = this.right,\r\n\t\t\t\t\t\ty1 = this.top,\r\n\t\t\t\t\t\ty2 = this.bottom;\r\n\t\r\n\t\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n\t\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\t\ty1 = y2 = options.position === 'top' ? this.bottom : this.top;\r\n\t\t\t\t\t\ty1 += aliasPixel;\r\n\t\t\t\t\t\ty2 += aliasPixel;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tx1 = x2 = options.position === 'left' ? this.right : this.left;\r\n\t\t\t\t\t\tx1 += aliasPixel;\r\n\t\t\t\t\t\tx2 += aliasPixel;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tcontext.beginPath();\r\n\t\t\t\t\tcontext.moveTo(x1, y1);\r\n\t\t\t\t\tcontext.lineTo(x2, y2);\r\n\t\t\t\t\tcontext.stroke();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\n\n/***/ },\n\n/***/ 148:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.scaleService = {\r\n\t\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n\t\t\t// use the new chart options to grab the correct scale\r\n\t\t\tconstructors: {},\r\n\t\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n\t\t\t// old browsers\r\n\t\r\n\t\t\t// Scale config defaults\r\n\t\t\tdefaults: {},\r\n\t\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\r\n\t\t\t\tthis.constructors[type] = scaleConstructor;\r\n\t\t\t\tthis.defaults[type] = helpers.clone(defaults);\r\n\t\t\t},\r\n\t\t\tgetScaleConstructor: function(type) {\r\n\t\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n\t\t\t},\r\n\t\t\tgetScaleDefaults: function(type) {\r\n\t\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\r\n\t\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\r\n\t\t\t},\r\n\t\t\tupdateScaleDefaults: function(type, additions) {\r\n\t\t\t\tvar defaults = this.defaults;\r\n\t\t\t\tif (defaults.hasOwnProperty(type)) {\r\n\t\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\taddScalesToLayout: function(chartInstance) {\r\n\t\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\r\n\t\t\t\thelpers.each(chartInstance.scales, function(scale) {\r\n\t\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\n\n/***/ },\n\n/***/ 149:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.global.title = {\r\n\t\t\tdisplay: false,\r\n\t\t\tposition: 'top',\r\n\t\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\t\r\n\t\t\tfontStyle: 'bold',\r\n\t\t\tpadding: 10,\r\n\t\r\n\t\t\t// actual title\r\n\t\t\ttext: ''\r\n\t\t};\r\n\t\r\n\t\tvar noop = helpers.noop;\r\n\t\tChart.Title = Chart.Element.extend({\r\n\t\r\n\t\t\tinitialize: function(config) {\r\n\t\t\t\thelpers.extend(this, config);\r\n\t\t\t\tthis.options = helpers.configMerge(Chart.defaults.global.title, config.options);\r\n\t\r\n\t\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\t\tthis.legendHitBoxes = [];\r\n\t\t\t},\r\n\t\r\n\t\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\r\n\t\t\tbeforeUpdate: noop,\r\n\t\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\r\n\t\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\t\tthis.beforeUpdate();\r\n\t\r\n\t\t\t\t// Absorb the master measurements\r\n\t\t\t\tthis.maxWidth = maxWidth;\r\n\t\t\t\tthis.maxHeight = maxHeight;\r\n\t\t\t\tthis.margins = margins;\r\n\t\r\n\t\t\t\t// Dimensions\r\n\t\t\t\tthis.beforeSetDimensions();\r\n\t\t\t\tthis.setDimensions();\r\n\t\t\t\tthis.afterSetDimensions();\r\n\t\t\t\t// Labels\r\n\t\t\t\tthis.beforeBuildLabels();\r\n\t\t\t\tthis.buildLabels();\r\n\t\t\t\tthis.afterBuildLabels();\r\n\t\r\n\t\t\t\t// Fit\r\n\t\t\t\tthis.beforeFit();\r\n\t\t\t\tthis.fit();\r\n\t\t\t\tthis.afterFit();\r\n\t\t\t\t//\r\n\t\t\t\tthis.afterUpdate();\r\n\t\r\n\t\t\t\treturn this.minSize;\r\n\t\r\n\t\t\t},\r\n\t\t\tafterUpdate: noop,\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeSetDimensions: noop,\r\n\t\t\tsetDimensions: function() {\r\n\t\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\t\tthis.width = this.maxWidth;\r\n\t\t\t\t\tthis.left = 0;\r\n\t\t\t\t\tthis.right = this.width;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.height = this.maxHeight;\r\n\t\r\n\t\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\t\tthis.top = 0;\r\n\t\t\t\t\tthis.bottom = this.height;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Reset padding\r\n\t\t\t\tthis.paddingLeft = 0;\r\n\t\t\t\tthis.paddingTop = 0;\r\n\t\t\t\tthis.paddingRight = 0;\r\n\t\t\t\tthis.paddingBottom = 0;\r\n\t\r\n\t\t\t\t// Reset minSize\r\n\t\t\t\tthis.minSize = {\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tafterSetDimensions: noop,\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeBuildLabels: noop,\r\n\t\t\tbuildLabels: noop,\r\n\t\t\tafterBuildLabels: noop,\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeFit: noop,\r\n\t\t\tfit: function() {\r\n\t\r\n\t\t\t\tvar _this = this,\r\n\t\t\t\t\tctx = _this.ctx,\r\n\t\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\topts = _this.options,\r\n\t\t\t\t\tglobalDefaults = Chart.defaults.global,\r\n\t\t\t\t\tdisplay = opts.display,\r\n\t\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\tminSize = _this.minSize;\r\n\t\r\n\t\t\t\tif (_this.isHorizontal()) {\r\n\t\t\t\t\tminSize.width = _this.maxWidth; // fill all the width\r\n\t\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t\t\tminSize.height = _this.maxHeight; // fill all the height\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_this.width = minSize.width;\r\n\t\t\t\t_this.height = minSize.height;\r\n\t\r\n\t\t\t},\r\n\t\t\tafterFit: noop,\r\n\t\r\n\t\t\t// Shared Methods\r\n\t\t\tisHorizontal: function() {\r\n\t\t\t\tvar pos = this.options.position;\r\n\t\t\t\treturn pos === \"top\" || pos === \"bottom\";\r\n\t\t\t},\r\n\t\r\n\t\t\t// Actualy draw the title block on the canvas\r\n\t\t\tdraw: function() {\r\n\t\t\t\tvar _this = this,\r\n\t\t\t\t\tctx = _this.ctx,\r\n\t\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\topts = _this.options,\r\n\t\t\t\t\tglobalDefaults = Chart.defaults.global;\r\n\t\r\n\t\t\t\tif (opts.display) {\r\n\t\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\r\n\t\t\t\t\t\trotation = 0,\r\n\t\t\t\t\t\ttitleX, \r\n\t\t\t\t\t\ttitleY,\r\n\t\t\t\t\t\ttop = _this.top,\r\n\t\t\t\t\t\tleft = _this.left,\r\n\t\t\t\t\t\tbottom = _this.bottom,\r\n\t\t\t\t\t\tright = _this.right;\r\n\t\r\n\t\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n\t\t\t\t\tctx.font = titleFont;\r\n\t\r\n\t\t\t\t\t// Horizontal\r\n\t\t\t\t\tif (_this.isHorizontal()) {\r\n\t\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\r\n\t\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\r\n\t\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\r\n\t\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tctx.save();\r\n\t\t\t\t\tctx.translate(titleX, titleY);\r\n\t\t\t\t\tctx.rotate(rotation);\r\n\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\t\tctx.fillText(opts.text, 0, 0);\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\n\n/***/ },\n\n/***/ 150:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.global.tooltips = {\r\n\t\t\tenabled: true,\r\n\t\t\tcustom: null,\r\n\t\t\tmode: 'single',\r\n\t\t\tbackgroundColor: \"rgba(0,0,0,0.8)\",\r\n\t\t\ttitleFontStyle: \"bold\",\r\n\t\t\ttitleSpacing: 2,\r\n\t\t\ttitleMarginBottom: 6,\r\n\t\t\ttitleColor: \"#fff\",\r\n\t\t\ttitleAlign: \"left\",\r\n\t\t\tbodySpacing: 2,\r\n\t\t\tbodyColor: \"#fff\",\r\n\t\t\tbodyAlign: \"left\",\r\n\t\t\tfooterFontStyle: \"bold\",\r\n\t\t\tfooterSpacing: 2,\r\n\t\t\tfooterMarginTop: 6,\r\n\t\t\tfooterColor: \"#fff\",\r\n\t\t\tfooterAlign: \"left\",\r\n\t\t\tyPadding: 6,\r\n\t\t\txPadding: 6,\r\n\t\t\tyAlign : 'center',\r\n\t\t\txAlign : 'center',\r\n\t\t\tcaretSize: 5,\r\n\t\t\tcornerRadius: 6,\r\n\t\t\tmultiKeyBackground: '#fff',\r\n\t\t\tcallbacks: {\r\n\t\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\t\tbeforeTitle: helpers.noop,\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\t\tvar title = '';\r\n\t\r\n\t\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\t\tif (tooltipItems[0].xLabel) {\r\n\t\t\t\t\t\t\ttitle = tooltipItems[0].xLabel;\r\n\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn title;\r\n\t\t\t\t},\r\n\t\t\t\tafterTitle: helpers.noop,\r\n\t\r\n\t\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\t\tbeforeBody: helpers.noop,\r\n\t\r\n\t\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\t\tbeforeLabel: helpers.noop,\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\r\n\t\t\t\t},\r\n\t\t\t\tafterLabel: helpers.noop,\r\n\t\r\n\t\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\t\tafterBody: helpers.noop,\r\n\t\r\n\t\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\t\tbeforeFooter: helpers.noop,\r\n\t\t\t\tfooter: helpers.noop,\r\n\t\t\t\tafterFooter: helpers.noop\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\t// Helper to push or concat based on if the 2nd parameter is an array or not\r\n\t\tfunction pushOrConcat(base, toPush) {\r\n\t\t\tif (toPush) {\r\n\t\t\t\tif (helpers.isArray(toPush)) {\r\n\t\t\t\t\tbase = base.concat(toPush);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbase.push(toPush);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn base;\r\n\t\t}\r\n\t\r\n\t\tChart.Tooltip = Chart.Element.extend({\r\n\t\t\tinitialize: function() {\r\n\t\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\t\tvar options = this._options;\r\n\t\t\t\tvar tooltips = options.tooltips;\r\n\t\r\n\t\t\t\thelpers.extend(this, {\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\t// Positioning\r\n\t\t\t\t\t\txPadding: tooltips.xPadding,\r\n\t\t\t\t\t\tyPadding: tooltips.yPadding,\r\n\t\t\t\t\t\txAlign : tooltips.yAlign,\r\n\t\t\t\t\t\tyAlign : tooltips.xAlign,\r\n\t\r\n\t\t\t\t\t\t// Body\r\n\t\t\t\t\t\tbodyColor: tooltips.bodyColor,\r\n\t\t\t\t\t\t_bodyFontFamily: helpers.getValueOrDefault(tooltips.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t\t_bodyFontStyle: helpers.getValueOrDefault(tooltips.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\t\t_bodyAlign: tooltips.bodyAlign,\r\n\t\t\t\t\t\tbodyFontSize: helpers.getValueOrDefault(tooltips.bodyFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t\tbodySpacing: tooltips.bodySpacing,\r\n\t\r\n\t\t\t\t\t\t// Title\r\n\t\t\t\t\t\ttitleColor: tooltips.titleColor,\r\n\t\t\t\t\t\t_titleFontFamily: helpers.getValueOrDefault(tooltips.titleFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t\t_titleFontStyle: helpers.getValueOrDefault(tooltips.titleFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\t\ttitleFontSize: helpers.getValueOrDefault(tooltips.titleFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t\t_titleAlign: tooltips.titleAlign,\r\n\t\t\t\t\t\ttitleSpacing: tooltips.titleSpacing,\r\n\t\t\t\t\t\ttitleMarginBottom: tooltips.titleMarginBottom,\r\n\t\r\n\t\t\t\t\t\t// Footer\r\n\t\t\t\t\t\tfooterColor: tooltips.footerColor,\r\n\t\t\t\t\t\t_footerFontFamily: helpers.getValueOrDefault(tooltips.footerFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t\t_footerFontStyle: helpers.getValueOrDefault(tooltips.footerFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\t\tfooterFontSize: helpers.getValueOrDefault(tooltips.footerFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t\t_footerAlign: tooltips.footerAlign,\r\n\t\t\t\t\t\tfooterSpacing: tooltips.footerSpacing,\r\n\t\t\t\t\t\tfooterMarginTop: tooltips.footerMarginTop,\r\n\t\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\tcaretSize: tooltips.caretSize,\r\n\t\t\t\t\t\tcornerRadius: tooltips.cornerRadius,\r\n\t\t\t\t\t\tbackgroundColor: tooltips.backgroundColor,\r\n\t\t\t\t\t\topacity: 0,\r\n\t\t\t\t\t\tlegendColorBackground: tooltips.multiKeyBackground\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\t// Get the title\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tgetTitle: function() {\r\n\t\t\t\tvar beforeTitle = this._options.tooltips.callbacks.beforeTitle.apply(this, arguments),\r\n\t\t\t\t\ttitle = this._options.tooltips.callbacks.title.apply(this, arguments),\r\n\t\t\t\t\tafterTitle = this._options.tooltips.callbacks.afterTitle.apply(this, arguments);\r\n\t\r\n\t\t\t\tvar lines = [];\r\n\t\t\t\tlines = pushOrConcat(lines, beforeTitle);\r\n\t\t\t\tlines = pushOrConcat(lines, title);\r\n\t\t\t\tlines = pushOrConcat(lines, afterTitle);\r\n\t\r\n\t\t\t\treturn lines;\r\n\t\t\t},\r\n\t\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tgetBeforeBody: function() {\r\n\t\t\t\tvar lines = this._options.tooltips.callbacks.beforeBody.apply(this, arguments);\r\n\t\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t\t},\r\n\t\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tgetBody: function(tooltipItems, data) {\r\n\t\t\t\tvar lines = [];\r\n\t\r\n\t\t\t\thelpers.each(tooltipItems, function(bodyItem) {\r\n\t\t\t\t\thelpers.pushAllIfDefined(this._options.tooltips.callbacks.beforeLabel.call(this, bodyItem, data), lines);\r\n\t\t\t\t\thelpers.pushAllIfDefined(this._options.tooltips.callbacks.label.call(this, bodyItem, data), lines);\r\n\t\t\t\t\thelpers.pushAllIfDefined(this._options.tooltips.callbacks.afterLabel.call(this, bodyItem, data), lines);\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t\treturn lines;\r\n\t\t\t},\r\n\t\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tgetAfterBody: function() {\r\n\t\t\t\tvar lines = this._options.tooltips.callbacks.afterBody.apply(this, arguments);\r\n\t\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t\t},\r\n\t\r\n\t\t\t// Get the footer and beforeFooter and afterFooter lines\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tgetFooter: function() {\r\n\t\t\t\tvar beforeFooter = this._options.tooltips.callbacks.beforeFooter.apply(this, arguments);\r\n\t\t\t\tvar footer = this._options.tooltips.callbacks.footer.apply(this, arguments);\r\n\t\t\t\tvar afterFooter = this._options.tooltips.callbacks.afterFooter.apply(this, arguments);\r\n\t\r\n\t\t\t\tvar lines = [];\r\n\t\t\t\tlines = pushOrConcat(lines, beforeFooter);\r\n\t\t\t\tlines = pushOrConcat(lines, footer);\r\n\t\t\t\tlines = pushOrConcat(lines, afterFooter);\r\n\t\r\n\t\t\t\treturn lines;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetAveragePosition: function(elements) {\r\n\t\r\n\t\t\t\tif (!elements.length) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar xPositions = [];\r\n\t\t\t\tvar yPositions = [];\r\n\t\r\n\t\t\t\thelpers.each(elements, function(el) {\r\n\t\t\t\t\tif (el && el.hasValue()){\r\n\t\t\t\t\t\tvar pos = el.tooltipPosition();\r\n\t\t\t\t\t\txPositions.push(pos.x);\r\n\t\t\t\t\t\tyPositions.push(pos.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tvar x = 0,\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\tfor (var i = 0; i < xPositions.length; i++) {\r\n\t\t\t\t\tx += xPositions[i];\r\n\t\t\t\t\ty += yPositions[i];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: Math.round(x / xPositions.length),\r\n\t\t\t\t\ty: Math.round(y / xPositions.length)\r\n\t\t\t\t};\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: function(changed) {\r\n\t\t\t\tif (this._active.length) {\r\n\t\t\t\t\tthis._model.opacity = 1;\r\n\t\r\n\t\t\t\t\tvar element = this._active[0],\r\n\t\t\t\t\t\tlabelColors = [],\r\n\t\t\t\t\t\ttooltipPosition;\r\n\t\r\n\t\t\t\t\tvar tooltipItems = [];\r\n\t\r\n\t\t\t\t\tif (this._options.tooltips.mode === 'single') {\r\n\t\t\t\t\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n\t\t\t\t\t\ttooltipItems.push({\r\n\t\t\t\t\t\t\txLabel: element._xScale ? element._xScale.getLabelForIndex(element._index, element._datasetIndex) : '',\r\n\t\t\t\t\t\t\tyLabel: yScale ? yScale.getLabelForIndex(element._index, element._datasetIndex) : '',\r\n\t\t\t\t\t\t\tindex: element._index,\r\n\t\t\t\t\t\t\tdatasetIndex: element._datasetIndex\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ttooltipPosition = this.getAveragePosition(this._active);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\thelpers.each(this._data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\t\t\tif (!this._chartInstance.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tvar meta = this._chartInstance.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\t\tvar currentElement = meta.data[element._index];\r\n\t\t\t\t\t\t\tif (currentElement) {\r\n\t\t\t\t\t\t\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n\t\r\n\t\t\t\t\t\t\t\ttooltipItems.push({\r\n\t\t\t\t\t\t\t\t\txLabel: currentElement._xScale ? currentElement._xScale.getLabelForIndex(currentElement._index, currentElement._datasetIndex) : '',\r\n\t\t\t\t\t\t\t\t\tyLabel: yScale ? yScale.getLabelForIndex(currentElement._index, currentElement._datasetIndex) : '',\r\n\t\t\t\t\t\t\t\t\tindex: element._index,\r\n\t\t\t\t\t\t\t\t\tdatasetIndex: datasetIndex\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\r\n\t\t\t\t\t\thelpers.each(this._active, function(active) {\r\n\t\t\t\t\t\t\tif (active) {\r\n\t\t\t\t\t\t\t\tlabelColors.push({\r\n\t\t\t\t\t\t\t\t\tborderColor: active._view.borderColor,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: active._view.backgroundColor\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, null);\r\n\t\r\n\t\t\t\t\t\ttooltipPosition = this.getAveragePosition(this._active);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Build the Text Lines\r\n\t\t\t\t\thelpers.extend(this._model, {\r\n\t\t\t\t\t\ttitle: this.getTitle(tooltipItems, this._data),\r\n\t\t\t\t\t\tbeforeBody: this.getBeforeBody(tooltipItems, this._data),\r\n\t\t\t\t\t\tbody: this.getBody(tooltipItems, this._data),\r\n\t\t\t\t\t\tafterBody: this.getAfterBody(tooltipItems, this._data),\r\n\t\t\t\t\t\tfooter: this.getFooter(tooltipItems, this._data)\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\thelpers.extend(this._model, {\r\n\t\t\t\t\t\tx: Math.round(tooltipPosition.x),\r\n\t\t\t\t\t\ty: Math.round(tooltipPosition.y),\r\n\t\t\t\t\t\tcaretPadding: helpers.getValueOrDefault(tooltipPosition.padding, 2),\r\n\t\t\t\t\t\tlabelColors: labelColors\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t// We need to determine alignment of\r\n\t\t\t\t\tvar tooltipSize = this.getTooltipSize(this._model);\r\n\t\t\t\t\tthis.determineAlignment(tooltipSize); // Smart Tooltip placement to stay on the canvas\r\n\t\r\n\t\t\t\t\thelpers.extend(this._model, this.getBackgroundPoint(this._model, tooltipSize));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._model.opacity = 0;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (changed && this._options.tooltips.custom) {\r\n\t\t\t\t\tthis._options.tooltips.custom.call(this, this._model);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tgetTooltipSize: function getTooltipSize(vm) {\r\n\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\r\n\t\t\t\tvar size = {\r\n\t\t\t\t\theight: vm.yPadding * 2, // Tooltip Padding\r\n\t\t\t\t\twidth: 0\r\n\t\t\t\t};\r\n\t\t\t\tvar combinedBodyLength = vm.body.length + vm.beforeBody.length + vm.afterBody.length;\r\n\t\r\n\t\t\t\tsize.height += vm.title.length * vm.titleFontSize; // Title Lines\r\n\t\t\t\tsize.height += (vm.title.length - 1) * vm.titleSpacing; // Title Line Spacing\r\n\t\t\t\tsize.height += vm.title.length ? vm.titleMarginBottom : 0; // Title's bottom Margin\r\n\t\t\t\tsize.height += combinedBodyLength * vm.bodyFontSize; // Body Lines\r\n\t\t\t\tsize.height += combinedBodyLength ? (combinedBodyLength - 1) * vm.bodySpacing : 0; // Body Line Spacing\r\n\t\t\t\tsize.height += vm.footer.length ? vm.footerMarginTop : 0; // Footer Margin\r\n\t\t\t\tsize.height += vm.footer.length * (vm.footerFontSize); // Footer Lines\r\n\t\t\t\tsize.height += vm.footer.length ? (vm.footer.length - 1) * vm.footerSpacing : 0; // Footer Line Spacing\r\n\t\r\n\t\t\t\t// Width\r\n\t\t\t\tctx.font = helpers.fontString(vm.titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\t\t\t\thelpers.each(vm.title, function(line) {\r\n\t\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width);\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tctx.font = helpers.fontString(vm.bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\t\t\t\thelpers.each(vm.beforeBody.concat(vm.afterBody), function(line) {\r\n\t\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width);\r\n\t\t\t\t});\r\n\t\t\t\thelpers.each(vm.body, function(line) {\r\n\t\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width + (this._options.tooltips.mode !== 'single' ? (vm.bodyFontSize + 2) : 0));\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\t\t\t\thelpers.each(vm.footer, function(line) {\r\n\t\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width);\r\n\t\t\t\t});\r\n\t\t\t\tsize.width += 2 * vm.xPadding;\r\n\t\r\n\t\t\t\treturn size;\r\n\t\t\t},\r\n\t\t\tdetermineAlignment: function determineAlignment(size) {\r\n\t\t\t\tif (this._model.y < size.height) {\r\n\t\t\t\t\tthis._model.yAlign = 'top';\r\n\t\t\t\t} else if (this._model.y > (this._chart.height - size.height)) {\r\n\t\t\t\t\tthis._model.yAlign = 'bottom';\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar lf, rf; // functions to determine left, right alignment\r\n\t\t\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n\t\t\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar midX = (this._chartInstance.chartArea.left + this._chartInstance.chartArea.right) / 2;\r\n\t\t\t\tvar midY = (this._chartInstance.chartArea.top + this._chartInstance.chartArea.bottom) / 2;\r\n\t\r\n\t\t\t\tif (this._model.yAlign === 'center') {\r\n\t\t\t\t\tlf = function(x) {\r\n\t\t\t\t\t\treturn x <= midX;\r\n\t\t\t\t\t};\r\n\t\t\t\t\trf = function(x) {\r\n\t\t\t\t\t\treturn x > midX;\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlf = function(x) {\r\n\t\t\t\t\t\treturn x <= (size.width / 2);\r\n\t\t\t\t\t};\r\n\t\t\t\t\trf = function(x) {\r\n\t\t\t\t\t\treturn x >= (_this._chart.width - (size.width / 2));\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tolf = function(x) {\r\n\t\t\t\t\treturn x + size.width > _this._chart.width;\r\n\t\t\t\t};\r\n\t\t\t\torf = function(x) {\r\n\t\t\t\t\treturn x - size.width < 0;\r\n\t\t\t\t};\r\n\t\t\t\tyf = function(y) {\r\n\t\t\t\t\treturn y <= midY ? 'top' : 'bottom';\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tif (lf(this._model.x)) {\r\n\t\t\t\t\tthis._model.xAlign = 'left';\r\n\t\r\n\t\t\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\r\n\t\t\t\t\tif (olf(this._model.x)) {\r\n\t\t\t\t\t\tthis._model.xAlign = 'center';\r\n\t\t\t\t\t\tthis._model.yAlign = yf(this._model.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (rf(this._model.x)) {\r\n\t\t\t\t\tthis._model.xAlign = 'right';\r\n\t\r\n\t\t\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\r\n\t\t\t\t\tif (orf(this._model.x)) {\r\n\t\t\t\t\t\tthis._model.xAlign = 'center';\r\n\t\t\t\t\t\tthis._model.yAlign = yf(this._model.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetBackgroundPoint: function getBackgroundPoint(vm, size) {\r\n\t\t\t\t// Background Position\r\n\t\t\t\tvar pt = {\r\n\t\t\t\t\tx: vm.x,\r\n\t\t\t\t\ty: vm.y\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tif (vm.xAlign === 'right') {\r\n\t\t\t\t\tpt.x -= size.width;\r\n\t\t\t\t} else if (vm.xAlign === 'center') {\r\n\t\t\t\t\tpt.x -= (size.width / 2);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (vm.yAlign === 'top') {\r\n\t\t\t\t\tpt.y += vm.caretPadding + vm.caretSize;\r\n\t\t\t\t} else if (vm.yAlign === 'bottom') {\r\n\t\t\t\t\tpt.y -= size.height + vm.caretPadding + vm.caretSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpt.y -= (size.height / 2);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (vm.yAlign === 'center') {\r\n\t\t\t\t\tif (vm.xAlign === 'left') {\r\n\t\t\t\t\t\tpt.x += vm.caretPadding + vm.caretSize;\r\n\t\t\t\t\t} else if (vm.xAlign === 'right') {\r\n\t\t\t\t\t\tpt.x -= vm.caretPadding + vm.caretSize;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (vm.xAlign === 'left') {\r\n\t\t\t\t\t\tpt.x -= vm.cornerRadius + vm.caretPadding;\r\n\t\t\t\t\t} else if (vm.xAlign === 'right') {\r\n\t\t\t\t\t\tpt.x += vm.cornerRadius + vm.caretPadding;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn pt;\r\n\t\t\t},\r\n\t\t\tdrawCaret: function drawCaret(tooltipPoint, size, opacity, caretPadding) {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\tvar x1, x2, x3;\r\n\t\t\t\tvar y1, y2, y3;\r\n\t\r\n\t\t\t\tif (vm.yAlign === 'center') {\r\n\t\t\t\t\t// Left or right side\r\n\t\t\t\t\tif (vm.xAlign === 'left') {\r\n\t\t\t\t\t\tx1 = tooltipPoint.x;\r\n\t\t\t\t\t\tx2 = x1 - vm.caretSize;\r\n\t\t\t\t\t\tx3 = x1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tx1 = tooltipPoint.x + size.width;\r\n\t\t\t\t\t\tx2 = x1 + vm.caretSize;\r\n\t\t\t\t\t\tx3 = x1;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ty2 = tooltipPoint.y + (size.height / 2);\r\n\t\t\t\t\ty1 = y2 - vm.caretSize;\r\n\t\t\t\t\ty3 = y2 + vm.caretSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (vm.xAlign === 'left') {\r\n\t\t\t\t\t\tx1 = tooltipPoint.x + vm.cornerRadius;\r\n\t\t\t\t\t\tx2 = x1 + vm.caretSize;\r\n\t\t\t\t\t\tx3 = x2 + vm.caretSize;\r\n\t\t\t\t\t} else if (vm.xAlign === 'right') {\r\n\t\t\t\t\t\tx1 = tooltipPoint.x + size.width - vm.cornerRadius;\r\n\t\t\t\t\t\tx2 = x1 - vm.caretSize;\r\n\t\t\t\t\t\tx3 = x2 - vm.caretSize;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tx2 = tooltipPoint.x + (size.width / 2);\r\n\t\t\t\t\t\tx1 = x2 - vm.caretSize;\r\n\t\t\t\t\t\tx3 = x2 + vm.caretSize;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (vm.yAlign === 'top') {\r\n\t\t\t\t\t\ty1 = tooltipPoint.y;\r\n\t\t\t\t\t\ty2 = y1 - vm.caretSize;\r\n\t\t\t\t\t\ty3 = y1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ty1 = tooltipPoint.y + size.height;\r\n\t\t\t\t\t\ty2 = y1 + vm.caretSize;\r\n\t\t\t\t\t\ty3 = y1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\r\n\t\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x1, y1);\r\n\t\t\t\tctx.lineTo(x2, y2);\r\n\t\t\t\tctx.lineTo(x3, y3);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t},\r\n\t\t\tdrawTitle: function drawTitle(pt, vm, ctx, opacity) {\r\n\t\t\t\tif (vm.title.length) {\r\n\t\t\t\t\tctx.textAlign = vm._titleAlign;\r\n\t\t\t\t\tctx.textBaseline = \"top\";\r\n\t\r\n\t\t\t\t\tvar titleColor = helpers.color(vm.titleColor);\r\n\t\t\t\t\tctx.fillStyle = titleColor.alpha(opacity * titleColor.alpha()).rgbString();\r\n\t\t\t\t\tctx.font = helpers.fontString(vm.titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\t\r\n\t\t\t\t\thelpers.each(vm.title, function(title, i) {\r\n\t\t\t\t\t\tctx.fillText(title, pt.x, pt.y);\r\n\t\t\t\t\t\tpt.y += vm.titleFontSize + vm.titleSpacing; // Line Height and spacing\r\n\t\r\n\t\t\t\t\t\tif (i + 1 === vm.title.length) {\r\n\t\t\t\t\t\t\tpt.y += vm.titleMarginBottom - vm.titleSpacing; // If Last, add margin, remove spacing\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdrawBody: function drawBody(pt, vm, ctx, opacity) {\r\n\t\t\t\tctx.textAlign = vm._bodyAlign;\r\n\t\t\t\tctx.textBaseline = \"top\";\r\n\t\r\n\t\t\t\tvar bodyColor = helpers.color(vm.bodyColor);\r\n\t\t\t\tctx.fillStyle = bodyColor.alpha(opacity * bodyColor.alpha()).rgbString();\r\n\t\t\t\tctx.font = helpers.fontString(vm.bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\t\r\n\t\t\t\t// Before Body\r\n\t\t\t\thelpers.each(vm.beforeBody, function(beforeBody) {\r\n\t\t\t\t\tctx.fillText(beforeBody, pt.x, pt.y);\r\n\t\t\t\t\tpt.y += vm.bodyFontSize + vm.bodySpacing;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\thelpers.each(vm.body, function(body, i) {\r\n\t\t\t\t\t// Draw Legend-like boxes if needed\r\n\t\t\t\t\tif (this._options.tooltips.mode !== 'single') {\r\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\r\n\t\t\t\t\t\tctx.fillStyle = helpers.color(vm.legendColorBackground).alpha(opacity).rgbaString();\r\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, vm.bodyFontSize, vm.bodyFontSize);\r\n\t\r\n\t\t\t\t\t\t// Border\r\n\t\t\t\t\t\tctx.strokeStyle = helpers.color(vm.labelColors[i].borderColor).alpha(opacity).rgbaString();\r\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, vm.bodyFontSize, vm.bodyFontSize);\r\n\t\r\n\t\t\t\t\t\t// Inner square\r\n\t\t\t\t\t\tctx.fillStyle = helpers.color(vm.labelColors[i].backgroundColor).alpha(opacity).rgbaString();\r\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, vm.bodyFontSize - 2, vm.bodyFontSize - 2);\r\n\t\r\n\t\t\t\t\t\tctx.fillStyle = helpers.color(vm.bodyColor).alpha(opacity).rgbaString(); // Return fill style for text\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Body Line\r\n\t\t\t\t\tctx.fillText(body, pt.x + (this._options.tooltips.mode !== 'single' ? (vm.bodyFontSize + 2) : 0), pt.y);\r\n\t\r\n\t\t\t\t\tpt.y += vm.bodyFontSize + vm.bodySpacing;\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t\t// After Body\r\n\t\t\t\thelpers.each(vm.afterBody, function(afterBody) {\r\n\t\t\t\t\tctx.fillText(afterBody, pt.x, pt.y);\r\n\t\t\t\t\tpt.y += vm.bodyFontSize;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tpt.y -= vm.bodySpacing; // Remove last body spacing\r\n\t\t\t},\r\n\t\t\tdrawFooter: function drawFooter(pt, vm, ctx, opacity) {\r\n\t\t\t\tif (vm.footer.length) {\r\n\t\t\t\t\tpt.y += vm.footerMarginTop;\r\n\t\r\n\t\t\t\t\tctx.textAlign = vm._footerAlign;\r\n\t\t\t\t\tctx.textBaseline = \"top\";\r\n\t\r\n\t\t\t\t\tvar footerColor = helpers.color(vm.footerColor);\r\n\t\t\t\t\tctx.fillStyle = footerColor.alpha(opacity * footerColor.alpha()).rgbString();\r\n\t\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\t\r\n\t\t\t\t\thelpers.each(vm.footer, function(footer) {\r\n\t\t\t\t\t\tctx.fillText(footer, pt.x, pt.y);\r\n\t\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdraw: function draw() {\r\n\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\tvar vm = this._view;\r\n\t\r\n\t\t\t\tif (vm.opacity === 0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar caretPadding = vm.caretPadding;\r\n\t\t\t\tvar tooltipSize = this.getTooltipSize(vm);\r\n\t\t\t\tvar pt = {\r\n\t\t\t\t\tx: vm.x,\r\n\t\t\t\t\ty: vm.y\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\r\n\t\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\t\r\n\t\t\t\tif (this._options.tooltips.enabled) {\r\n\t\t\t\t\t// Draw Background\r\n\t\t\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\r\n\t\t\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\r\n\t\t\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\r\n\t\t\t\t\tctx.fill();\r\n\t\r\n\t\t\t\t\t// Draw Caret\r\n\t\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity, caretPadding);\r\n\t\r\n\t\t\t\t\t// Draw Title, Body, and Footer\r\n\t\t\t\t\tpt.x += vm.xPadding;\r\n\t\t\t\t\tpt.y += vm.yPadding;\r\n\t\r\n\t\t\t\t\t// Titles\r\n\t\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\r\n\t\r\n\t\t\t\t\t// Body\r\n\t\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\r\n\t\r\n\t\t\t\t\t// Footer\r\n\t\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\n\n/***/ },\n\n/***/ 151:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart, moment) {\r\n\t\r\n\t  var helpers = Chart.helpers,\r\n\t    globalOpts = Chart.defaults.global;\r\n\t\r\n\t  globalOpts.elements.arc = {\r\n\t    backgroundColor: globalOpts.defaultColor,\r\n\t    borderColor: \"#fff\",\r\n\t    borderWidth: 2\r\n\t  };\r\n\t\r\n\t  Chart.elements.Arc = Chart.Element.extend({\r\n\t    inLabelRange: function(mouseX) {\r\n\t      var vm = this._view;\r\n\t\r\n\t      if (vm) {\r\n\t        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n\t      } else {\r\n\t        return false;\r\n\t      }\r\n\t    },\r\n\t    inRange: function(chartX, chartY) {\r\n\t      var vm = this._view;\r\n\t\r\n\t      if (vm) {\r\n\t        var pointRelativePosition = helpers.getAngleFromPoint(vm, {\r\n\t            x: chartX,\r\n\t            y: chartY\r\n\t          }),\r\n\t          angle = pointRelativePosition.angle,\r\n\t          distance = pointRelativePosition.distance;\r\n\t\r\n\t        //Sanitise angle range\r\n\t        var startAngle = vm.startAngle;\r\n\t        var endAngle = vm.endAngle;\r\n\t        while (endAngle < startAngle) {\r\n\t          endAngle += 2.0 * Math.PI;\r\n\t        }\r\n\t        while (angle > endAngle) {\r\n\t          angle -= 2.0 * Math.PI;\r\n\t        }\r\n\t        while (angle < startAngle) {\r\n\t          angle += 2.0 * Math.PI;\r\n\t        }\r\n\t\r\n\t        //Check if within the range of the open/close angle\r\n\t        var betweenAngles = (angle >= startAngle && angle <= endAngle),\r\n\t          withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\t\r\n\t        return (betweenAngles && withinRadius);\r\n\t      } else {\r\n\t        return false;\r\n\t      }\r\n\t    },\r\n\t    tooltipPosition: function() {\r\n\t      var vm = this._view;\r\n\t\r\n\t      var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\r\n\t        rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\t      return {\r\n\t        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n\t        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n\t      };\r\n\t    },\r\n\t    draw: function() {\r\n\t\r\n\t      var ctx = this._chart.ctx,\r\n\t        vm = this._view,\r\n\t        sA = vm.startAngle,\r\n\t        eA = vm.endAngle;\r\n\t\r\n\t      ctx.beginPath();\r\n\t\r\n\t      ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n\t      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\t\r\n\t      ctx.closePath();\r\n\t      ctx.strokeStyle = vm.borderColor;\r\n\t      ctx.lineWidth = vm.borderWidth;\r\n\t\r\n\t      ctx.fillStyle = vm.backgroundColor;\r\n\t\r\n\t      ctx.fill();\r\n\t      ctx.lineJoin = 'bevel';\r\n\t\r\n\t      if (vm.borderWidth) {\r\n\t        ctx.stroke();\r\n\t      }\r\n\t    }\r\n\t  });\r\n\t};\r\n\n\n/***/ },\n\n/***/ 152:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\r\n\t\tChart.defaults.global.elements.line = {\r\n\t\t\ttension: 0.4,\r\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\r\n\t\t\tborderWidth: 3,\r\n\t\t\tborderColor: globalDefaults.defaultColor,\r\n\t\t\tborderCapStyle: 'butt',\r\n\t\t\tborderDash: [],\r\n\t\t\tborderDashOffset: 0.0,\r\n\t\t\tborderJoinStyle: 'miter',\r\n\t\t\tfill: true // do we fill in the area between the line and its base axis\r\n\t\t};\r\n\t\r\n\t\tChart.elements.Line = Chart.Element.extend({\r\n\t\t\tlineToNextPoint: function(previousPoint, point, nextPoint, skipHandler, previousSkipHandler) {\r\n\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\r\n\t\t\t\tif (point._view.skip) {\r\n\t\t\t\t\tskipHandler.call(this, previousPoint, point, nextPoint);\r\n\t\t\t\t} else if (previousPoint._view.skip) {\r\n\t\t\t\t\tpreviousSkipHandler.call(this, previousPoint, point, nextPoint);\r\n\t\t\t\t} else if (point._view.tension === 0) {\r\n\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Line between points\r\n\t\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextX,\r\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextY,\r\n\t\t\t\t\t\tpoint._view.controlPointPreviousX,\r\n\t\t\t\t\t\tpoint._view.controlPointPreviousY,\r\n\t\t\t\t\t\tpoint._view.x,\r\n\t\t\t\t\t\tpoint._view.y\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tdraw: function() {\r\n\t\t\t\tvar _this = this;\r\n\t\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\tvar first = this._children[0];\r\n\t\t\t\tvar last = this._children[this._children.length - 1];\r\n\t\r\n\t\t\t\tfunction loopBackToStart(drawLineToCenter) {\r\n\t\t\t\t\tif (!first._view.skip && !last._view.skip) {\r\n\t\t\t\t\t\t// Draw a bezier line from last to first\r\n\t\t\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\t\t\tlast._view.controlPointNextX,\r\n\t\t\t\t\t\t\tlast._view.controlPointNextY,\r\n\t\t\t\t\t\t\tfirst._view.controlPointPreviousX,\r\n\t\t\t\t\t\t\tfirst._view.controlPointPreviousY,\r\n\t\t\t\t\t\t\tfirst._view.x,\r\n\t\t\t\t\t\t\tfirst._view.y\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else if (drawLineToCenter) {\r\n\t\t\t\t\t\t// Go to center\r\n\t\t\t\t\t\tctx.lineTo(_this._view.scaleZero.x, _this._view.scaleZero.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.save();\r\n\t\r\n\t\t\t\t// If we had points and want to fill this line, do so.\r\n\t\t\t\tif (this._children.length > 0 && vm.fill) {\r\n\t\t\t\t\t// Draw the background first (so the border is always on top)\r\n\t\t\t\t\tctx.beginPath();\r\n\t\r\n\t\t\t\t\thelpers.each(this._children, function(point, index) {\r\n\t\t\t\t\t\tvar previous = helpers.previousItem(this._children, index);\r\n\t\t\t\t\t\tvar next = helpers.nextItem(this._children, index);\r\n\t\r\n\t\t\t\t\t\t// First point moves to it's starting position no matter what\r\n\t\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\t\tif (this._loop) {\r\n\t\t\t\t\t\t\t\tctx.moveTo(vm.scaleZero.x, vm.scaleZero.y);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.moveTo(point._view.x, vm.scaleZero);\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif (point._view.skip) {\r\n\t\t\t\t\t\t\t\tif (!this._loop) {\r\n\t\t\t\t\t\t\t\t\tctx.moveTo(next._view.x, this._view.scaleZero);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.lineToNextPoint(previous, point, next, function(previousPoint, point, nextPoint) {\r\n\t\t\t\t\t\t\t\tif (this._loop) {\r\n\t\t\t\t\t\t\t\t\t// Go to center\r\n\t\t\t\t\t\t\t\t\tctx.lineTo(this._view.scaleZero.x, this._view.scaleZero.y);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tctx.lineTo(previousPoint._view.x, this._view.scaleZero);\r\n\t\t\t\t\t\t\t\t\tctx.moveTo(nextPoint._view.x, this._view.scaleZero);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, function(previousPoint, point) {\r\n\t\t\t\t\t\t\t\t// If we skipped the last point, draw a line to ourselves so that the fill is nice\r\n\t\t\t\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\r\n\t\t\t\t\t// For radial scales, loop back around to the first point\r\n\t\t\t\t\tif (this._loop) {\r\n\t\t\t\t\t\tloopBackToStart(true);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\r\n\t\t\t\t\t\tctx.lineTo(this._children[this._children.length - 1]._view.x, vm.scaleZero);\r\n\t\t\t\t\t\tctx.lineTo(this._children[0]._view.x, vm.scaleZero);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\r\n\t\t\t\t// Now draw the line between all the points with any borders\r\n\t\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\t\r\n\t\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n\t\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n\t\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n\t\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\t\t\t\tctx.beginPath();\r\n\t\r\n\t\t\t\thelpers.each(this._children, function(point, index) {\r\n\t\t\t\t\tvar previous = helpers.previousItem(this._children, index);\r\n\t\t\t\t\tvar next = helpers.nextItem(this._children, index);\r\n\t\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\tctx.moveTo(point._view.x, point._view.y);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.lineToNextPoint(previous, point, next, function(previousPoint, point, nextPoint) {\r\n\t\t\t\t\t\t\tctx.moveTo(nextPoint._view.x, nextPoint._view.y);\r\n\t\t\t\t\t\t}, function(previousPoint, point) {\r\n\t\t\t\t\t\t\t// If we skipped the last point, move up to our point preventing a line from being drawn\r\n\t\t\t\t\t\t\tctx.moveTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t\tif (this._loop && this._children.length > 0) {\r\n\t\t\t\t\tloopBackToStart();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.stroke();\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t});\r\n\t};\n\n/***/ },\n\n/***/ 153:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers,\r\n\t\t\tglobalOpts = Chart.defaults.global,\r\n\t\t\tdefaultColor = globalOpts.defaultColor;\r\n\t\r\n\t\tglobalOpts.elements.point = {\r\n\t\t\tradius: 3,\r\n\t\t\tpointStyle: 'circle',\r\n\t\t\tbackgroundColor: defaultColor,\r\n\t\t\tborderWidth: 1,\r\n\t\t\tborderColor: defaultColor,\r\n\t\t\t// Hover\r\n\t\t\thitRadius: 1,\r\n\t\t\thoverRadius: 4,\r\n\t\t\thoverBorderWidth: 1\r\n\t\t};\r\n\t\r\n\t\tChart.elements.Point = Chart.Element.extend({\r\n\t\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n\t\t\t},\r\n\t\t\tinLabelRange: function(mouseX) {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\r\n\t\t\t},\r\n\t\t\ttooltipPosition: function() {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: vm.x,\r\n\t\t\t\t\ty: vm.y,\r\n\t\t\t\t\tpadding: vm.radius + vm.borderWidth\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tdraw: function() {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\tvar pointStyle = vm.pointStyle;\r\n\t\t\t\tvar radius = vm.radius;\r\n\t\t\t\tvar x = vm.x;\r\n\t\t\t\tvar y = vm.y;\r\n\t\t\t\tvar type, edgeLength, xOffset, yOffset, height, size;\r\n\t\r\n\t\t\t\tif (vm.skip) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (typeof pointStyle === 'object') {\r\n\t\t\t\t\ttype = pointStyle.toString();\r\n\t\t\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n\t\t\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (isNaN(radius) || radius <= 0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\r\n\t\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\r\n\t\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\t\r\n\t\t\t\tswitch (pointStyle) {\r\n\t\t\t\t// Default includes circle\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'triangle':\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\r\n\t\t\t\t\theight = edgeLength * Math.sqrt(3) / 2;\r\n\t\t\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n\t\t\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n\t\t\t\t\tctx.lineTo(x, y - 2 * height / 3);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rect':\r\n\t\t\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\t\t\tctx.fillRect(x - size, y - size, 2 * size,  2 * size);\r\n\t\t\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rectRot':\r\n\t\t\t\t\tctx.translate(x, y);\r\n\t\t\t\t\tctx.rotate(Math.PI / 4);\r\n\t\t\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\t\t\tctx.fillRect(-size, -size, 2 * size, 2 * size);\r\n\t\t\t\t\tctx.strokeRect(-size, -size, 2 * size, 2 * size);\r\n\t\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'cross':\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'crossRot':\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'star':\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'line':\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'dash':\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x, y);\r\n\t\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\n\n/***/ },\n\n/***/ 154:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers,\r\n\t\t\tglobalOpts = Chart.defaults.global;\r\n\t\r\n\t\tglobalOpts.elements.rectangle = {\r\n\t\t\tbackgroundColor: globalOpts.defaultColor,\r\n\t\t\tborderWidth: 0,\r\n\t\t\tborderColor: globalOpts.defaultColor,\r\n\t\t\tborderSkipped: 'bottom'\r\n\t\t};\r\n\t\r\n\t\tChart.elements.Rectangle = Chart.Element.extend({\r\n\t\t\tdraw: function() {\r\n\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\tvar vm = this._view;\r\n\t\r\n\t\t\t\tvar halfWidth = vm.width / 2,\r\n\t\t\t\t\tleftX = vm.x - halfWidth,\r\n\t\t\t\t\trightX = vm.x + halfWidth,\r\n\t\t\t\t\ttop = vm.base - (vm.base - vm.y),\r\n\t\t\t\t\thalfStroke = vm.borderWidth / 2;\r\n\t\r\n\t\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\tleftX += halfStroke;\r\n\t\t\t\t\trightX -= halfStroke;\r\n\t\t\t\t\ttop += halfStroke;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\t\tctx.lineWidth = vm.borderWidth;\r\n\t\r\n\t\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t\t// | 1 2 |\r\n\t\t\t\t// | 0 3 |\r\n\t\t\t\tvar corners = [\r\n\t\t\t\t\t[leftX, vm.base],\r\n\t\t\t\t\t[leftX, top],\r\n\t\t\t\t\t[rightX, top],\r\n\t\t\t\t\t[rightX, vm.base]\r\n\t\t\t\t];\r\n\t\r\n\t\t\t\t// Find first (starting) corner with fallback to 'bottom' \r\n\t\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\r\n\t\t\t\tif (startCorner === -1)\r\n\t\t\t\t\tstartCorner = 0;\r\n\t\r\n\t\t\t\tfunction cornerAt(index) {\r\n\t\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\t\r\n\t\t\t\tctx.fill();\r\n\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\theight: function() {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn vm.base - vm.y;\r\n\t\t\t},\r\n\t\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn vm ? \r\n\t\t\t\t\t\t(vm.y < vm.base ? \r\n\t\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.y && mouseY <= vm.base) :\r\n\t\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.base && mouseY <= vm.y)) :\r\n\t\t\t\t\t\tfalse;\r\n\t\t\t},\r\n\t\t\tinLabelRange: function(mouseX) {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn vm ? (mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) : false;\r\n\t\t\t},\r\n\t\t\ttooltipPosition: function() {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: vm.x,\r\n\t\t\t\t\ty: vm.y\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t};\n\n/***/ },\n\n/***/ 155:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\t// Default config for a category scale\r\n\t\tvar defaultConfig = {\r\n\t\t\tposition: \"bottom\"\r\n\t\t};\r\n\t\r\n\t\tvar DatasetScale = Chart.Scale.extend({\r\n\t\t\t// Implement this so that \r\n\t\t\tdetermineDataLimits: function() {\r\n\t\t\t\tthis.minIndex = 0;\r\n\t\t\t\tthis.maxIndex = this.chart.data.labels.length - 1;\r\n\t\t\t\tvar findIndex;\r\n\t\r\n\t\t\t\tif (this.options.ticks.min !== undefined) {\r\n\t\t\t\t\t// user specified min value\r\n\t\t\t\t\tfindIndex = helpers.indexOf(this.chart.data.labels, this.options.ticks.min);\r\n\t\t\t\t\tthis.minIndex = findIndex !== -1 ? findIndex : this.minIndex;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (this.options.ticks.max !== undefined) {\r\n\t\t\t\t\t// user specified max value\r\n\t\t\t\t\tfindIndex = helpers.indexOf(this.chart.data.labels, this.options.ticks.max);\r\n\t\t\t\t\tthis.maxIndex = findIndex !== -1 ? findIndex : this.maxIndex;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.min = this.chart.data.labels[this.minIndex];\r\n\t\t\t\tthis.max = this.chart.data.labels[this.maxIndex];\r\n\t\t\t},\r\n\t\r\n\t\t\tbuildTicks: function(index) {\r\n\t\t\t\t// If we are viewing some subset of labels, slice the original array\r\n\t\t\t\tthis.ticks = (this.minIndex === 0 && this.maxIndex === this.chart.data.labels.length - 1) ? this.chart.data.labels : this.chart.data.labels.slice(this.minIndex, this.maxIndex + 1);\r\n\t\t\t},\r\n\t\r\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\t\treturn this.ticks[index];\r\n\t\t\t},\r\n\t\r\n\t\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t\t// 1 is added because we need the length but we have the indexes\r\n\t\t\t\tvar offsetAmt = Math.max((this.maxIndex + 1 - this.minIndex - ((this.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\t\tvar valueWidth = innerWidth / offsetAmt;\r\n\t\t\t\t\tvar widthOffset = (valueWidth * (index - this.minIndex)) + this.paddingLeft;\r\n\t\r\n\t\t\t\t\tif (this.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\t\t\twidthOffset += (valueWidth / 2);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn this.left + Math.round(widthOffset);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\t\tvar valueHeight = innerHeight / offsetAmt;\r\n\t\t\t\t\tvar heightOffset = (valueHeight * (index - this.minIndex)) + this.paddingTop;\r\n\t\r\n\t\t\t\t\tif (this.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\t\t\theightOffset += (valueHeight / 2);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn this.top + Math.round(heightOffset);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\r\n\t\t\t},\r\n\t\t\tgetValueForPixel: function(pixel) {\r\n\t\t\t\tvar value\r\n\t;\t\t\tvar offsetAmt = Math.max((this.ticks.length - ((this.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\t\tvar horz = this.isHorizontal();\r\n\t\t\t\tvar innerDimension = horz ? this.width - (this.paddingLeft + this.paddingRight) : this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\tvar valueDimension = innerDimension / offsetAmt;\r\n\t\r\n\t\t\t\tif (this.options.gridLines.offsetGridLines) {\r\n\t\t\t\t\tpixel -= (valueDimension / 2);\r\n\t\t\t\t}\r\n\t\t\t\tpixel -= horz ? this.paddingLeft : this.paddingTop;\r\n\t\r\n\t\t\t\tif (pixel <= 0) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = Math.round(pixel / valueDimension);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t\tChart.scaleService.registerScaleType(\"category\", DatasetScale, defaultConfig);\r\n\t\r\n\t};\n\n/***/ },\n\n/***/ 156:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tvar defaultConfig = {\r\n\t\t\tposition: \"left\",\r\n\t\t\tticks: {\r\n\t\t\t\tcallback: function(tickValue, index, ticks) {\r\n\t\t\t\t\t// If we have lots of ticks, don't use the ones\r\n\t\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\t\r\n\t\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n\t\t\t\t\tif (Math.abs(delta) > 1) {\r\n\t\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\r\n\t\t\t\t\t\t\t// not an integer\r\n\t\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\r\n\t\t\t\t\tvar tickString = '';\r\n\t\r\n\t\t\t\t\tif (tickValue !== 0) {\r\n\t\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\r\n\t\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n\t\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttickString = '0'; // never show decimal places for 0\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn tickString;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tvar LinearScale = Chart.Scale.extend({\r\n\t\t\tdetermineDataLimits: function() {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar opts = _this.options;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t\tvar chart = _this.chart;\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\tvar datasets = data.datasets;\r\n\t\t\t\tvar isHorizontal = _this.isHorizontal();\r\n\t\r\n\t\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\t\treturn isHorizontal ? meta.xAxisID === _this.id : meta.yAxisID === _this.id;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// First Calculate the range\r\n\t\t\t\t_this.min = null;\r\n\t\t\t\t_this.max = null;\r\n\t\r\n\t\t\t\tif (opts.stacked) {\r\n\t\t\t\t\tvar valuesPerType = {};\r\n\t\t\t\t\tvar hasPositiveValues = false;\r\n\t\t\t\t\tvar hasNegativeValues = false;\r\n\t\r\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\r\n\t\t\t\t\t\t\tvaluesPerType[meta.type] = {\r\n\t\t\t\t\t\t\t\tpositiveValues: [],\r\n\t\t\t\t\t\t\t\tnegativeValues: []\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// Store these per type\r\n\t\t\t\t\t\tvar positiveValues = valuesPerType[meta.type].positiveValues;\r\n\t\t\t\t\t\tvar negativeValues = valuesPerType[meta.type].negativeValues;\r\n\t\r\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\t\tvar value = +_this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\r\n\t\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\r\n\t\r\n\t\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\t\t\t\t\thasNegativeValues = true;\r\n\t\t\t\t\t\t\t\t\t\tnegativeValues[index] += value;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\thasPositiveValues = true;\r\n\t\t\t\t\t\t\t\t\t\tpositiveValues[index] += value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\r\n\t\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n\t\t\t\t\t\tvar minVal = helpers.min(values);\r\n\t\t\t\t\t\tvar maxVal = helpers.max(values);\r\n\t\t\t\t\t\t_this.min = _this.min === null ? minVal : Math.min(_this.min, minVal);\r\n\t\t\t\t\t\t_this.max = _this.max === null ? maxVal : Math.max(_this.max, maxVal);\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\t\tvar value = +_this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif (_this.min === null) {\r\n\t\t\t\t\t\t\t\t\t_this.min = value;\r\n\t\t\t\t\t\t\t\t} else if (value < _this.min) {\r\n\t\t\t\t\t\t\t\t\t_this.min = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif (_this.max === null) {\r\n\t\t\t\t\t\t\t\t\t_this.max = value;\r\n\t\t\t\t\t\t\t\t} else if (value > _this.max) {\r\n\t\t\t\t\t\t\t\t\t_this.max = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n\t\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\r\n\t\t\t\t// axis, they can manually override it\r\n\t\t\t\tif (tickOpts.beginAtZero) {\r\n\t\t\t\t\tvar minSign = helpers.sign(_this.min);\r\n\t\t\t\t\tvar maxSign = helpers.sign(_this.max);\r\n\t\r\n\t\t\t\t\tif (minSign < 0 && maxSign < 0) {\r\n\t\t\t\t\t\t// move the top up to 0\r\n\t\t\t\t\t\t_this.max = 0;\r\n\t\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\r\n\t\t\t\t\t\t// move the botttom down to 0\r\n\t\t\t\t\t\t_this.min = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (tickOpts.min !== undefined) {\r\n\t\t\t\t\t_this.min = tickOpts.min;\r\n\t\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\r\n\t\t\t\t\t_this.min = Math.min(_this.min, tickOpts.suggestedMin);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (tickOpts.max !== undefined) {\r\n\t\t\t\t\t_this.max = tickOpts.max;\r\n\t\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\r\n\t\t\t\t\t_this.max = Math.max(_this.max, tickOpts.suggestedMax);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (_this.min === _this.max) {\r\n\t\t\t\t\t_this.max++;\r\n\t\r\n\t\t\t\t\tif (!tickOpts.beginAtZero) {\r\n\t\t\t\t\t\t_this.min--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbuildTicks: function() {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar opts = _this.options;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\t\t\tvar isHorizontal = _this.isHorizontal();\r\n\t\r\n\t\t\t\tvar ticks = _this.ticks = [];\r\n\t\r\n\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t\t// the graph\r\n\t\r\n\t\t\t\tvar maxTicks;\r\n\t\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(_this.width / 50));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\r\n\t\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(_this.height / (2 * tickFontSize)));\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Make sure we always have at least 2 ticks\r\n\t\t\t\tmaxTicks = Math.max(2, maxTicks);\r\n\t\r\n\t\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n\t\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n\t\t\t\t// for details.\r\n\t\r\n\t\t\t\tvar spacing;\r\n\t\t\t\tvar fixedStepSizeSet = (tickOpts.fixedStepSize && tickOpts.fixedStepSize > 0) || (tickOpts.stepSize && tickOpts.stepSize > 0);\r\n\t\t\t\tif (fixedStepSizeSet) {\r\n\t\t\t\t\tspacing = getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar niceRange = helpers.niceNum(_this.max - _this.min, false);\r\n\t\t\t\t\tspacing = helpers.niceNum(niceRange / (maxTicks - 1), true);\r\n\t\t\t\t}\r\n\t\t\t\tvar niceMin = Math.floor(_this.min / spacing) * spacing;\r\n\t\t\t\tvar niceMax = Math.ceil(_this.max / spacing) * spacing;\r\n\t\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\r\n\t\r\n\t\t\t\t// If very close to our rounded value, use it.\r\n\t\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n\t\t\t\t\tnumSpaces = Math.round(numSpaces);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnumSpaces = Math.ceil(numSpaces);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Put the values into the ticks array\r\n\t\t\t\tticks.push(tickOpts.min !== undefined ? tickOpts.min : niceMin);\r\n\t\t\t\tfor (var j = 1; j < numSpaces; ++j) {\r\n\t\t\t\t\tticks.push(niceMin + (j * spacing));\r\n\t\t\t\t}\r\n\t\t\t\tticks.push(tickOpts.max !== undefined ? tickOpts.max : niceMax);\r\n\t\r\n\t\t\t\tif (!isHorizontal) {\r\n\t\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\t\tticks.reverse();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t\t// range of the scale\r\n\t\t\t\t_this.max = helpers.max(ticks);\r\n\t\t\t\t_this.min = helpers.min(ticks);\r\n\t\r\n\t\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\t\tticks.reverse();\r\n\t\r\n\t\t\t\t\t_this.start = _this.max;\r\n\t\t\t\t\t_this.end = _this.min;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_this.start = _this.min;\r\n\t\t\t\t\t_this.end = _this.max;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t\t},\r\n\t\t\tconvertTicksToLabels: function() {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\t_this.ticksAsNumbers = _this.ticks.slice();\r\n\t\t\t\t_this.zeroLineIndex = _this.ticks.indexOf(0);\r\n\t\r\n\t\t\t\tChart.Scale.prototype.convertTicksToLabels.call(_this);\r\n\t\t\t},\r\n\t\t\t// Utils\r\n\t\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t\t// This must be called after fit has been run so that\r\n\t\t\t\t//      this.left, this.top, this.right, and this.bottom have been defined\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar paddingLeft = _this.paddingLeft;\r\n\t\t\t\tvar paddingBottom = _this.paddingBottom;\r\n\t\t\t\tvar start = _this.start;\r\n\t\r\n\t\t\t\tvar rightValue = +_this.getRightValue(value);\r\n\t\t\t\tvar pixel;\r\n\t\t\t\tvar innerDimension;\r\n\t\t\t\tvar range = _this.end - start;\r\n\t\r\n\t\t\t\tif (_this.isHorizontal()) {\r\n\t\t\t\t\tinnerDimension = _this.width - (paddingLeft + _this.paddingRight);\r\n\t\t\t\t\tpixel = _this.left + (innerDimension / range * (rightValue - start));\r\n\t\t\t\t\treturn Math.round(pixel + paddingLeft);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinnerDimension = _this.height - (_this.paddingTop + paddingBottom);\r\n\t\t\t\t\tpixel = (_this.bottom - paddingBottom) - (innerDimension / range * (rightValue - start));\r\n\t\t\t\t\treturn Math.round(pixel);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetValueForPixel: function(pixel) {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar isHorizontal = _this.isHorizontal();\r\n\t\t\t\tvar paddingLeft = _this.paddingLeft;\r\n\t\t\t\tvar paddingBottom = _this.paddingBottom;\r\n\t\t\t\tvar innerDimension = isHorizontal ? _this.width - (paddingLeft + _this.paddingRight) : _this.height - (_this.paddingTop + paddingBottom);\r\n\t\t\t\tvar offset = (isHorizontal ? pixel - _this.left - paddingLeft : _this.bottom - paddingBottom - pixel) / innerDimension;\r\n\t\t\t\treturn _this.start + ((_this.end - _this.start) * offset);\r\n\t\t\t},\r\n\t\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index], null, null, includeOffset);\r\n\t\t\t}\r\n\t\t});\r\n\t\tChart.scaleService.registerScaleType(\"linear\", LinearScale, defaultConfig);\r\n\t\r\n\t};\n\n/***/ },\n\n/***/ 157:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tvar defaultConfig = {\r\n\t\t\tposition: \"left\",\r\n\t\r\n\t\t\t// label settings\r\n\t\t\tticks: {\r\n\t\t\t\tcallback: function(value, index, arr) {\r\n\t\t\t\t\tvar remain = value / (Math.pow(10, Math.floor(helpers.log10(value))));\r\n\t\r\n\t\t\t\t\tif (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === arr.length - 1) {\r\n\t\t\t\t\t\treturn value.toExponential();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tvar LogarithmicScale = Chart.Scale.extend({\r\n\t\t\tdetermineDataLimits: function() {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar opts = _this.options;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t\tvar chart = _this.chart;\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\tvar datasets = data.datasets;\r\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\t\t\tvar isHorizontal = _this.isHorizontal();\r\n\t\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\t\treturn isHorizontal ? meta.xAxisID === _this.id : meta.yAxisID === _this.id;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Calculate Range\r\n\t\t\t\t_this.min = null;\r\n\t\t\t\t_this.max = null;\r\n\t\r\n\t\t\t\tif (opts.stacked) {\r\n\t\t\t\t\tvar valuesPerType = {};\r\n\t\r\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\r\n\t\t\t\t\t\t\t\tvaluesPerType[meta.type] = [];\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\t\tvar values = valuesPerType[meta.type];\r\n\t\t\t\t\t\t\t\tvar value = +_this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\r\n\t\r\n\t\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\t\tvalues[index] = 100;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\r\n\t\t\t\t\t\t\t\t\tvalues[index] += value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\r\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\r\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\r\n\t\t\t\t\t\t_this.min = _this.min === null ? minVal : Math.min(_this.min, minVal);\r\n\t\t\t\t\t\t_this.max = _this.max === null ? maxVal : Math.max(_this.max, maxVal);\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\t\tvar value = +_this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif (_this.min === null) {\r\n\t\t\t\t\t\t\t\t\t_this.min = value;\r\n\t\t\t\t\t\t\t\t} else if (value < _this.min) {\r\n\t\t\t\t\t\t\t\t\t_this.min = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif (_this.max === null) {\r\n\t\t\t\t\t\t\t\t\t_this.max = value;\r\n\t\t\t\t\t\t\t\t} else if (value > _this.max) {\r\n\t\t\t\t\t\t\t\t\t_this.max = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_this.min = getValueOrDefault(tickOpts.min, _this.min);\r\n\t\t\t\t_this.max = getValueOrDefault(tickOpts.max, _this.max);\r\n\t\r\n\t\t\t\tif (_this.min === _this.max) {\r\n\t\t\t\t\tif (_this.min !== 0 && _this.min !== null) {\r\n\t\t\t\t\t\t_this.min = Math.pow(10, Math.floor(helpers.log10(_this.min)) - 1);\r\n\t\t\t\t\t\t_this.max = Math.pow(10, Math.floor(helpers.log10(_this.max)) + 1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t_this.min = 1;\r\n\t\t\t\t\t\t_this.max = 10;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbuildTicks: function() {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar opts = _this.options;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\r\n\t\t\t\t// Reset the ticks array. Later on, we will draw a grid line at these positions\r\n\t\t\t\t// The array simply contains the numerical value of the spots where ticks will be\r\n\t\t\t\tvar ticks = _this.ticks = [];\r\n\t\r\n\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t\t// the graph\r\n\t\r\n\t\t\t\tvar tickVal = getValueOrDefault(tickOpts.min, Math.pow(10, Math.floor(helpers.log10(_this.min))));\r\n\t\r\n\t\t\t\twhile (tickVal < _this.max) {\r\n\t\t\t\t\tticks.push(tickVal);\r\n\t\r\n\t\t\t\t\tvar exp = Math.floor(helpers.log10(tickVal));\r\n\t\t\t\t\tvar significand = Math.floor(tickVal / Math.pow(10, exp)) + 1;\r\n\t\r\n\t\t\t\t\tif (significand === 10) {\r\n\t\t\t\t\t\tsignificand = 1;\r\n\t\t\t\t\t\t++exp;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar lastTick = getValueOrDefault(tickOpts.max, tickVal);\r\n\t\t\t\tticks.push(lastTick);\r\n\t\r\n\t\t\t\tif (!_this.isHorizontal()) {\r\n\t\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\t\tticks.reverse();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t\t// range of the scale\r\n\t\t\t\t_this.max = helpers.max(ticks);\r\n\t\t\t\t_this.min = helpers.min(ticks);\r\n\t\r\n\t\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\t\tticks.reverse();\r\n\t\r\n\t\t\t\t\t_this.start = _this.max;\r\n\t\t\t\t\t_this.end = _this.min;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_this.start = _this.min;\r\n\t\t\t\t\t_this.end = _this.max;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tconvertTicksToLabels: function() {\r\n\t\t\t\tthis.tickValues = this.ticks.slice();\r\n\t\r\n\t\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\r\n\t\t\t},\r\n\t\t\t// Get the correct tooltip label\r\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t\t},\r\n\t\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\t\treturn this.getPixelForValue(this.tickValues[index], null, null, includeOffset);\r\n\t\t\t},\r\n\t\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar innerDimension;\r\n\t\t\t\tvar pixel;\r\n\t\r\n\t\t\t\tvar start = _this.start;\r\n\t\t\t\tvar newVal = +_this.getRightValue(value);\r\n\t\t\t\tvar range = helpers.log10(_this.end) - helpers.log10(start);\r\n\t\t\t\tvar paddingTop = _this.paddingTop;\r\n\t\t\t\tvar paddingBottom = _this.paddingBottom;\r\n\t\t\t\tvar paddingLeft = _this.paddingLeft;\r\n\t\r\n\t\t\t\tif (_this.isHorizontal()) {\r\n\t\r\n\t\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\t\tpixel = _this.left + paddingLeft;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tinnerDimension = _this.width - (paddingLeft + _this.paddingRight);\r\n\t\t\t\t\t\tpixel = _this.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t\t\tpixel += paddingLeft;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Bottom - top since pixels increase downard on a screen\r\n\t\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\t\tpixel = _this.top + paddingTop;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tinnerDimension = _this.height - (paddingTop + paddingBottom);\r\n\t\t\t\t\t\tpixel = (_this.bottom - paddingBottom) - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn pixel;\r\n\t\t\t},\r\n\t\t\tgetValueForPixel: function(pixel) {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar offset;\r\n\t\t\t\tvar range = helpers.log10(_this.end) - helpers.log10(_this.start);\r\n\t\t\t\tvar value;\r\n\t\t\t\tvar innerDimension;\r\n\t\r\n\t\t\t\tif (_this.isHorizontal()) {\r\n\t\t\t\t\tinnerDimension = _this.width - (_this.paddingLeft + _this.paddingRight);\r\n\t\t\t\t\tvalue = _this.start * Math.pow(10, (pixel - _this.left - _this.paddingLeft) * range / innerDimension);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinnerDimension = _this.height - (_this.paddingTop + _this.paddingBottom);\r\n\t\t\t\t\tvalue = Math.pow(10, (_this.bottom - _this.paddingBottom - pixel) * range / innerDimension) / _this.start;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t});\r\n\t\tChart.scaleService.registerScaleType(\"logarithmic\", LogarithmicScale, defaultConfig);\r\n\t\r\n\t};\n\n/***/ },\n\n/***/ 158:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\r\n\t\tvar defaultConfig = {\r\n\t\t\tdisplay: true,\r\n\t\r\n\t\t\t//Boolean - Whether to animate scaling the chart from the centre\r\n\t\t\tanimate: true,\r\n\t\t\tlineArc: false,\r\n\t\t\tposition: \"chartArea\",\r\n\t\r\n\t\t\tangleLines: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tcolor: \"rgba(0, 0, 0, 0.1)\",\r\n\t\t\t\tlineWidth: 1\r\n\t\t\t},\r\n\t\r\n\t\t\t// label settings\r\n\t\t\tticks: {\r\n\t\t\t\t//Boolean - Show a backdrop to the scale label\r\n\t\t\t\tshowLabelBackdrop: true,\r\n\t\r\n\t\t\t\t//String - The colour of the label backdrop\r\n\t\t\t\tbackdropColor: \"rgba(255,255,255,0.75)\",\r\n\t\r\n\t\t\t\t//Number - The backdrop padding above & below the label in pixels\r\n\t\t\t\tbackdropPaddingY: 2,\r\n\t\r\n\t\t\t\t//Number - The backdrop padding to the side of the label in pixels\r\n\t\t\t\tbackdropPaddingX: 2\r\n\t\t\t},\r\n\t\r\n\t\t\tpointLabels: {\r\n\t\t\t\t//Number - Point label font size in pixels\r\n\t\t\t\tfontSize: 10,\r\n\t\r\n\t\t\t\t//Function - Used to convert point labels\r\n\t\t\t\tcallback: function(label) {\r\n\t\t\t\t\treturn label;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tvar LinearRadialScale = Chart.Scale.extend({\r\n\t\t\tgetValueCount: function() {\r\n\t\t\t\treturn this.chart.data.labels.length;\r\n\t\t\t},\r\n\t\t\tsetDimensions: function() {\r\n\t\t\t\tvar options = this.options;\r\n\t\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\t\tthis.width = this.maxWidth;\r\n\t\t\t\tthis.height = this.maxHeight;\r\n\t\t\t\tthis.xCenter = Math.round(this.width / 2);\r\n\t\t\t\tthis.yCenter = Math.round(this.height / 2);\r\n\t\r\n\t\t\t\tvar minSize = helpers.min([this.height, this.width]);\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(options.ticks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tthis.drawingArea = (options.display) ? (minSize / 2) - (tickFontSize / 2 + options.ticks.backdropPaddingY) : (minSize / 2);\r\n\t\t\t},\r\n\t\t\tdetermineDataLimits: function() {\r\n\t\t\t\tthis.min = null;\r\n\t\t\t\tthis.max = null;\r\n\t\r\n\t\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tif (this.chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\tvar meta = this.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif (this.min === null) {\r\n\t\t\t\t\t\t\t\tthis.min = value;\r\n\t\t\t\t\t\t\t} else if (value < this.min) {\r\n\t\t\t\t\t\t\t\tthis.min = value;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif (this.max === null) {\r\n\t\t\t\t\t\t\t\tthis.max = value;\r\n\t\t\t\t\t\t\t} else if (value > this.max) {\r\n\t\t\t\t\t\t\t\tthis.max = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n\t\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\r\n\t\t\t\t// axis, they can manually override it\r\n\t\t\t\tif (this.options.ticks.beginAtZero) {\r\n\t\t\t\t\tvar minSign = helpers.sign(this.min);\r\n\t\t\t\t\tvar maxSign = helpers.sign(this.max);\r\n\t\r\n\t\t\t\t\tif (minSign < 0 && maxSign < 0) {\r\n\t\t\t\t\t\t// move the top up to 0\r\n\t\t\t\t\t\tthis.max = 0;\r\n\t\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\r\n\t\t\t\t\t\t// move the botttom down to 0\r\n\t\t\t\t\t\tthis.min = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (this.options.ticks.min !== undefined) {\r\n\t\t\t\t\tthis.min = this.options.ticks.min;\r\n\t\t\t\t} else if (this.options.ticks.suggestedMin !== undefined) {\r\n\t\t\t\t\tthis.min = Math.min(this.min, this.options.ticks.suggestedMin);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (this.options.ticks.max !== undefined) {\r\n\t\t\t\t\tthis.max = this.options.ticks.max;\r\n\t\t\t\t} else if (this.options.ticks.suggestedMax !== undefined) {\r\n\t\t\t\t\tthis.max = Math.max(this.max, this.options.ticks.suggestedMax);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (this.min === this.max) {\r\n\t\t\t\t\tthis.min--;\r\n\t\t\t\t\tthis.max++;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbuildTicks: function() {\r\n\t\r\n\t\r\n\t\t\t\tthis.ticks = [];\r\n\t\r\n\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t\t// the graph\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar maxTicks = Math.min(this.options.ticks.maxTicksLimit ? this.options.ticks.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\r\n\t\t\t\tmaxTicks = Math.max(2, maxTicks); // Make sure we always have at least 2 ticks\r\n\t\r\n\t\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n\t\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n\t\t\t\t// for details.\r\n\t\r\n\t\t\t\tvar niceRange = helpers.niceNum(this.max - this.min, false);\r\n\t\t\t\tvar spacing = helpers.niceNum(niceRange / (maxTicks - 1), true);\r\n\t\t\t\tvar niceMin = Math.floor(this.min / spacing) * spacing;\r\n\t\t\t\tvar niceMax = Math.ceil(this.max / spacing) * spacing;\r\n\t\r\n\t\t\t\tvar numSpaces = Math.ceil((niceMax - niceMin) / spacing);\r\n\t\r\n\t\t\t\t// Put the values into the ticks array\r\n\t\t\t\tthis.ticks.push(this.options.ticks.min !== undefined ? this.options.ticks.min : niceMin);\r\n\t\t\t\tfor (var j = 1; j < numSpaces; ++j) {\r\n\t\t\t\t\tthis.ticks.push(niceMin + (j * spacing));\r\n\t\t\t\t}\r\n\t\t\t\tthis.ticks.push(this.options.ticks.max !== undefined ? this.options.ticks.max : niceMax);\r\n\t\r\n\t\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t\t// range of the scale\r\n\t\t\t\tthis.max = helpers.max(this.ticks);\r\n\t\t\t\tthis.min = helpers.min(this.ticks);\r\n\t\r\n\t\t\t\tif (this.options.ticks.reverse) {\r\n\t\t\t\t\tthis.ticks.reverse();\r\n\t\r\n\t\t\t\t\tthis.start = this.max;\r\n\t\t\t\t\tthis.end = this.min;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.start = this.min;\r\n\t\t\t\t\tthis.end = this.max;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.zeroLineIndex = this.ticks.indexOf(0);\r\n\t\t\t},\r\n\t\t\tconvertTicksToLabels: function() {\r\n\t\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\r\n\t\r\n\t\t\t\t// Point labels\r\n\t\t\t\tthis.pointLabels = this.chart.data.labels.map(this.options.pointLabels.callback, this);\r\n\t\t\t},\r\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t\t},\r\n\t\t\tfit: function() {\r\n\t\t\t\t/*\r\n\t\t\t\t * Right, this is really confusing and there is a lot of maths going on here\r\n\t\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\r\n\t\t\t\t *\r\n\t\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\r\n\t\t\t\t *\r\n\t\t\t\t * Solution:\r\n\t\t\t\t *\r\n\t\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\r\n\t\t\t\t * at each index we check if the text overlaps.\r\n\t\t\t\t *\r\n\t\t\t\t * Where it does, we store that angle and that index.\r\n\t\t\t\t *\r\n\t\t\t\t * After finding the largest index and angle we calculate how much we need to remove\r\n\t\t\t\t * from the shape radius to move the point inwards by that x.\r\n\t\t\t\t *\r\n\t\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\r\n\t\t\t\t * along with labels.\r\n\t\t\t\t *\r\n\t\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\r\n\t\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\r\n\t\t\t\t *\r\n\t\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\r\n\t\t\t\t * and position it in the most space efficient manner\r\n\t\t\t\t *\r\n\t\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\r\n\t\t\t\t */\r\n\t\r\n\t\t\t\tvar pointLabels = this.options.pointLabels;\r\n\t\t\t\tvar pointLabelFontSize = helpers.getValueOrDefault(pointLabels.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar pointLabeFontStyle = helpers.getValueOrDefault(pointLabels.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar pointLabeFontFamily = helpers.getValueOrDefault(pointLabels.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\r\n\t\r\n\t\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\r\n\t\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\r\n\t\t\t\tvar largestPossibleRadius = helpers.min([(this.height / 2 - pointLabelFontSize - 5), this.width / 2]),\r\n\t\t\t\t\tpointPosition,\r\n\t\t\t\t\ti,\r\n\t\t\t\t\ttextWidth,\r\n\t\t\t\t\thalfTextWidth,\r\n\t\t\t\t\tfurthestRight = this.width,\r\n\t\t\t\t\tfurthestRightIndex,\r\n\t\t\t\t\tfurthestRightAngle,\r\n\t\t\t\t\tfurthestLeft = 0,\r\n\t\t\t\t\tfurthestLeftIndex,\r\n\t\t\t\t\tfurthestLeftAngle,\r\n\t\t\t\t\txProtrusionLeft,\r\n\t\t\t\t\txProtrusionRight,\r\n\t\t\t\t\tradiusReductionRight,\r\n\t\t\t\t\tradiusReductionLeft,\r\n\t\t\t\t\tmaxWidthRadius;\r\n\t\t\t\tthis.ctx.font = pointLabeFont;\r\n\t\r\n\t\t\t\tfor (i = 0; i < this.getValueCount(); i++) {\r\n\t\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\r\n\t\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\r\n\t\t\t\t\ttextWidth = this.ctx.measureText(this.pointLabels[i] ? this.pointLabels[i] : '').width + 5;\r\n\t\t\t\t\tif (i === 0 || i === this.getValueCount() / 2) {\r\n\t\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\r\n\t\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\r\n\t\t\t\t\t\t// w/left and right text sizes\r\n\t\t\t\t\t\thalfTextWidth = textWidth / 2;\r\n\t\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\r\n\t\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\r\n\t\t\t\t\t\t\tfurthestRightIndex = i;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\r\n\t\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\r\n\t\t\t\t\t\t\tfurthestLeftIndex = i;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (i < this.getValueCount() / 2) {\r\n\t\t\t\t\t\t// Less than half the values means we'll left align the text\r\n\t\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\r\n\t\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\r\n\t\t\t\t\t\t\tfurthestRightIndex = i;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (i > this.getValueCount() / 2) {\r\n\t\t\t\t\t\t// More than half the values means we'll right align the text\r\n\t\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\r\n\t\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\r\n\t\t\t\t\t\t\tfurthestLeftIndex = i;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\txProtrusionLeft = furthestLeft;\r\n\t\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\r\n\t\r\n\t\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\r\n\t\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\r\n\t\r\n\t\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI / 2);\r\n\t\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI / 2);\r\n\t\r\n\t\t\t\t// Ensure we actually need to reduce the size of the chart\r\n\t\t\t\tradiusReductionRight = (helpers.isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\r\n\t\t\t\tradiusReductionLeft = (helpers.isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\r\n\t\r\n\t\t\t\tthis.drawingArea = Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2);\r\n\t\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\r\n\t\t\t},\r\n\t\t\tsetCenterPoint: function(leftMovement, rightMovement) {\r\n\t\r\n\t\t\t\tvar maxRight = this.width - rightMovement - this.drawingArea,\r\n\t\t\t\t\tmaxLeft = leftMovement + this.drawingArea;\r\n\t\r\n\t\t\t\tthis.xCenter = Math.round(((maxLeft + maxRight) / 2) + this.left);\r\n\t\t\t\t// Always vertically in the centre as the text height doesn't change\r\n\t\t\t\tthis.yCenter = Math.round((this.height / 2) + this.top);\r\n\t\t\t},\r\n\t\r\n\t\t\tgetIndexAngle: function(index) {\r\n\t\t\t\tvar angleMultiplier = (Math.PI * 2) / this.getValueCount();\r\n\t\t\t\t// Start from the top instead of right, so remove a quarter of the circle\r\n\t\r\n\t\t\t\treturn index * angleMultiplier - (Math.PI / 2);\r\n\t\t\t},\r\n\t\t\tgetDistanceFromCenterForValue: function(value) {\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn 0; // null always in center\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Take into account half font size + the yPadding of the top value\r\n\t\t\t\tvar scalingFactor = this.drawingArea / (this.max - this.min);\r\n\t\t\t\tif (this.options.reverse) {\r\n\t\t\t\t\treturn (this.max - value) * scalingFactor;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn (value - this.min) * scalingFactor;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetPointPosition: function(index, distanceFromCenter) {\r\n\t\t\t\tvar thisAngle = this.getIndexAngle(index);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\r\n\t\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tgetPointPositionForValue: function(index, value) {\r\n\t\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n\t\t\t},\r\n\t\r\n\t\t\tgetBasePosition: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar min = me.min;\r\n\t\t\t\tvar max = me.max;\r\n\t\r\n\t\t\t\treturn me.getPointPositionForValue(0,\r\n\t\t\t\t\tme.beginAtZero? 0:\r\n\t\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t\t0);\r\n\t\t\t},\r\n\t\r\n\t\t\tdraw: function() {\r\n\t\t\t\tif (this.options.display) {\r\n\t\t\t\t\tvar ctx = this.ctx;\r\n\t\t\t\t\thelpers.each(this.ticks, function(label, index) {\r\n\t\t\t\t\t\t// Don't draw a centre value (if it is minimum)\r\n\t\t\t\t\t\tif (index > 0 || this.options.reverse) {\r\n\t\t\t\t\t\t\tvar yCenterOffset = this.getDistanceFromCenterForValue(this.ticks[index]);\r\n\t\t\t\t\t\t\tvar yHeight = this.yCenter - yCenterOffset;\r\n\t\r\n\t\t\t\t\t\t\t// Draw circular lines around the scale\r\n\t\t\t\t\t\t\tif (this.options.gridLines.display) {\r\n\t\t\t\t\t\t\t\tctx.strokeStyle = this.options.gridLines.color;\r\n\t\t\t\t\t\t\t\tctx.lineWidth = this.options.gridLines.lineWidth;\r\n\t\r\n\t\t\t\t\t\t\t\tif (this.options.lineArc) {\r\n\t\t\t\t\t\t\t\t\t// Draw circular arcs between the points\r\n\t\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\t\tctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI * 2);\r\n\t\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Draw straight lines connecting each index\r\n\t\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\t\tfor (var i = 0; i < this.getValueCount(); i++) {\r\n\t\t\t\t\t\t\t\t\t\tvar pointPosition = this.getPointPosition(i, this.getDistanceFromCenterForValue(this.ticks[index]));\r\n\t\t\t\t\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif (this.options.ticks.display) {\r\n\t\t\t\t\t\t\t\tvar tickFontColor = helpers.getValueOrDefault(this.options.ticks.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\t\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\t\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(this.options.ticks.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\t\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(this.options.ticks.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\t\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\t\t\t\t\t\tctx.font = tickLabelFont;\r\n\t\r\n\t\t\t\t\t\t\t\tif (this.options.ticks.showLabelBackdrop) {\r\n\t\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\r\n\t\t\t\t\t\t\t\t\tctx.fillStyle = this.options.ticks.backdropColor;\r\n\t\t\t\t\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\t\t\t\t\tthis.xCenter - labelWidth / 2 - this.options.ticks.backdropPaddingX,\r\n\t\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - this.options.ticks.backdropPaddingY,\r\n\t\t\t\t\t\t\t\t\t\tlabelWidth + this.options.ticks.backdropPaddingX * 2,\r\n\t\t\t\t\t\t\t\t\t\ttickFontSize + this.options.ticks.backdropPaddingY * 2\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\r\n\t\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\r\n\t\t\t\t\t\t\t\tctx.fillText(label, this.xCenter, yHeight);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\r\n\t\t\t\t\tif (!this.options.lineArc) {\r\n\t\t\t\t\t\tctx.lineWidth = this.options.angleLines.lineWidth;\r\n\t\t\t\t\t\tctx.strokeStyle = this.options.angleLines.color;\r\n\t\r\n\t\t\t\t\t\tfor (var i = this.getValueCount() - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tif (this.options.angleLines.display) {\r\n\t\t\t\t\t\t\t\tvar outerPosition = this.getPointPosition(i, this.getDistanceFromCenterForValue(this.options.reverse ? this.min : this.max));\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\r\n\t\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Extra 3px out for some label spacing\r\n\t\t\t\t\t\t\tvar pointLabelPosition = this.getPointPosition(i, this.getDistanceFromCenterForValue(this.options.reverse ? this.min : this.max) + 5);\r\n\t\r\n\t\t\t\t\t\t\tvar pointLabelFontColor = helpers.getValueOrDefault(this.options.pointLabels.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\t\t\t\tvar pointLabelFontSize = helpers.getValueOrDefault(this.options.pointLabels.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\t\t\t\tvar pointLabeFontStyle = helpers.getValueOrDefault(this.options.pointLabels.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\t\t\t\tvar pointLabeFontFamily = helpers.getValueOrDefault(this.options.pointLabels.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\t\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\r\n\t\r\n\t\t\t\t\t\t\tctx.font = pointLabeFont;\r\n\t\t\t\t\t\t\tctx.fillStyle = pointLabelFontColor;\r\n\t\r\n\t\t\t\t\t\t\tvar labelsCount = this.pointLabels.length,\r\n\t\t\t\t\t\t\t\thalfLabelsCount = this.pointLabels.length / 2,\r\n\t\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount / 2,\r\n\t\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\r\n\t\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\r\n\t\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t\t} else if (i === halfLabelsCount) {\r\n\t\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t\t} else if (i < halfLabelsCount) {\r\n\t\t\t\t\t\t\t\tctx.textAlign = 'left';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.textAlign = 'right';\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\r\n\t\t\t\t\t\t\tif (exactQuarter) {\r\n\t\t\t\t\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\t\t\t\t} else if (upperHalf) {\r\n\t\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tctx.fillText(this.pointLabels[i] ? this.pointLabels[i] : '', pointLabelPosition.x, pointLabelPosition.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tChart.scaleService.registerScaleType(\"radialLinear\", LinearRadialScale, defaultConfig);\r\n\t\r\n\t};\n\n/***/ },\n\n/***/ 159:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*global window: false */\r\n\t\"use strict\";\r\n\t\r\n\tvar moment = __webpack_require__(1);\r\n\tmoment = typeof(moment) === 'function' ? moment : window.moment;\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\tvar time = {\r\n\t\t\tunits: [{\r\n\t\t\t\tname: 'millisecond',\r\n\t\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\r\n\t\t\t}, {\r\n\t\t\t\tname: 'second',\r\n\t\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t\t}, {\r\n\t\t\t\tname: 'minute',\r\n\t\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t\t}, {\r\n\t\t\t\tname: 'hour',\r\n\t\t\t\tsteps: [1, 2, 3, 6, 12]\r\n\t\t\t}, {\r\n\t\t\t\tname: 'day',\r\n\t\t\t\tsteps: [1, 2, 5]\r\n\t\t\t}, {\r\n\t\t\t\tname: 'week',\r\n\t\t\t\tmaxStep: 4\r\n\t\t\t}, {\r\n\t\t\t\tname: 'month',\r\n\t\t\t\tmaxStep: 3\r\n\t\t\t}, {\r\n\t\t\t\tname: 'quarter',\r\n\t\t\t\tmaxStep: 4\r\n\t\t\t}, {\r\n\t\t\t\tname: 'year',\r\n\t\t\t\tmaxStep: false\r\n\t\t\t}]\r\n\t\t};\r\n\t\r\n\t\tvar defaultConfig = {\r\n\t\t\tposition: \"bottom\",\r\n\t\r\n\t\t\ttime: {\r\n\t\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\r\n\t\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\r\n\t\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\r\n\t\t\t\tround: false, // none, or override with week, month, year, etc.\r\n\t\t\t\tdisplayFormat: false, // DEPRECATED\r\n\t\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\r\n\t\r\n\t\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\r\n\t\t\t\tdisplayFormats: {\r\n\t\t\t\t\t'millisecond': 'h:mm:ss.SSS a', // 11:20:01.123 AM,\r\n\t\t\t\t\t'second': 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\t\t'minute': 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\t\t'hour': 'MMM D, hA', // Sept 4, 5PM\r\n\t\t\t\t\t'day': 'll', // Sep 4 2015\r\n\t\t\t\t\t'week': 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\r\n\t\t\t\t\t'month': 'MMM YYYY', // Sept 2015\r\n\t\t\t\t\t'quarter': '[Q]Q - YYYY', // Q3\r\n\t\t\t\t\t'year': 'YYYY' // 2015\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tticks: {\r\n\t\t\t\tautoSkip: false\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tvar TimeScale = Chart.Scale.extend({\r\n\t\t\tinitialize: function() {\r\n\t\t\t\tif (!moment) {\r\n\t\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tChart.Scale.prototype.initialize.call(this);\r\n\t\t\t},\r\n\t\t\tgetLabelMoment: function(datasetIndex, index) {\r\n\t\t\t\treturn this.labelMoments[datasetIndex][index];\r\n\t\t\t},\r\n\t\t\tgetMomentStartOf: function(tick) {\r\n\t\t\t\tif (this.options.time.unit === 'week' && this.options.time.isoWeekday !== false) {\r\n\t\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(this.options.time.isoWeekday);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn tick.clone().startOf(this.tickUnit);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdetermineDataLimits: function() {\r\n\t\t\t\tthis.labelMoments = [];\r\n\t\r\n\t\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\r\n\t\t\t\t// these\r\n\t\t\t\tvar scaleLabelMoments = [];\r\n\t\t\t\tif (this.chart.data.labels && this.chart.data.labels.length > 0) {\r\n\t\t\t\t\thelpers.each(this.chart.data.labels, function(label, index) {\r\n\t\t\t\t\t\tvar labelMoment = this.parseTime(label);\r\n\t\r\n\t\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\t\tif (this.options.time.round) {\r\n\t\t\t\t\t\t\t\tlabelMoment.startOf(this.options.time.round);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\r\n\t\t\t\t\tthis.firstTick = moment.min.call(this, scaleLabelMoments);\r\n\t\t\t\t\tthis.lastTick = moment.max.call(this, scaleLabelMoments);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.firstTick = null;\r\n\t\t\t\t\tthis.lastTick = null;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar momentsForDataset = [];\r\n\t\t\t\t\tvar datasetVisible = this.chart.isDatasetVisible(datasetIndex);\r\n\t\r\n\t\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(value, index) {\r\n\t\t\t\t\t\t\tvar labelMoment = this.parseTime(this.getRightValue(value));\r\n\t\r\n\t\t\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\t\t\tif (this.options.time.round) {\r\n\t\t\t\t\t\t\t\t\tlabelMoment.startOf(this.options.time.round);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\r\n\t\r\n\t\t\t\t\t\t\t\tif (datasetVisible) {\r\n\t\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\r\n\t\t\t\t\t\t\t\t\tthis.firstTick = this.firstTick !== null ? moment.min(this.firstTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t\t\tthis.lastTick = this.lastTick !== null ? moment.max(this.lastTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We have no labels. Use the ones from the scale\r\n\t\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.labelMoments.push(momentsForDataset);\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t\t// Set these after we've done all the data\r\n\t\t\t\tif (this.options.time.min) {\r\n\t\t\t\t\tthis.firstTick = this.parseTime(this.options.time.min);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (this.options.time.max) {\r\n\t\t\t\t\tthis.lastTick = this.parseTime(this.options.time.max);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// We will modify these, so clone for later\r\n\t\t\t\tthis.firstTick = (this.firstTick || moment()).clone();\r\n\t\t\t\tthis.lastTick = (this.lastTick || moment()).clone();\r\n\t\t\t},\r\n\t\t\tbuildTicks: function(index) {\r\n\t\r\n\t\t\t\tthis.ctx.save();\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(this.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(this.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\t\tthis.ctx.font = tickLabelFont;\r\n\t\r\n\t\t\t\tthis.ticks = [];\r\n\t\t\t\tthis.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\r\n\t\t\t\tthis.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\r\n\t\r\n\t\t\t\t// Set unit override if applicable\r\n\t\t\t\tif (this.options.time.unit) {\r\n\t\t\t\t\tthis.tickUnit = this.options.time.unit || 'day';\r\n\t\t\t\t\tthis.displayFormat = this.options.time.displayFormats[this.tickUnit];\r\n\t\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, true);\r\n\t\t\t\t\tthis.unitScale = helpers.getValueOrDefault(this.options.time.unitStepSize, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Determine the smallest needed unit of the time\r\n\t\t\t\t\tvar innerWidth = this.isHorizontal() ? this.width - (this.paddingLeft + this.paddingRight) : this.height - (this.paddingTop + this.paddingBottom);\r\n\t\r\n\t\t\t\t\t// Crude approximation of what the label length might be\r\n\t\t\t\t\tvar tempFirstLabel = this.tickFormatFunction(this.firstTick, 0, []);\r\n\t\t\t\t\tvar tickLabelWidth = this.ctx.measureText(tempFirstLabel).width;\r\n\t\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(this.options.ticks.maxRotation));\r\n\t\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(this.options.ticks.maxRotation));\r\n\t\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\r\n\t\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\r\n\t\r\n\t\t\t\t\t// Start as small as possible\r\n\t\t\t\t\tthis.tickUnit = 'millisecond';\r\n\t\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, true);\r\n\t\t\t\t\tthis.displayFormat = this.options.time.displayFormats[this.tickUnit];\r\n\t\r\n\t\t\t\t\tvar unitDefinitionIndex = 0;\r\n\t\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\r\n\t\r\n\t\t\t\t\t// While we aren't ideal and we don't have units left\r\n\t\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\r\n\t\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\r\n\t\t\t\t\t\tthis.unitScale = 1;\r\n\t\r\n\t\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(this.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\r\n\t\t\t\t\t\t\t// Use one of the prefedined steps\r\n\t\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\r\n\t\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(this.scaleSizeInUnits / labelCapacity)) {\r\n\t\t\t\t\t\t\t\t\tthis.unitScale = helpers.getValueOrDefault(this.options.time.unitStepSize, unitDefinition.steps[idx]);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(this.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\r\n\t\t\t\t\t\t\t// We have a max step. Scale this unit\r\n\t\t\t\t\t\t\tthis.unitScale = helpers.getValueOrDefault(this.options.time.unitStepSize, Math.ceil(this.scaleSizeInUnits / labelCapacity));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Move to the next unit up\r\n\t\t\t\t\t\t\t++unitDefinitionIndex;\r\n\t\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\r\n\t\r\n\t\t\t\t\t\t\tthis.tickUnit = unitDefinition.name;\r\n\t\t\t\t\t\t\tvar leadingUnitBuffer = this.firstTick.diff(this.getMomentStartOf(this.firstTick), this.tickUnit, true);\r\n\t\t\t\t\t\t\tvar trailingUnitBuffer = this.getMomentStartOf(this.lastTick.clone().add(1, this.tickUnit)).diff(this.lastTick, this.tickUnit, true);\r\n\t\t\t\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\r\n\t\t\t\t\t\t\tthis.displayFormat = this.options.time.displayFormats[unitDefinition.name];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar roundedStart;\r\n\t\r\n\t\t\t\t// Only round the first tick if we have no hard minimum\r\n\t\t\t\tif (!this.options.time.min) {\r\n\t\t\t\t\tthis.firstTick = this.getMomentStartOf(this.firstTick);\r\n\t\t\t\t\troundedStart = this.firstTick;\r\n\t\t\t\t} else {\r\n\t\t\t\t\troundedStart = this.getMomentStartOf(this.firstTick);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Only round the last tick if we have no hard maximum\r\n\t\t\t\tif (!this.options.time.max) {\r\n\t\t\t\t\tvar roundedEnd = this.getMomentStartOf(this.lastTick);\r\n\t\t\t\t\tif (roundedEnd.diff(this.lastTick, this.tickUnit, true) !== 0) {\r\n\t\t\t\t\t\t// Do not use end of because we need this to be in the next time unit\r\n\t\t\t\t\t\tthis.lastTick = this.getMomentStartOf(this.lastTick.add(1, this.tickUnit));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.smallestLabelSeparation = this.width;\r\n\t\r\n\t\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tfor (var i = 1; i < this.labelMoments[datasetIndex].length; i++) {\r\n\t\t\t\t\t\tthis.smallestLabelSeparation = Math.min(this.smallestLabelSeparation, this.labelMoments[datasetIndex][i].diff(this.labelMoments[datasetIndex][i - 1], this.tickUnit, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\r\n\t\t\t\t// Tick displayFormat override\r\n\t\t\t\tif (this.options.time.displayFormat) {\r\n\t\t\t\t\tthis.displayFormat = this.options.time.displayFormat;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\r\n\t\t\t\tthis.ticks.push(this.firstTick.clone());\r\n\t\r\n\t\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\r\n\t\t\t\tfor (var i = 1; i <= this.scaleSizeInUnits; ++i) {\r\n\t\t\t\t\tvar newTick = roundedStart.clone().add(i, this.tickUnit);\r\n\t\r\n\t\t\t\t\t// Are we greater than the max time\r\n\t\t\t\t\tif (this.options.time.max && newTick.diff(this.lastTick, this.tickUnit, true) >= 0) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (i % this.unitScale === 0) {\r\n\t\t\t\t\t\tthis.ticks.push(newTick);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Always show the right tick\r\n\t\t\t\tvar diff = this.ticks[this.ticks.length - 1].diff(this.lastTick, this.tickUnit);\r\n\t\t\t\tif (diff !== 0 || this.scaleSizeInUnits === 0) {\r\n\t\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\r\n\t\t\t\t\t// but the last tick was not rounded.\r\n\t\t\t\t\tif (this.options.time.max) {\r\n\t\t\t\t\t\tthis.ticks.push(this.lastTick.clone());\r\n\t\t\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.ticks[0], this.tickUnit, true);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.ticks.push(this.lastTick.clone());\r\n\t\t\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.ctx.restore();\r\n\t\t\t},\r\n\t\t\t// Get tooltip label\r\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\t\tvar label = this.chart.data.labels && index < this.chart.data.labels.length ? this.chart.data.labels[index] : '';\r\n\t\r\n\t\t\t\tif (typeof this.chart.data.datasets[datasetIndex].data[0] === 'object') {\r\n\t\t\t\t\tlabel = this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Format nicely\r\n\t\t\t\tif (this.options.time.tooltipFormat) {\r\n\t\t\t\t\tlabel = this.parseTime(label).format(this.options.time.tooltipFormat);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn label;\r\n\t\t\t},\r\n\t\t\t// Function to format an individual tick mark\r\n\t\t\ttickFormatFunction: function tickFormatFunction(tick, index, ticks) {\r\n\t\t\t\tvar formattedTick = tick.format(this.displayFormat);\r\n\t\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\r\n\t\r\n\t\t\t\tif (callback) {\r\n\t\t\t\t\treturn callback(formattedTick, index, ticks);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn formattedTick;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tconvertTicksToLabels: function() {\r\n\t\t\t\tthis.tickMoments = this.ticks;\r\n\t\t\t\tthis.ticks = this.ticks.map(this.tickFormatFunction, this);\r\n\t\t\t},\r\n\t\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t\tvar labelMoment = value && value.isValid && value.isValid() ? value : this.getLabelMoment(datasetIndex, index);\r\n\t\r\n\t\t\t\tif (labelMoment) {\r\n\t\t\t\t\tvar offset = labelMoment.diff(this.firstTick, this.tickUnit, true);\r\n\t\r\n\t\t\t\t\tvar decimal = offset / this.scaleSizeInUnits;\r\n\t\r\n\t\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\t\t\tvar valueWidth = innerWidth / Math.max(this.ticks.length - 1, 1);\r\n\t\t\t\t\t\tvar valueOffset = (innerWidth * decimal) + this.paddingLeft;\r\n\t\r\n\t\t\t\t\t\treturn this.left + Math.round(valueOffset);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\t\t\tvar valueHeight = innerHeight / Math.max(this.ticks.length - 1, 1);\r\n\t\t\t\t\t\tvar heightOffset = (innerHeight * decimal) + this.paddingTop;\r\n\t\r\n\t\t\t\t\t\treturn this.top + Math.round(heightOffset);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null, includeOffset);\r\n\t\t\t},\r\n\t\t\tgetValueForPixel: function(pixel) {\r\n\t\t\t\tvar innerDimension = this.isHorizontal() ? this.width - (this.paddingLeft + this.paddingRight) : this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\tvar offset = (pixel - (this.isHorizontal() ? this.left + this.paddingLeft : this.top + this.paddingTop)) / innerDimension;\r\n\t\t\t\toffset *= this.scaleSizeInUnits;\r\n\t\t\t\treturn this.firstTick.clone().add(moment.duration(offset, this.tickUnit).asSeconds(), 'seconds');\r\n\t\t\t},\r\n\t\t\tparseTime: function(label) {\r\n\t\t\t\tif (typeof this.options.time.parser === 'string') {\r\n\t\t\t\t\treturn moment(label, this.options.time.parser);\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof this.options.time.parser === 'function') {\r\n\t\t\t\t\treturn this.options.time.parser(label);\r\n\t\t\t\t}\r\n\t\t\t\t// Date objects\r\n\t\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\r\n\t\t\t\t\treturn moment(label);\r\n\t\t\t\t}\r\n\t\t\t\t// Moment support\r\n\t\t\t\tif (label.isValid && label.isValid()) {\r\n\t\t\t\t\treturn label;\r\n\t\t\t\t}\r\n\t\t\t\t// Custom parsing (return an instance of moment)\r\n\t\t\t\tif (typeof this.options.time.format !== 'string' && this.options.time.format.call) {\r\n\t\t\t\t\tconsole.warn(\"options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale\");\r\n\t\t\t\t\treturn this.options.time.format(label);\r\n\t\t\t\t}\r\n\t\t\t\t// Moment format parsing\r\n\t\t\t\treturn moment(label, this.options.time.format);\r\n\t\t\t}\r\n\t\t});\r\n\t\tChart.scaleService.registerScaleType(\"time\", TimeScale, defaultConfig);\r\n\t\r\n\t};\r\n\n\n/***/ },\n\n/***/ 178:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar url = __webpack_require__(179);\n\tvar parser = __webpack_require__(41);\n\tvar Manager = __webpack_require__(65);\n\tvar debug = __webpack_require__(4)('socket.io-client');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = lookup;\n\t\n\t/**\n\t * Managers cache.\n\t */\n\t\n\tvar cache = exports.managers = {};\n\t\n\t/**\n\t * Looks up an existing `Manager` for multiplexing.\n\t * If the user summons:\n\t *\n\t *   `io('http://localhost/a');`\n\t *   `io('http://localhost/b');`\n\t *\n\t * We reuse the existing instance based on same scheme/port/host,\n\t * and we initialize sockets for each namespace.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction lookup(uri, opts) {\n\t  if (typeof uri == 'object') {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  var parsed = url(uri);\n\t  var source = parsed.source;\n\t  var id = parsed.id;\n\t  var path = parsed.path;\n\t  var sameNamespace = cache[id] && path in cache[id].nsps;\n\t  var newConnection = opts.forceNew || opts['force new connection'] ||\n\t                      false === opts.multiplex || sameNamespace;\n\t\n\t  var io;\n\t\n\t  if (newConnection) {\n\t    debug('ignoring socket cache for %s', source);\n\t    io = Manager(source, opts);\n\t  } else {\n\t    if (!cache[id]) {\n\t      debug('new io instance for %s', source);\n\t      cache[id] = Manager(source, opts);\n\t    }\n\t    io = cache[id];\n\t  }\n\t\n\t  return io.socket(parsed.path);\n\t}\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = parser.protocol;\n\t\n\t/**\n\t * `connect`.\n\t *\n\t * @param {String} uri\n\t * @api public\n\t */\n\t\n\texports.connect = lookup;\n\t\n\t/**\n\t * Expose constructors for standalone build.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Manager = __webpack_require__(65);\n\texports.Socket = __webpack_require__(67);\n\n\n/***/ },\n\n/***/ 179:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parseuri = __webpack_require__(74);\n\tvar debug = __webpack_require__(4)('socket.io-client:url');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = url;\n\t\n\t/**\n\t * URL parser.\n\t *\n\t * @param {String} url\n\t * @param {Object} An object meant to mimic window.location.\n\t *                 Defaults to window.location.\n\t * @api public\n\t */\n\t\n\tfunction url(uri, loc){\n\t  var obj = uri;\n\t\n\t  // default to window.location\n\t  var loc = loc || global.location;\n\t  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\t\n\t  // relative path support\n\t  if ('string' == typeof uri) {\n\t    if ('/' == uri.charAt(0)) {\n\t      if ('/' == uri.charAt(1)) {\n\t        uri = loc.protocol + uri;\n\t      } else {\n\t        uri = loc.host + uri;\n\t      }\n\t    }\n\t\n\t    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n\t      debug('protocol-less url %s', uri);\n\t      if ('undefined' != typeof loc) {\n\t        uri = loc.protocol + '//' + uri;\n\t      } else {\n\t        uri = 'https://' + uri;\n\t      }\n\t    }\n\t\n\t    // parse\n\t    debug('parse %s', uri);\n\t    obj = parseuri(uri);\n\t  }\n\t\n\t  // make sure we treat `localhost:80` and `localhost` equally\n\t  if (!obj.port) {\n\t    if (/^(http|ws)$/.test(obj.protocol)) {\n\t      obj.port = '80';\n\t    }\n\t    else if (/^(http|ws)s$/.test(obj.protocol)) {\n\t      obj.port = '443';\n\t    }\n\t  }\n\t\n\t  obj.path = obj.path || '/';\n\t\n\t  var ipv6 = obj.host.indexOf(':') !== -1;\n\t  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\t\n\t  // define unique id\n\t  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n\t  // define href\n\t  obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : (':' + obj.port));\n\t\n\t  return obj;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 180:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Backoff`.\n\t */\n\t\n\tmodule.exports = Backoff;\n\t\n\t/**\n\t * Initialize backoff timer with `opts`.\n\t *\n\t * - `min` initial timeout in milliseconds [100]\n\t * - `max` max timeout [10000]\n\t * - `jitter` [0]\n\t * - `factor` [2]\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction Backoff(opts) {\n\t  opts = opts || {};\n\t  this.ms = opts.min || 100;\n\t  this.max = opts.max || 10000;\n\t  this.factor = opts.factor || 2;\n\t  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n\t  this.attempts = 0;\n\t}\n\t\n\t/**\n\t * Return the backoff duration.\n\t *\n\t * @return {Number}\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.duration = function(){\n\t  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\t  if (this.jitter) {\n\t    var rand =  Math.random();\n\t    var deviation = Math.floor(rand * this.jitter * ms);\n\t    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n\t  }\n\t  return Math.min(ms, this.max) | 0;\n\t};\n\t\n\t/**\n\t * Reset the number of attempts.\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.reset = function(){\n\t  this.attempts = 0;\n\t};\n\t\n\t/**\n\t * Set the minimum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMin = function(min){\n\t  this.ms = min;\n\t};\n\t\n\t/**\n\t * Set the maximum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMax = function(max){\n\t  this.max = max;\n\t};\n\t\n\t/**\n\t * Set the jitter\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setJitter = function(jitter){\n\t  this.jitter = jitter;\n\t};\n\t\n\n\n/***/ },\n\n/***/ 181:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = debug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(182);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lowercased letter, i.e. \"n\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previously assigned color.\n\t */\n\t\n\tvar prevColor = 0;\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t *\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor() {\n\t  return exports.colors[prevColor++ % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction debug(namespace) {\n\t\n\t  // define the `disabled` version\n\t  function disabled() {\n\t  }\n\t  disabled.enabled = false;\n\t\n\t  // define the `enabled` version\n\t  function enabled() {\n\t\n\t    var self = enabled;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // add the `color` if not set\n\t    if (null == self.useColors) self.useColors = exports.useColors();\n\t    if (null == self.color && self.useColors) self.color = selectColor();\n\t\n\t    var args = Array.prototype.slice.call(arguments);\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %o\n\t      args = ['%o'].concat(args);\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    if ('function' === typeof exports.formatArgs) {\n\t      args = exports.formatArgs.apply(self, args);\n\t    }\n\t    var logFn = enabled.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t  enabled.enabled = true;\n\t\n\t  var fn = exports.enabled(namespace) ? enabled : disabled;\n\t\n\t  fn.namespace = namespace;\n\t\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  var split = (namespaces || '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ },\n\n/***/ 182:\n/***/ function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar y = d * 365.25;\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(val, options){\n\t  options = options || {};\n\t  if ('string' == typeof val) return parse(val);\n\t  return options.long\n\t    ? long(val)\n\t    : short(val);\n\t};\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = '' + str;\n\t  if (str.length > 10000) return;\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\t  if (!match) return;\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction short(ms) {\n\t  if (ms >= d) return Math.round(ms / d) + 'd';\n\t  if (ms >= h) return Math.round(ms / h) + 'h';\n\t  if (ms >= m) return Math.round(ms / m) + 'm';\n\t  if (ms >= s) return Math.round(ms / s) + 's';\n\t  return ms + 'ms';\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction long(ms) {\n\t  return plural(ms, d, 'day')\n\t    || plural(ms, h, 'hour')\n\t    || plural(ms, m, 'minute')\n\t    || plural(ms, s, 'second')\n\t    || ms + ' ms';\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) return;\n\t  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n\t  return Math.ceil(ms / n) + ' ' + name + 's';\n\t}\n\n\n/***/ },\n\n/***/ 183:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports =  __webpack_require__(184);\n\n\n/***/ },\n\n/***/ 184:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = __webpack_require__(185);\n\t\n\t/**\n\t * Exports parser\n\t *\n\t * @api public\n\t *\n\t */\n\tmodule.exports.parser = __webpack_require__(7);\n\n\n/***/ },\n\n/***/ 185:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar transports = __webpack_require__(70);\n\tvar Emitter = __webpack_require__(39);\n\tvar debug = __webpack_require__(4)('engine.io-client:socket');\n\tvar index = __webpack_require__(73);\n\tvar parser = __webpack_require__(7);\n\tvar parseuri = __webpack_require__(74);\n\tvar parsejson = __webpack_require__(198);\n\tvar parseqs = __webpack_require__(40);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Socket;\n\t\n\t/**\n\t * Noop function.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction noop(){}\n\t\n\t/**\n\t * Socket constructor.\n\t *\n\t * @param {String|Object} uri or options\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Socket(uri, opts){\n\t  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\t\n\t  opts = opts || {};\n\t\n\t  if (uri && 'object' == typeof uri) {\n\t    opts = uri;\n\t    uri = null;\n\t  }\n\t\n\t  if (uri) {\n\t    uri = parseuri(uri);\n\t    opts.hostname = uri.host;\n\t    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n\t    opts.port = uri.port;\n\t    if (uri.query) opts.query = uri.query;\n\t  } else if (opts.host) {\n\t    opts.hostname = parseuri(opts.host).host;\n\t  }\n\t\n\t  this.secure = null != opts.secure ? opts.secure :\n\t    (global.location && 'https:' == location.protocol);\n\t\n\t  if (opts.hostname && !opts.port) {\n\t    // if no port is specified manually, use the protocol default\n\t    opts.port = this.secure ? '443' : '80';\n\t  }\n\t\n\t  this.agent = opts.agent || false;\n\t  this.hostname = opts.hostname ||\n\t    (global.location ? location.hostname : 'localhost');\n\t  this.port = opts.port || (global.location && location.port ?\n\t       location.port :\n\t       (this.secure ? 443 : 80));\n\t  this.query = opts.query || {};\n\t  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n\t  this.upgrade = false !== opts.upgrade;\n\t  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n\t  this.forceJSONP = !!opts.forceJSONP;\n\t  this.jsonp = false !== opts.jsonp;\n\t  this.forceBase64 = !!opts.forceBase64;\n\t  this.enablesXDR = !!opts.enablesXDR;\n\t  this.timestampParam = opts.timestampParam || 't';\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.transports = opts.transports || ['polling', 'websocket'];\n\t  this.readyState = '';\n\t  this.writeBuffer = [];\n\t  this.policyPort = opts.policyPort || 843;\n\t  this.rememberUpgrade = opts.rememberUpgrade || false;\n\t  this.binaryType = null;\n\t  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n\t  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\t\n\t  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\t  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n\t    this.perMessageDeflate.threshold = 1024;\n\t  }\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx || null;\n\t  this.key = opts.key || null;\n\t  this.passphrase = opts.passphrase || null;\n\t  this.cert = opts.cert || null;\n\t  this.ca = opts.ca || null;\n\t  this.ciphers = opts.ciphers || null;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  var freeGlobal = typeof global == 'object' && global;\n\t  if (freeGlobal.global === freeGlobal) {\n\t    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n\t      this.extraHeaders = opts.extraHeaders;\n\t    }\n\t  }\n\t\n\t  this.open();\n\t}\n\t\n\tSocket.priorWebsocketSuccess = false;\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.protocol = parser.protocol; // this is an int\n\t\n\t/**\n\t * Expose deps for legacy compatibility\n\t * and standalone browser access.\n\t */\n\t\n\tSocket.Socket = Socket;\n\tSocket.Transport = __webpack_require__(37);\n\tSocket.transports = __webpack_require__(70);\n\tSocket.parser = __webpack_require__(7);\n\t\n\t/**\n\t * Creates transport of the given type.\n\t *\n\t * @param {String} transport name\n\t * @return {Transport}\n\t * @api private\n\t */\n\t\n\tSocket.prototype.createTransport = function (name) {\n\t  debug('creating transport \"%s\"', name);\n\t  var query = clone(this.query);\n\t\n\t  // append engine.io protocol identifier\n\t  query.EIO = parser.protocol;\n\t\n\t  // transport name\n\t  query.transport = name;\n\t\n\t  // session id if we already have one\n\t  if (this.id) query.sid = this.id;\n\t\n\t  var transport = new transports[name]({\n\t    agent: this.agent,\n\t    hostname: this.hostname,\n\t    port: this.port,\n\t    secure: this.secure,\n\t    path: this.path,\n\t    query: query,\n\t    forceJSONP: this.forceJSONP,\n\t    jsonp: this.jsonp,\n\t    forceBase64: this.forceBase64,\n\t    enablesXDR: this.enablesXDR,\n\t    timestampRequests: this.timestampRequests,\n\t    timestampParam: this.timestampParam,\n\t    policyPort: this.policyPort,\n\t    socket: this,\n\t    pfx: this.pfx,\n\t    key: this.key,\n\t    passphrase: this.passphrase,\n\t    cert: this.cert,\n\t    ca: this.ca,\n\t    ciphers: this.ciphers,\n\t    rejectUnauthorized: this.rejectUnauthorized,\n\t    perMessageDeflate: this.perMessageDeflate,\n\t    extraHeaders: this.extraHeaders\n\t  });\n\t\n\t  return transport;\n\t};\n\t\n\tfunction clone (obj) {\n\t  var o = {};\n\t  for (var i in obj) {\n\t    if (obj.hasOwnProperty(i)) {\n\t      o[i] = obj[i];\n\t    }\n\t  }\n\t  return o;\n\t}\n\t\n\t/**\n\t * Initializes transport to use and starts probe.\n\t *\n\t * @api private\n\t */\n\tSocket.prototype.open = function () {\n\t  var transport;\n\t  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n\t    transport = 'websocket';\n\t  } else if (0 === this.transports.length) {\n\t    // Emit error on next tick so it can be listened to\n\t    var self = this;\n\t    setTimeout(function() {\n\t      self.emit('error', 'No transports available');\n\t    }, 0);\n\t    return;\n\t  } else {\n\t    transport = this.transports[0];\n\t  }\n\t  this.readyState = 'opening';\n\t\n\t  // Retry with the next transport if the transport is disabled (jsonp: false)\n\t  try {\n\t    transport = this.createTransport(transport);\n\t  } catch (e) {\n\t    this.transports.shift();\n\t    this.open();\n\t    return;\n\t  }\n\t\n\t  transport.open();\n\t  this.setTransport(transport);\n\t};\n\t\n\t/**\n\t * Sets the current transport. Disables the existing one (if any).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setTransport = function(transport){\n\t  debug('setting transport %s', transport.name);\n\t  var self = this;\n\t\n\t  if (this.transport) {\n\t    debug('clearing existing transport %s', this.transport.name);\n\t    this.transport.removeAllListeners();\n\t  }\n\t\n\t  // set up transport\n\t  this.transport = transport;\n\t\n\t  // set up transport listeners\n\t  transport\n\t  .on('drain', function(){\n\t    self.onDrain();\n\t  })\n\t  .on('packet', function(packet){\n\t    self.onPacket(packet);\n\t  })\n\t  .on('error', function(e){\n\t    self.onError(e);\n\t  })\n\t  .on('close', function(){\n\t    self.onClose('transport close');\n\t  });\n\t};\n\t\n\t/**\n\t * Probes a transport.\n\t *\n\t * @param {String} transport name\n\t * @api private\n\t */\n\t\n\tSocket.prototype.probe = function (name) {\n\t  debug('probing transport \"%s\"', name);\n\t  var transport = this.createTransport(name, { probe: 1 })\n\t    , failed = false\n\t    , self = this;\n\t\n\t  Socket.priorWebsocketSuccess = false;\n\t\n\t  function onTransportOpen(){\n\t    if (self.onlyBinaryUpgrades) {\n\t      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n\t      failed = failed || upgradeLosesBinary;\n\t    }\n\t    if (failed) return;\n\t\n\t    debug('probe transport \"%s\" opened', name);\n\t    transport.send([{ type: 'ping', data: 'probe' }]);\n\t    transport.once('packet', function (msg) {\n\t      if (failed) return;\n\t      if ('pong' == msg.type && 'probe' == msg.data) {\n\t        debug('probe transport \"%s\" pong', name);\n\t        self.upgrading = true;\n\t        self.emit('upgrading', transport);\n\t        if (!transport) return;\n\t        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\t\n\t        debug('pausing current transport \"%s\"', self.transport.name);\n\t        self.transport.pause(function () {\n\t          if (failed) return;\n\t          if ('closed' == self.readyState) return;\n\t          debug('changing transport and sending upgrade packet');\n\t\n\t          cleanup();\n\t\n\t          self.setTransport(transport);\n\t          transport.send([{ type: 'upgrade' }]);\n\t          self.emit('upgrade', transport);\n\t          transport = null;\n\t          self.upgrading = false;\n\t          self.flush();\n\t        });\n\t      } else {\n\t        debug('probe transport \"%s\" failed', name);\n\t        var err = new Error('probe error');\n\t        err.transport = transport.name;\n\t        self.emit('upgradeError', err);\n\t      }\n\t    });\n\t  }\n\t\n\t  function freezeTransport() {\n\t    if (failed) return;\n\t\n\t    // Any callback called by transport should be ignored since now\n\t    failed = true;\n\t\n\t    cleanup();\n\t\n\t    transport.close();\n\t    transport = null;\n\t  }\n\t\n\t  //Handle any error that happens while probing\n\t  function onerror(err) {\n\t    var error = new Error('probe error: ' + err);\n\t    error.transport = transport.name;\n\t\n\t    freezeTransport();\n\t\n\t    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\t\n\t    self.emit('upgradeError', error);\n\t  }\n\t\n\t  function onTransportClose(){\n\t    onerror(\"transport closed\");\n\t  }\n\t\n\t  //When the socket is closed while we're probing\n\t  function onclose(){\n\t    onerror(\"socket closed\");\n\t  }\n\t\n\t  //When the socket is upgraded while we're probing\n\t  function onupgrade(to){\n\t    if (transport && to.name != transport.name) {\n\t      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n\t      freezeTransport();\n\t    }\n\t  }\n\t\n\t  //Remove all listeners on the transport and on self\n\t  function cleanup(){\n\t    transport.removeListener('open', onTransportOpen);\n\t    transport.removeListener('error', onerror);\n\t    transport.removeListener('close', onTransportClose);\n\t    self.removeListener('close', onclose);\n\t    self.removeListener('upgrading', onupgrade);\n\t  }\n\t\n\t  transport.once('open', onTransportOpen);\n\t  transport.once('error', onerror);\n\t  transport.once('close', onTransportClose);\n\t\n\t  this.once('close', onclose);\n\t  this.once('upgrading', onupgrade);\n\t\n\t  transport.open();\n\t\n\t};\n\t\n\t/**\n\t * Called when connection is deemed open.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.onOpen = function () {\n\t  debug('socket open');\n\t  this.readyState = 'open';\n\t  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n\t  this.emit('open');\n\t  this.flush();\n\t\n\t  // we check for `readyState` in case an `open`\n\t  // listener already closed the socket\n\t  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n\t    debug('starting upgrade probes');\n\t    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n\t      this.probe(this.upgrades[i]);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Handles a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onPacket = function (packet) {\n\t  if ('opening' == this.readyState || 'open' == this.readyState) {\n\t    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\t\n\t    this.emit('packet', packet);\n\t\n\t    // Socket is live - any packet counts\n\t    this.emit('heartbeat');\n\t\n\t    switch (packet.type) {\n\t      case 'open':\n\t        this.onHandshake(parsejson(packet.data));\n\t        break;\n\t\n\t      case 'pong':\n\t        this.setPing();\n\t        this.emit('pong');\n\t        break;\n\t\n\t      case 'error':\n\t        var err = new Error('server error');\n\t        err.code = packet.data;\n\t        this.onError(err);\n\t        break;\n\t\n\t      case 'message':\n\t        this.emit('data', packet.data);\n\t        this.emit('message', packet.data);\n\t        break;\n\t    }\n\t  } else {\n\t    debug('packet received with socket readyState \"%s\"', this.readyState);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon handshake completion.\n\t *\n\t * @param {Object} handshake obj\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHandshake = function (data) {\n\t  this.emit('handshake', data);\n\t  this.id = data.sid;\n\t  this.transport.query.sid = data.sid;\n\t  this.upgrades = this.filterUpgrades(data.upgrades);\n\t  this.pingInterval = data.pingInterval;\n\t  this.pingTimeout = data.pingTimeout;\n\t  this.onOpen();\n\t  // In case open handler closes socket\n\t  if  ('closed' == this.readyState) return;\n\t  this.setPing();\n\t\n\t  // Prolong liveness of socket on heartbeat\n\t  this.removeListener('heartbeat', this.onHeartbeat);\n\t  this.on('heartbeat', this.onHeartbeat);\n\t};\n\t\n\t/**\n\t * Resets ping timeout.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHeartbeat = function (timeout) {\n\t  clearTimeout(this.pingTimeoutTimer);\n\t  var self = this;\n\t  self.pingTimeoutTimer = setTimeout(function () {\n\t    if ('closed' == self.readyState) return;\n\t    self.onClose('ping timeout');\n\t  }, timeout || (self.pingInterval + self.pingTimeout));\n\t};\n\t\n\t/**\n\t * Pings server every `this.pingInterval` and expects response\n\t * within `this.pingTimeout` or closes connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setPing = function () {\n\t  var self = this;\n\t  clearTimeout(self.pingIntervalTimer);\n\t  self.pingIntervalTimer = setTimeout(function () {\n\t    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n\t    self.ping();\n\t    self.onHeartbeat(self.pingTimeout);\n\t  }, self.pingInterval);\n\t};\n\t\n\t/**\n\t* Sends a ping packet.\n\t*\n\t* @api private\n\t*/\n\t\n\tSocket.prototype.ping = function () {\n\t  var self = this;\n\t  this.sendPacket('ping', function(){\n\t    self.emit('ping');\n\t  });\n\t};\n\t\n\t/**\n\t * Called on `drain` event\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onDrain = function() {\n\t  this.writeBuffer.splice(0, this.prevBufferLen);\n\t\n\t  // setting prevBufferLen = 0 is very important\n\t  // for example, when upgrading, upgrade packet is sent over,\n\t  // and a nonzero prevBufferLen could cause problems on `drain`\n\t  this.prevBufferLen = 0;\n\t\n\t  if (0 === this.writeBuffer.length) {\n\t    this.emit('drain');\n\t  } else {\n\t    this.flush();\n\t  }\n\t};\n\t\n\t/**\n\t * Flush write buffers.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.flush = function () {\n\t  if ('closed' != this.readyState && this.transport.writable &&\n\t    !this.upgrading && this.writeBuffer.length) {\n\t    debug('flushing %d packets in socket', this.writeBuffer.length);\n\t    this.transport.send(this.writeBuffer);\n\t    // keep track of current length of writeBuffer\n\t    // splice writeBuffer and callbackBuffer on `drain`\n\t    this.prevBufferLen = this.writeBuffer.length;\n\t    this.emit('flush');\n\t  }\n\t};\n\t\n\t/**\n\t * Sends a message.\n\t *\n\t * @param {String} message.\n\t * @param {Function} callback function.\n\t * @param {Object} options.\n\t * @return {Socket} for chaining.\n\t * @api public\n\t */\n\t\n\tSocket.prototype.write =\n\tSocket.prototype.send = function (msg, options, fn) {\n\t  this.sendPacket('message', msg, options, fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {String} packet type.\n\t * @param {String} data.\n\t * @param {Object} options.\n\t * @param {Function} callback function.\n\t * @api private\n\t */\n\t\n\tSocket.prototype.sendPacket = function (type, data, options, fn) {\n\t  if('function' == typeof data) {\n\t    fn = data;\n\t    data = undefined;\n\t  }\n\t\n\t  if ('function' == typeof options) {\n\t    fn = options;\n\t    options = null;\n\t  }\n\t\n\t  if ('closing' == this.readyState || 'closed' == this.readyState) {\n\t    return;\n\t  }\n\t\n\t  options = options || {};\n\t  options.compress = false !== options.compress;\n\t\n\t  var packet = {\n\t    type: type,\n\t    data: data,\n\t    options: options\n\t  };\n\t  this.emit('packetCreate', packet);\n\t  this.writeBuffer.push(packet);\n\t  if (fn) this.once('flush', fn);\n\t  this.flush();\n\t};\n\t\n\t/**\n\t * Closes the connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.close = function () {\n\t  if ('opening' == this.readyState || 'open' == this.readyState) {\n\t    this.readyState = 'closing';\n\t\n\t    var self = this;\n\t\n\t    if (this.writeBuffer.length) {\n\t      this.once('drain', function() {\n\t        if (this.upgrading) {\n\t          waitForUpgrade();\n\t        } else {\n\t          close();\n\t        }\n\t      });\n\t    } else if (this.upgrading) {\n\t      waitForUpgrade();\n\t    } else {\n\t      close();\n\t    }\n\t  }\n\t\n\t  function close() {\n\t    self.onClose('forced close');\n\t    debug('socket closing - telling transport to close');\n\t    self.transport.close();\n\t  }\n\t\n\t  function cleanupAndClose() {\n\t    self.removeListener('upgrade', cleanupAndClose);\n\t    self.removeListener('upgradeError', cleanupAndClose);\n\t    close();\n\t  }\n\t\n\t  function waitForUpgrade() {\n\t    // wait for upgrade to finish since we can't send packets while pausing a transport\n\t    self.once('upgrade', cleanupAndClose);\n\t    self.once('upgradeError', cleanupAndClose);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport error\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onError = function (err) {\n\t  debug('socket error %j', err);\n\t  Socket.priorWebsocketSuccess = false;\n\t  this.emit('error', err);\n\t  this.onClose('transport error', err);\n\t};\n\t\n\t/**\n\t * Called upon transport close.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onClose = function (reason, desc) {\n\t  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n\t    debug('socket close with reason: \"%s\"', reason);\n\t    var self = this;\n\t\n\t    // clear timers\n\t    clearTimeout(this.pingIntervalTimer);\n\t    clearTimeout(this.pingTimeoutTimer);\n\t\n\t    // stop event from firing again for transport\n\t    this.transport.removeAllListeners('close');\n\t\n\t    // ensure transport won't stay open\n\t    this.transport.close();\n\t\n\t    // ignore further transport communication\n\t    this.transport.removeAllListeners();\n\t\n\t    // set ready state\n\t    this.readyState = 'closed';\n\t\n\t    // clear session id\n\t    this.id = null;\n\t\n\t    // emit close event\n\t    this.emit('close', reason, desc);\n\t\n\t    // clean buffers after, so users can still\n\t    // grab the buffers on `close` event\n\t    self.writeBuffer = [];\n\t    self.prevBufferLen = 0;\n\t  }\n\t};\n\t\n\t/**\n\t * Filters upgrades, returning only those matching client transports.\n\t *\n\t * @param {Array} server upgrades\n\t * @api private\n\t *\n\t */\n\t\n\tSocket.prototype.filterUpgrades = function (upgrades) {\n\t  var filteredUpgrades = [];\n\t  for (var i = 0, j = upgrades.length; i<j; i++) {\n\t    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n\t  }\n\t  return filteredUpgrades;\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 186:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module requirements.\n\t */\n\t\n\tvar Polling = __webpack_require__(71);\n\tvar inherit = __webpack_require__(16);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = JSONPPolling;\n\t\n\t/**\n\t * Cached regular expressions.\n\t */\n\t\n\tvar rNewline = /\\n/g;\n\tvar rEscapedNewline = /\\\\n/g;\n\t\n\t/**\n\t * Global JSONP callbacks.\n\t */\n\t\n\tvar callbacks;\n\t\n\t/**\n\t * Callbacks count.\n\t */\n\t\n\tvar index = 0;\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction empty () { }\n\t\n\t/**\n\t * JSONP Polling constructor.\n\t *\n\t * @param {Object} opts.\n\t * @api public\n\t */\n\t\n\tfunction JSONPPolling (opts) {\n\t  Polling.call(this, opts);\n\t\n\t  this.query = this.query || {};\n\t\n\t  // define global callbacks array if not present\n\t  // we do this here (lazily) to avoid unneeded global pollution\n\t  if (!callbacks) {\n\t    // we need to consider multiple engines in the same page\n\t    if (!global.___eio) global.___eio = [];\n\t    callbacks = global.___eio;\n\t  }\n\t\n\t  // callback identifier\n\t  this.index = callbacks.length;\n\t\n\t  // add callback to jsonp global\n\t  var self = this;\n\t  callbacks.push(function (msg) {\n\t    self.onData(msg);\n\t  });\n\t\n\t  // append to query string\n\t  this.query.j = this.index;\n\t\n\t  // prevent spurious errors from being emitted when the window is unloaded\n\t  if (global.document && global.addEventListener) {\n\t    global.addEventListener('beforeunload', function () {\n\t      if (self.script) self.script.onerror = empty;\n\t    }, false);\n\t  }\n\t}\n\t\n\t/**\n\t * Inherits from Polling.\n\t */\n\t\n\tinherit(JSONPPolling, Polling);\n\t\n\t/*\n\t * JSONP only supports binary as base64 encoded strings\n\t */\n\t\n\tJSONPPolling.prototype.supportsBinary = false;\n\t\n\t/**\n\t * Closes the socket.\n\t *\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doClose = function () {\n\t  if (this.script) {\n\t    this.script.parentNode.removeChild(this.script);\n\t    this.script = null;\n\t  }\n\t\n\t  if (this.form) {\n\t    this.form.parentNode.removeChild(this.form);\n\t    this.form = null;\n\t    this.iframe = null;\n\t  }\n\t\n\t  Polling.prototype.doClose.call(this);\n\t};\n\t\n\t/**\n\t * Starts a poll cycle.\n\t *\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doPoll = function () {\n\t  var self = this;\n\t  var script = document.createElement('script');\n\t\n\t  if (this.script) {\n\t    this.script.parentNode.removeChild(this.script);\n\t    this.script = null;\n\t  }\n\t\n\t  script.async = true;\n\t  script.src = this.uri();\n\t  script.onerror = function(e){\n\t    self.onError('jsonp poll error',e);\n\t  };\n\t\n\t  var insertAt = document.getElementsByTagName('script')[0];\n\t  if (insertAt) {\n\t    insertAt.parentNode.insertBefore(script, insertAt);\n\t  }\n\t  else {\n\t    (document.head || document.body).appendChild(script);\n\t  }\n\t  this.script = script;\n\t\n\t  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n\t  \n\t  if (isUAgecko) {\n\t    setTimeout(function () {\n\t      var iframe = document.createElement('iframe');\n\t      document.body.appendChild(iframe);\n\t      document.body.removeChild(iframe);\n\t    }, 100);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes with a hidden iframe.\n\t *\n\t * @param {String} data to send\n\t * @param {Function} called upon flush.\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doWrite = function (data, fn) {\n\t  var self = this;\n\t\n\t  if (!this.form) {\n\t    var form = document.createElement('form');\n\t    var area = document.createElement('textarea');\n\t    var id = this.iframeId = 'eio_iframe_' + this.index;\n\t    var iframe;\n\t\n\t    form.className = 'socketio';\n\t    form.style.position = 'absolute';\n\t    form.style.top = '-1000px';\n\t    form.style.left = '-1000px';\n\t    form.target = id;\n\t    form.method = 'POST';\n\t    form.setAttribute('accept-charset', 'utf-8');\n\t    area.name = 'd';\n\t    form.appendChild(area);\n\t    document.body.appendChild(form);\n\t\n\t    this.form = form;\n\t    this.area = area;\n\t  }\n\t\n\t  this.form.action = this.uri();\n\t\n\t  function complete () {\n\t    initIframe();\n\t    fn();\n\t  }\n\t\n\t  function initIframe () {\n\t    if (self.iframe) {\n\t      try {\n\t        self.form.removeChild(self.iframe);\n\t      } catch (e) {\n\t        self.onError('jsonp polling iframe removal error', e);\n\t      }\n\t    }\n\t\n\t    try {\n\t      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n\t      var html = '<iframe src=\"javascript:0\" name=\"'+ self.iframeId +'\">';\n\t      iframe = document.createElement(html);\n\t    } catch (e) {\n\t      iframe = document.createElement('iframe');\n\t      iframe.name = self.iframeId;\n\t      iframe.src = 'javascript:0';\n\t    }\n\t\n\t    iframe.id = self.iframeId;\n\t\n\t    self.form.appendChild(iframe);\n\t    self.iframe = iframe;\n\t  }\n\t\n\t  initIframe();\n\t\n\t  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n\t  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\t  data = data.replace(rEscapedNewline, '\\\\\\n');\n\t  this.area.value = data.replace(rNewline, '\\\\n');\n\t\n\t  try {\n\t    this.form.submit();\n\t  } catch(e) {}\n\t\n\t  if (this.iframe.attachEvent) {\n\t    this.iframe.onreadystatechange = function(){\n\t      if (self.iframe.readyState == 'complete') {\n\t        complete();\n\t      }\n\t    };\n\t  } else {\n\t    this.iframe.onload = complete;\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 187:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module requirements.\n\t */\n\t\n\tvar XMLHttpRequest = __webpack_require__(38);\n\tvar Polling = __webpack_require__(71);\n\tvar Emitter = __webpack_require__(39);\n\tvar inherit = __webpack_require__(16);\n\tvar debug = __webpack_require__(4)('engine.io-client:polling-xhr');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = XHR;\n\tmodule.exports.Request = Request;\n\t\n\t/**\n\t * Empty function\n\t */\n\t\n\tfunction empty(){}\n\t\n\t/**\n\t * XHR Polling constructor.\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction XHR(opts){\n\t  Polling.call(this, opts);\n\t\n\t  if (global.location) {\n\t    var isSSL = 'https:' == location.protocol;\n\t    var port = location.port;\n\t\n\t    // some user agents have empty `location.port`\n\t    if (!port) {\n\t      port = isSSL ? 443 : 80;\n\t    }\n\t\n\t    this.xd = opts.hostname != global.location.hostname ||\n\t      port != opts.port;\n\t    this.xs = opts.secure != isSSL;\n\t  } else {\n\t    this.extraHeaders = opts.extraHeaders;\n\t  }\n\t}\n\t\n\t/**\n\t * Inherits from Polling.\n\t */\n\t\n\tinherit(XHR, Polling);\n\t\n\t/**\n\t * XHR supports binary\n\t */\n\t\n\tXHR.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Creates a request.\n\t *\n\t * @param {String} method\n\t * @api private\n\t */\n\t\n\tXHR.prototype.request = function(opts){\n\t  opts = opts || {};\n\t  opts.uri = this.uri();\n\t  opts.xd = this.xd;\n\t  opts.xs = this.xs;\n\t  opts.agent = this.agent || false;\n\t  opts.supportsBinary = this.supportsBinary;\n\t  opts.enablesXDR = this.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  opts.extraHeaders = this.extraHeaders;\n\t\n\t  return new Request(opts);\n\t};\n\t\n\t/**\n\t * Sends data.\n\t *\n\t * @param {String} data to send.\n\t * @param {Function} called upon flush.\n\t * @api private\n\t */\n\t\n\tXHR.prototype.doWrite = function(data, fn){\n\t  var isBinary = typeof data !== 'string' && data !== undefined;\n\t  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n\t  var self = this;\n\t  req.on('success', fn);\n\t  req.on('error', function(err){\n\t    self.onError('xhr post error', err);\n\t  });\n\t  this.sendXhr = req;\n\t};\n\t\n\t/**\n\t * Starts a poll cycle.\n\t *\n\t * @api private\n\t */\n\t\n\tXHR.prototype.doPoll = function(){\n\t  debug('xhr poll');\n\t  var req = this.request();\n\t  var self = this;\n\t  req.on('data', function(data){\n\t    self.onData(data);\n\t  });\n\t  req.on('error', function(err){\n\t    self.onError('xhr poll error', err);\n\t  });\n\t  this.pollXhr = req;\n\t};\n\t\n\t/**\n\t * Request constructor\n\t *\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Request(opts){\n\t  this.method = opts.method || 'GET';\n\t  this.uri = opts.uri;\n\t  this.xd = !!opts.xd;\n\t  this.xs = !!opts.xs;\n\t  this.async = false !== opts.async;\n\t  this.data = undefined != opts.data ? opts.data : null;\n\t  this.agent = opts.agent;\n\t  this.isBinary = opts.isBinary;\n\t  this.supportsBinary = opts.supportsBinary;\n\t  this.enablesXDR = opts.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t\n\t  this.create();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\t\n\t/**\n\t * Creates the XHR object and sends the request.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.create = function(){\n\t  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t\n\t  var xhr = this.xhr = new XMLHttpRequest(opts);\n\t  var self = this;\n\t\n\t  try {\n\t    debug('xhr open %s: %s', this.method, this.uri);\n\t    xhr.open(this.method, this.uri, this.async);\n\t    try {\n\t      if (this.extraHeaders) {\n\t        xhr.setDisableHeaderCheck(true);\n\t        for (var i in this.extraHeaders) {\n\t          if (this.extraHeaders.hasOwnProperty(i)) {\n\t            xhr.setRequestHeader(i, this.extraHeaders[i]);\n\t          }\n\t        }\n\t      }\n\t    } catch (e) {}\n\t    if (this.supportsBinary) {\n\t      // This has to be done after open because Firefox is stupid\n\t      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n\t      xhr.responseType = 'arraybuffer';\n\t    }\n\t\n\t    if ('POST' == this.method) {\n\t      try {\n\t        if (this.isBinary) {\n\t          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n\t        } else {\n\t          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n\t        }\n\t      } catch (e) {}\n\t    }\n\t\n\t    // ie6 check\n\t    if ('withCredentials' in xhr) {\n\t      xhr.withCredentials = true;\n\t    }\n\t\n\t    if (this.hasXDR()) {\n\t      xhr.onload = function(){\n\t        self.onLoad();\n\t      };\n\t      xhr.onerror = function(){\n\t        self.onError(xhr.responseText);\n\t      };\n\t    } else {\n\t      xhr.onreadystatechange = function(){\n\t        if (4 != xhr.readyState) return;\n\t        if (200 == xhr.status || 1223 == xhr.status) {\n\t          self.onLoad();\n\t        } else {\n\t          // make sure the `error` event handler that's user-set\n\t          // does not throw in the same tick and gets caught here\n\t          setTimeout(function(){\n\t            self.onError(xhr.status);\n\t          }, 0);\n\t        }\n\t      };\n\t    }\n\t\n\t    debug('xhr data %s', this.data);\n\t    xhr.send(this.data);\n\t  } catch (e) {\n\t    // Need to defer since .create() is called directly fhrom the constructor\n\t    // and thus the 'error' event can only be only bound *after* this exception\n\t    // occurs.  Therefore, also, we cannot throw here at all.\n\t    setTimeout(function() {\n\t      self.onError(e);\n\t    }, 0);\n\t    return;\n\t  }\n\t\n\t  if (global.document) {\n\t    this.index = Request.requestsCount++;\n\t    Request.requests[this.index] = this;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful response.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onSuccess = function(){\n\t  this.emit('success');\n\t  this.cleanup();\n\t};\n\t\n\t/**\n\t * Called if we have data.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onData = function(data){\n\t  this.emit('data', data);\n\t  this.onSuccess();\n\t};\n\t\n\t/**\n\t * Called upon error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onError = function(err){\n\t  this.emit('error', err);\n\t  this.cleanup(true);\n\t};\n\t\n\t/**\n\t * Cleans up house.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.cleanup = function(fromError){\n\t  if ('undefined' == typeof this.xhr || null === this.xhr) {\n\t    return;\n\t  }\n\t  // xmlhttprequest\n\t  if (this.hasXDR()) {\n\t    this.xhr.onload = this.xhr.onerror = empty;\n\t  } else {\n\t    this.xhr.onreadystatechange = empty;\n\t  }\n\t\n\t  if (fromError) {\n\t    try {\n\t      this.xhr.abort();\n\t    } catch(e) {}\n\t  }\n\t\n\t  if (global.document) {\n\t    delete Request.requests[this.index];\n\t  }\n\t\n\t  this.xhr = null;\n\t};\n\t\n\t/**\n\t * Called upon load.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onLoad = function(){\n\t  var data;\n\t  try {\n\t    var contentType;\n\t    try {\n\t      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n\t    } catch (e) {}\n\t    if (contentType === 'application/octet-stream') {\n\t      data = this.xhr.response;\n\t    } else {\n\t      if (!this.supportsBinary) {\n\t        data = this.xhr.responseText;\n\t      } else {\n\t        try {\n\t          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n\t        } catch (e) {\n\t          var ui8Arr = new Uint8Array(this.xhr.response);\n\t          var dataArray = [];\n\t          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n\t            dataArray.push(ui8Arr[idx]);\n\t          }\n\t\n\t          data = String.fromCharCode.apply(null, dataArray);\n\t        }\n\t      }\n\t    }\n\t  } catch (e) {\n\t    this.onError(e);\n\t  }\n\t  if (null != data) {\n\t    this.onData(data);\n\t  }\n\t};\n\t\n\t/**\n\t * Check if it has XDomainRequest.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.hasXDR = function(){\n\t  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n\t};\n\t\n\t/**\n\t * Aborts the request.\n\t *\n\t * @api public\n\t */\n\t\n\tRequest.prototype.abort = function(){\n\t  this.cleanup();\n\t};\n\t\n\t/**\n\t * Aborts pending requests when unloading the window. This is needed to prevent\n\t * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n\t * emitted.\n\t */\n\t\n\tif (global.document) {\n\t  Request.requestsCount = 0;\n\t  Request.requests = {};\n\t  if (global.attachEvent) {\n\t    global.attachEvent('onunload', unloadHandler);\n\t  } else if (global.addEventListener) {\n\t    global.addEventListener('beforeunload', unloadHandler, false);\n\t  }\n\t}\n\t\n\tfunction unloadHandler() {\n\t  for (var i in Request.requests) {\n\t    if (Request.requests.hasOwnProperty(i)) {\n\t      Request.requests[i].abort();\n\t    }\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 188:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(37);\n\tvar parser = __webpack_require__(7);\n\tvar parseqs = __webpack_require__(40);\n\tvar inherit = __webpack_require__(16);\n\tvar yeast = __webpack_require__(72);\n\tvar debug = __webpack_require__(4)('engine.io-client:websocket');\n\tvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\t\n\t/**\n\t * Get either the `WebSocket` or `MozWebSocket` globals\n\t * in the browser or try to resolve WebSocket-compatible\n\t * interface exposed by `ws` for Node-like environment.\n\t */\n\t\n\tvar WebSocket = BrowserWebSocket;\n\tif (!WebSocket && typeof window === 'undefined') {\n\t  try {\n\t    WebSocket = __webpack_require__(212);\n\t  } catch (e) { }\n\t}\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = WS;\n\t\n\t/**\n\t * WebSocket transport constructor.\n\t *\n\t * @api {Object} connection options\n\t * @api public\n\t */\n\t\n\tfunction WS(opts){\n\t  var forceBase64 = (opts && opts.forceBase64);\n\t  if (forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  this.perMessageDeflate = opts.perMessageDeflate;\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(WS, Transport);\n\t\n\t/**\n\t * Transport name.\n\t *\n\t * @api public\n\t */\n\t\n\tWS.prototype.name = 'websocket';\n\t\n\t/*\n\t * WebSockets support binary\n\t */\n\t\n\tWS.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Opens socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doOpen = function(){\n\t  if (!this.check()) {\n\t    // let probe timeout\n\t    return;\n\t  }\n\t\n\t  var self = this;\n\t  var uri = this.uri();\n\t  var protocols = void(0);\n\t  var opts = {\n\t    agent: this.agent,\n\t    perMessageDeflate: this.perMessageDeflate\n\t  };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t  if (this.extraHeaders) {\n\t    opts.headers = this.extraHeaders;\n\t  }\n\t\n\t  this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\t\n\t  if (this.ws.binaryType === undefined) {\n\t    this.supportsBinary = false;\n\t  }\n\t\n\t  if (this.ws.supports && this.ws.supports.binary) {\n\t    this.supportsBinary = true;\n\t    this.ws.binaryType = 'buffer';\n\t  } else {\n\t    this.ws.binaryType = 'arraybuffer';\n\t  }\n\t\n\t  this.addEventListeners();\n\t};\n\t\n\t/**\n\t * Adds event listeners to the socket\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.addEventListeners = function(){\n\t  var self = this;\n\t\n\t  this.ws.onopen = function(){\n\t    self.onOpen();\n\t  };\n\t  this.ws.onclose = function(){\n\t    self.onClose();\n\t  };\n\t  this.ws.onmessage = function(ev){\n\t    self.onData(ev.data);\n\t  };\n\t  this.ws.onerror = function(e){\n\t    self.onError('websocket error', e);\n\t  };\n\t};\n\t\n\t/**\n\t * Override `onData` to use a timer on iOS.\n\t * See: https://gist.github.com/mloughran/2052006\n\t *\n\t * @api private\n\t */\n\t\n\tif ('undefined' != typeof navigator\n\t  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n\t  WS.prototype.onData = function(data){\n\t    var self = this;\n\t    setTimeout(function(){\n\t      Transport.prototype.onData.call(self, data);\n\t    }, 0);\n\t  };\n\t}\n\t\n\t/**\n\t * Writes data to socket.\n\t *\n\t * @param {Array} array of packets.\n\t * @api private\n\t */\n\t\n\tWS.prototype.write = function(packets){\n\t  var self = this;\n\t  this.writable = false;\n\t\n\t  // encodePacket efficient as it uses WS framing\n\t  // no need for encodePayload\n\t  var total = packets.length;\n\t  for (var i = 0, l = total; i < l; i++) {\n\t    (function(packet) {\n\t      parser.encodePacket(packet, self.supportsBinary, function(data) {\n\t        if (!BrowserWebSocket) {\n\t          // always create a new object (GH-437)\n\t          var opts = {};\n\t          if (packet.options) {\n\t            opts.compress = packet.options.compress;\n\t          }\n\t\n\t          if (self.perMessageDeflate) {\n\t            var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n\t            if (len < self.perMessageDeflate.threshold) {\n\t              opts.compress = false;\n\t            }\n\t          }\n\t        }\n\t\n\t        //Sometimes the websocket has already been closed but the browser didn't\n\t        //have a chance of informing us about it yet, in that case send will\n\t        //throw an error\n\t        try {\n\t          if (BrowserWebSocket) {\n\t            // TypeError is thrown when passing the second argument on Safari\n\t            self.ws.send(data);\n\t          } else {\n\t            self.ws.send(data, opts);\n\t          }\n\t        } catch (e){\n\t          debug('websocket closed before onclose event');\n\t        }\n\t\n\t        --total || done();\n\t      });\n\t    })(packets[i]);\n\t  }\n\t\n\t  function done(){\n\t    self.emit('flush');\n\t\n\t    // fake drain\n\t    // defer to next tick to allow Socket to clear writeBuffer\n\t    setTimeout(function(){\n\t      self.writable = true;\n\t      self.emit('drain');\n\t    }, 0);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon close\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.onClose = function(){\n\t  Transport.prototype.onClose.call(this);\n\t};\n\t\n\t/**\n\t * Closes socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doClose = function(){\n\t  if (typeof this.ws !== 'undefined') {\n\t    this.ws.close();\n\t  }\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.uri = function(){\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'wss' : 'ws';\n\t  var port = '';\n\t\n\t  // avoid port if default for schema\n\t  if (this.port && (('wss' == schema && this.port != 443)\n\t    || ('ws' == schema && this.port != 80))) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // append timestamp to URI\n\t  if (this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  // communicate binary support capabilities\n\t  if (!this.supportsBinary) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n\t};\n\t\n\t/**\n\t * Feature detection for WebSocket.\n\t *\n\t * @return {Boolean} whether this transport is available.\n\t * @api public\n\t */\n\t\n\tWS.prototype.check = function(){\n\t  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 189:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Gets the keys for an object.\n\t *\n\t * @return {Array} keys\n\t * @api private\n\t */\n\t\n\tmodule.exports = Object.keys || function keys (obj){\n\t  var arr = [];\n\t  var has = Object.prototype.hasOwnProperty;\n\t\n\t  for (var i in obj) {\n\t    if (has.call(obj, i)) {\n\t      arr.push(i);\n\t    }\n\t  }\n\t  return arr;\n\t};\n\n\n/***/ },\n\n/***/ 190:\n/***/ function(module, exports) {\n\n\tmodule.exports = after\n\t\n\tfunction after(count, callback, err_cb) {\n\t    var bail = false\n\t    err_cb = err_cb || noop\n\t    proxy.count = count\n\t\n\t    return (count === 0) ? callback() : proxy\n\t\n\t    function proxy(err, result) {\n\t        if (proxy.count <= 0) {\n\t            throw new Error('after called too many times')\n\t        }\n\t        --proxy.count\n\t\n\t        // after first error, rest are passed to err_cb\n\t        if (err) {\n\t            bail = true\n\t            callback(err)\n\t            // future error callbacks will go to error handler\n\t            callback = err_cb\n\t        } else if (proxy.count === 0 && !bail) {\n\t            callback(null, result)\n\t        }\n\t    }\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ },\n\n/***/ 191:\n/***/ function(module, exports) {\n\n\t/**\n\t * An abstraction for slicing an arraybuffer even when\n\t * ArrayBuffer.prototype.slice is not supported\n\t *\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(arraybuffer, start, end) {\n\t  var bytes = arraybuffer.byteLength;\n\t  start = start || 0;\n\t  end = end || bytes;\n\t\n\t  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\t\n\t  if (start < 0) { start += bytes; }\n\t  if (end < 0) { end += bytes; }\n\t  if (end > bytes) { end = bytes; }\n\t\n\t  if (start >= bytes || start >= end || bytes === 0) {\n\t    return new ArrayBuffer(0);\n\t  }\n\t\n\t  var abv = new Uint8Array(arraybuffer);\n\t  var result = new Uint8Array(end - start);\n\t  for (var i = start, ii = 0; i < end; i++, ii++) {\n\t    result[ii] = abv[i];\n\t  }\n\t  return result.buffer;\n\t};\n\n\n/***/ },\n\n/***/ 192:\n/***/ function(module, exports) {\n\n\t/*\n\t * base64-arraybuffer\n\t * https://github.com/niklasvh/base64-arraybuffer\n\t *\n\t * Copyright (c) 2012 Niklas von Hertzen\n\t * Licensed under the MIT license.\n\t */\n\t(function(chars){\n\t  \"use strict\";\n\t\n\t  exports.encode = function(arraybuffer) {\n\t    var bytes = new Uint8Array(arraybuffer),\n\t    i, len = bytes.length, base64 = \"\";\n\t\n\t    for (i = 0; i < len; i+=3) {\n\t      base64 += chars[bytes[i] >> 2];\n\t      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n\t      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n\t      base64 += chars[bytes[i + 2] & 63];\n\t    }\n\t\n\t    if ((len % 3) === 2) {\n\t      base64 = base64.substring(0, base64.length - 1) + \"=\";\n\t    } else if (len % 3 === 1) {\n\t      base64 = base64.substring(0, base64.length - 2) + \"==\";\n\t    }\n\t\n\t    return base64;\n\t  };\n\t\n\t  exports.decode =  function(base64) {\n\t    var bufferLength = base64.length * 0.75,\n\t    len = base64.length, i, p = 0,\n\t    encoded1, encoded2, encoded3, encoded4;\n\t\n\t    if (base64[base64.length - 1] === \"=\") {\n\t      bufferLength--;\n\t      if (base64[base64.length - 2] === \"=\") {\n\t        bufferLength--;\n\t      }\n\t    }\n\t\n\t    var arraybuffer = new ArrayBuffer(bufferLength),\n\t    bytes = new Uint8Array(arraybuffer);\n\t\n\t    for (i = 0; i < len; i+=4) {\n\t      encoded1 = chars.indexOf(base64[i]);\n\t      encoded2 = chars.indexOf(base64[i+1]);\n\t      encoded3 = chars.indexOf(base64[i+2]);\n\t      encoded4 = chars.indexOf(base64[i+3]);\n\t\n\t      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n\t      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n\t      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n\t    }\n\t\n\t    return arraybuffer;\n\t  };\n\t})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n\n/***/ },\n\n/***/ 193:\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Create a blob builder even when vendor prefixes exist\n\t */\n\t\n\tvar BlobBuilder = global.BlobBuilder\n\t  || global.WebKitBlobBuilder\n\t  || global.MSBlobBuilder\n\t  || global.MozBlobBuilder;\n\t\n\t/**\n\t * Check if Blob constructor is supported\n\t */\n\t\n\tvar blobSupported = (function() {\n\t  try {\n\t    var a = new Blob(['hi']);\n\t    return a.size === 2;\n\t  } catch(e) {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * Check if Blob constructor supports ArrayBufferViews\n\t * Fails in Safari 6, so we need to map to ArrayBuffers there.\n\t */\n\t\n\tvar blobSupportsArrayBufferView = blobSupported && (function() {\n\t  try {\n\t    var b = new Blob([new Uint8Array([1,2])]);\n\t    return b.size === 2;\n\t  } catch(e) {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * Check if BlobBuilder is supported\n\t */\n\t\n\tvar blobBuilderSupported = BlobBuilder\n\t  && BlobBuilder.prototype.append\n\t  && BlobBuilder.prototype.getBlob;\n\t\n\t/**\n\t * Helper function that maps ArrayBufferViews to ArrayBuffers\n\t * Used by BlobBuilder constructor and old browsers that didn't\n\t * support it in the Blob constructor.\n\t */\n\t\n\tfunction mapArrayBufferViews(ary) {\n\t  for (var i = 0; i < ary.length; i++) {\n\t    var chunk = ary[i];\n\t    if (chunk.buffer instanceof ArrayBuffer) {\n\t      var buf = chunk.buffer;\n\t\n\t      // if this is a subarray, make a copy so we only\n\t      // include the subarray region from the underlying buffer\n\t      if (chunk.byteLength !== buf.byteLength) {\n\t        var copy = new Uint8Array(chunk.byteLength);\n\t        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n\t        buf = copy.buffer;\n\t      }\n\t\n\t      ary[i] = buf;\n\t    }\n\t  }\n\t}\n\t\n\tfunction BlobBuilderConstructor(ary, options) {\n\t  options = options || {};\n\t\n\t  var bb = new BlobBuilder();\n\t  mapArrayBufferViews(ary);\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    bb.append(ary[i]);\n\t  }\n\t\n\t  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n\t};\n\t\n\tfunction BlobConstructor(ary, options) {\n\t  mapArrayBufferViews(ary);\n\t  return new Blob(ary, options || {});\n\t};\n\t\n\tmodule.exports = (function() {\n\t  if (blobSupported) {\n\t    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n\t  } else if (blobBuilderSupported) {\n\t    return BlobBuilderConstructor;\n\t  } else {\n\t    return undefined;\n\t  }\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 194:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(195);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Right now only Buffer and ArrayBuffer are supported..\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary(data) {\n\t\n\t  function _hasBinary(obj) {\n\t    if (!obj) return false;\n\t\n\t    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n\t         (global.Blob && obj instanceof Blob) ||\n\t         (global.File && obj instanceof File)\n\t        ) {\n\t      return true;\n\t    }\n\t\n\t    if (isArray(obj)) {\n\t      for (var i = 0; i < obj.length; i++) {\n\t          if (_hasBinary(obj[i])) {\n\t              return true;\n\t          }\n\t      }\n\t    } else if (obj && 'object' == typeof obj) {\n\t      if (obj.toJSON) {\n\t        obj = obj.toJSON();\n\t      }\n\t\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  return _hasBinary(data);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 195:\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n\n/***/ 196:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/utf8js v2.0.0 by @mathias */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code,\n\t\t// and use it as `root`\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar stringFromCharCode = String.fromCharCode;\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [];\n\t\t\tvar counter = 0;\n\t\t\tvar length = string.length;\n\t\t\tvar value;\n\t\t\tvar extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2encode(array) {\n\t\t\tvar length = array.length;\n\t\t\tvar index = -1;\n\t\t\tvar value;\n\t\t\tvar output = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tvalue = array[index];\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\tfunction checkScalarValue(codePoint) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction createByte(codePoint, shift) {\n\t\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t\t}\n\t\n\t\tfunction encodeCodePoint(codePoint) {\n\t\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\t\treturn stringFromCharCode(codePoint);\n\t\t\t}\n\t\t\tvar symbol = '';\n\t\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\t\treturn symbol;\n\t\t}\n\t\n\t\tfunction utf8encode(string) {\n\t\t\tvar codePoints = ucs2decode(string);\n\t\t\tvar length = codePoints.length;\n\t\t\tvar index = -1;\n\t\t\tvar codePoint;\n\t\t\tvar byteString = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tcodePoint = codePoints[index];\n\t\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t\t}\n\t\t\treturn byteString;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction readContinuationByte() {\n\t\t\tif (byteIndex >= byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\t\treturn continuationByte & 0x3F;\n\t\t\t}\n\t\n\t\t\t// If we end up here, it’s not a continuation byte\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t\n\t\tfunction decodeSymbol() {\n\t\t\tvar byte1;\n\t\t\tvar byte2;\n\t\t\tvar byte3;\n\t\t\tvar byte4;\n\t\t\tvar codePoint;\n\t\n\t\t\tif (byteIndex > byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tif (byteIndex == byteCount) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Read first byte\n\t\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\t// 1-byte sequence (no continuation bytes)\n\t\t\tif ((byte1 & 0x80) == 0) {\n\t\t\t\treturn byte1;\n\t\t\t}\n\t\n\t\t\t// 2-byte sequence\n\t\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\t\tvar byte2 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\t\tif (codePoint >= 0x80) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 4-byte sequence\n\t\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tbyte4 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthrow Error('Invalid UTF-8 detected');\n\t\t}\n\t\n\t\tvar byteArray;\n\t\tvar byteCount;\n\t\tvar byteIndex;\n\t\tfunction utf8decode(byteString) {\n\t\t\tbyteArray = ucs2decode(byteString);\n\t\t\tbyteCount = byteArray.length;\n\t\t\tbyteIndex = 0;\n\t\t\tvar codePoints = [];\n\t\t\tvar tmp;\n\t\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\t\tcodePoints.push(tmp);\n\t\t\t}\n\t\t\treturn ucs2encode(codePoints);\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar utf8 = {\n\t\t\t'version': '2.0.0',\n\t\t\t'encode': utf8encode,\n\t\t\t'decode': utf8decode\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn utf8;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = utf8;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tvar object = {};\n\t\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\t\tfor (var key in utf8) {\n\t\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.utf8 = utf8;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(19)(module), (function() { return this; }())))\n\n/***/ },\n\n/***/ 197:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t *\n\t * Logic borrowed from Modernizr:\n\t *\n\t *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n\t */\n\t\n\ttry {\n\t  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n\t    'withCredentials' in new XMLHttpRequest();\n\t} catch (err) {\n\t  // if XMLHttp support is disabled in IE then it will throw\n\t  // when trying to create\n\t  module.exports = false;\n\t}\n\n\n/***/ },\n\n/***/ 198:\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * JSON parse.\n\t *\n\t * @see Based on jQuery#parseJSON (MIT) and JSON2\n\t * @api private\n\t */\n\t\n\tvar rvalidchars = /^[\\],:{}\\s]*$/;\n\tvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n\tvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n\tvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\n\tvar rtrimLeft = /^\\s+/;\n\tvar rtrimRight = /\\s+$/;\n\t\n\tmodule.exports = function parsejson(data) {\n\t  if ('string' != typeof data || !data) {\n\t    return null;\n\t  }\n\t\n\t  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\t\n\t  // Attempt to parse using the native JSON parser first\n\t  if (global.JSON && JSON.parse) {\n\t    return JSON.parse(data);\n\t  }\n\t\n\t  if (rvalidchars.test(data.replace(rvalidescape, '@')\n\t      .replace(rvalidtokens, ']')\n\t      .replace(rvalidbraces, ''))) {\n\t    return (new Function('return ' + data))();\n\t  }\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 199:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(200);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Right now only Buffer and ArrayBuffer are supported..\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary(data) {\n\t\n\t  function _hasBinary(obj) {\n\t    if (!obj) return false;\n\t\n\t    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n\t         (global.Blob && obj instanceof Blob) ||\n\t         (global.File && obj instanceof File)\n\t        ) {\n\t      return true;\n\t    }\n\t\n\t    if (isArray(obj)) {\n\t      for (var i = 0; i < obj.length; i++) {\n\t          if (_hasBinary(obj[i])) {\n\t              return true;\n\t          }\n\t      }\n\t    } else if (obj && 'object' == typeof obj) {\n\t      // see: https://github.com/Automattic/has-binary/pull/4\n\t      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n\t        obj = obj.toJSON();\n\t      }\n\t\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  return _hasBinary(data);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 200:\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n\n/***/ 201:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*global Blob,File*/\n\t\n\t/**\n\t * Module requirements\n\t */\n\t\n\tvar isArray = __webpack_require__(76);\n\tvar isBuf = __webpack_require__(75);\n\t\n\t/**\n\t * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n\t * Anything with blobs or files should be fed through removeBlobs before coming\n\t * here.\n\t *\n\t * @param {Object} packet - socket.io event packet\n\t * @return {Object} with deconstructed packet and list of buffers\n\t * @api public\n\t */\n\t\n\texports.deconstructPacket = function(packet){\n\t  var buffers = [];\n\t  var packetData = packet.data;\n\t\n\t  function _deconstructPacket(data) {\n\t    if (!data) return data;\n\t\n\t    if (isBuf(data)) {\n\t      var placeholder = { _placeholder: true, num: buffers.length };\n\t      buffers.push(data);\n\t      return placeholder;\n\t    } else if (isArray(data)) {\n\t      var newData = new Array(data.length);\n\t      for (var i = 0; i < data.length; i++) {\n\t        newData[i] = _deconstructPacket(data[i]);\n\t      }\n\t      return newData;\n\t    } else if ('object' == typeof data && !(data instanceof Date)) {\n\t      var newData = {};\n\t      for (var key in data) {\n\t        newData[key] = _deconstructPacket(data[key]);\n\t      }\n\t      return newData;\n\t    }\n\t    return data;\n\t  }\n\t\n\t  var pack = packet;\n\t  pack.data = _deconstructPacket(packetData);\n\t  pack.attachments = buffers.length; // number of binary 'attachments'\n\t  return {packet: pack, buffers: buffers};\n\t};\n\t\n\t/**\n\t * Reconstructs a binary packet from its placeholder packet and buffers\n\t *\n\t * @param {Object} packet - event packet with placeholders\n\t * @param {Array} buffers - binary buffers to put in placeholder positions\n\t * @return {Object} reconstructed packet\n\t * @api public\n\t */\n\t\n\texports.reconstructPacket = function(packet, buffers) {\n\t  var curPlaceHolder = 0;\n\t\n\t  function _reconstructPacket(data) {\n\t    if (data && data._placeholder) {\n\t      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n\t      return buf;\n\t    } else if (isArray(data)) {\n\t      for (var i = 0; i < data.length; i++) {\n\t        data[i] = _reconstructPacket(data[i]);\n\t      }\n\t      return data;\n\t    } else if (data && 'object' == typeof data) {\n\t      for (var key in data) {\n\t        data[key] = _reconstructPacket(data[key]);\n\t      }\n\t      return data;\n\t    }\n\t    return data;\n\t  }\n\t\n\t  packet.data = _reconstructPacket(packet.data);\n\t  packet.attachments = undefined; // no longer useful\n\t  return packet;\n\t};\n\t\n\t/**\n\t * Asynchronously removes Blobs or Files from data via\n\t * FileReader's readAsArrayBuffer method. Used before encoding\n\t * data as msgpack. Calls callback with the blobless data.\n\t *\n\t * @param {Object} data\n\t * @param {Function} callback\n\t * @api private\n\t */\n\t\n\texports.removeBlobs = function(data, callback) {\n\t  function _removeBlobs(obj, curKey, containingObject) {\n\t    if (!obj) return obj;\n\t\n\t    // convert any blob\n\t    if ((global.Blob && obj instanceof Blob) ||\n\t        (global.File && obj instanceof File)) {\n\t      pendingBlobs++;\n\t\n\t      // async filereader\n\t      var fileReader = new FileReader();\n\t      fileReader.onload = function() { // this.result == arraybuffer\n\t        if (containingObject) {\n\t          containingObject[curKey] = this.result;\n\t        }\n\t        else {\n\t          bloblessData = this.result;\n\t        }\n\t\n\t        // if nothing pending its callback time\n\t        if(! --pendingBlobs) {\n\t          callback(bloblessData);\n\t        }\n\t      };\n\t\n\t      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n\t    } else if (isArray(obj)) { // handle array\n\t      for (var i = 0; i < obj.length; i++) {\n\t        _removeBlobs(obj[i], i, obj);\n\t      }\n\t    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n\t      for (var key in obj) {\n\t        _removeBlobs(obj[key], key, obj);\n\t      }\n\t    }\n\t  }\n\t\n\t  var pendingBlobs = 0;\n\t  var bloblessData = data;\n\t  _removeBlobs(bloblessData);\n\t  if (!pendingBlobs) {\n\t    callback(bloblessData);\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 202:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks[event] = this._callbacks[event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  var self = this;\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  function on() {\n\t    self.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks[event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks[event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks[event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks[event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n\n/***/ 203:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n\t;(function () {\n\t  // Detect the `define` function exposed by asynchronous module loaders. The\n\t  // strict `define` check is necessary for compatibility with `r.js`.\n\t  var isLoader = \"function\" === \"function\" && __webpack_require__(208);\n\t\n\t  // A set of types used to distinguish objects from primitives.\n\t  var objectTypes = {\n\t    \"function\": true,\n\t    \"object\": true\n\t  };\n\t\n\t  // Detect the `exports` object exposed by CommonJS implementations.\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  // Use the `global` object exposed by Node (including Browserify via\n\t  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n\t  // and the `window` object in browsers. Rhino exports a `global` function\n\t  // instead.\n\t  var root = objectTypes[typeof window] && window || this,\n\t      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\t\n\t  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n\t    root = freeGlobal;\n\t  }\n\t\n\t  // Public: Initializes JSON 3 using the given `context` object, attaching the\n\t  // `stringify` and `parse` functions to the specified `exports` object.\n\t  function runInContext(context, exports) {\n\t    context || (context = root[\"Object\"]());\n\t    exports || (exports = root[\"Object\"]());\n\t\n\t    // Native constructor aliases.\n\t    var Number = context[\"Number\"] || root[\"Number\"],\n\t        String = context[\"String\"] || root[\"String\"],\n\t        Object = context[\"Object\"] || root[\"Object\"],\n\t        Date = context[\"Date\"] || root[\"Date\"],\n\t        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n\t        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n\t        Math = context[\"Math\"] || root[\"Math\"],\n\t        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\t\n\t    // Delegate to the native `stringify` and `parse` implementations.\n\t    if (typeof nativeJSON == \"object\" && nativeJSON) {\n\t      exports.stringify = nativeJSON.stringify;\n\t      exports.parse = nativeJSON.parse;\n\t    }\n\t\n\t    // Convenience aliases.\n\t    var objectProto = Object.prototype,\n\t        getClass = objectProto.toString,\n\t        isProperty, forEach, undef;\n\t\n\t    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n\t    var isExtended = new Date(-3509827334573292);\n\t    try {\n\t      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n\t      // results for certain dates in Opera >= 10.53.\n\t      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n\t        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n\t        // but clips the values returned by the date methods to the range of\n\t        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n\t        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n\t    } catch (exception) {}\n\t\n\t    // Internal: Determines whether the native `JSON.stringify` and `parse`\n\t    // implementations are spec-compliant. Based on work by Ken Snyder.\n\t    function has(name) {\n\t      if (has[name] !== undef) {\n\t        // Return cached feature test result.\n\t        return has[name];\n\t      }\n\t      var isSupported;\n\t      if (name == \"bug-string-char-index\") {\n\t        // IE <= 7 doesn't support accessing string characters using square\n\t        // bracket notation. IE 8 only supports this for primitives.\n\t        isSupported = \"a\"[0] != \"a\";\n\t      } else if (name == \"json\") {\n\t        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n\t        // supported.\n\t        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n\t      } else {\n\t        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n\t        // Test `JSON.stringify`.\n\t        if (name == \"json-stringify\") {\n\t          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n\t          if (stringifySupported) {\n\t            // A test function object with a custom `toJSON` method.\n\t            (value = function () {\n\t              return 1;\n\t            }).toJSON = value;\n\t            try {\n\t              stringifySupported =\n\t                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n\t                // primitives as object literals.\n\t                stringify(0) === \"0\" &&\n\t                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n\t                // literals.\n\t                stringify(new Number()) === \"0\" &&\n\t                stringify(new String()) == '\"\"' &&\n\t                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n\t                // does not define a canonical JSON representation (this applies to\n\t                // objects with `toJSON` properties as well, *unless* they are nested\n\t                // within an object or array).\n\t                stringify(getClass) === undef &&\n\t                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n\t                // FF 3.1b3 pass this test.\n\t                stringify(undef) === undef &&\n\t                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n\t                // respectively, if the value is omitted entirely.\n\t                stringify() === undef &&\n\t                // FF 3.1b1, 2 throw an error if the given value is not a number,\n\t                // string, array, object, Boolean, or `null` literal. This applies to\n\t                // objects with custom `toJSON` methods as well, unless they are nested\n\t                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n\t                // methods entirely.\n\t                stringify(value) === \"1\" &&\n\t                stringify([value]) == \"[1]\" &&\n\t                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n\t                // `\"[null]\"`.\n\t                stringify([undef]) == \"[null]\" &&\n\t                // YUI 3.0.0b1 fails to serialize `null` literals.\n\t                stringify(null) == \"null\" &&\n\t                // FF 3.1b1, 2 halts serialization if an array contains a function:\n\t                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n\t                // elides non-JSON values from objects and arrays, unless they\n\t                // define custom `toJSON` methods.\n\t                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n\t                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n\t                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n\t                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n\t                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n\t                stringify(null, value) === \"1\" &&\n\t                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n\t                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n\t                // serialize extended years.\n\t                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n\t                // The milliseconds are optional in ES 5, but required in 5.1.\n\t                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n\t                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n\t                // four-digit years instead of six-digit years. Credits: @Yaffle.\n\t                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n\t                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n\t                // values less than 1000. Credits: @Yaffle.\n\t                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n\t            } catch (exception) {\n\t              stringifySupported = false;\n\t            }\n\t          }\n\t          isSupported = stringifySupported;\n\t        }\n\t        // Test `JSON.parse`.\n\t        if (name == \"json-parse\") {\n\t          var parse = exports.parse;\n\t          if (typeof parse == \"function\") {\n\t            try {\n\t              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n\t              // Conforming implementations should also coerce the initial argument to\n\t              // a string prior to parsing.\n\t              if (parse(\"0\") === 0 && !parse(false)) {\n\t                // Simple parsing test.\n\t                value = parse(serialized);\n\t                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n\t                if (parseSupported) {\n\t                  try {\n\t                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n\t                    parseSupported = !parse('\"\\t\"');\n\t                  } catch (exception) {}\n\t                  if (parseSupported) {\n\t                    try {\n\t                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n\t                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n\t                      // certain octal literals.\n\t                      parseSupported = parse(\"01\") !== 1;\n\t                    } catch (exception) {}\n\t                  }\n\t                  if (parseSupported) {\n\t                    try {\n\t                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n\t                      // points. These environments, along with FF 3.1b1 and 2,\n\t                      // also allow trailing commas in JSON objects and arrays.\n\t                      parseSupported = parse(\"1.\") !== 1;\n\t                    } catch (exception) {}\n\t                  }\n\t                }\n\t              }\n\t            } catch (exception) {\n\t              parseSupported = false;\n\t            }\n\t          }\n\t          isSupported = parseSupported;\n\t        }\n\t      }\n\t      return has[name] = !!isSupported;\n\t    }\n\t\n\t    if (!has(\"json\")) {\n\t      // Common `[[Class]]` name aliases.\n\t      var functionClass = \"[object Function]\",\n\t          dateClass = \"[object Date]\",\n\t          numberClass = \"[object Number]\",\n\t          stringClass = \"[object String]\",\n\t          arrayClass = \"[object Array]\",\n\t          booleanClass = \"[object Boolean]\";\n\t\n\t      // Detect incomplete support for accessing string characters by index.\n\t      var charIndexBuggy = has(\"bug-string-char-index\");\n\t\n\t      // Define additional utility methods if the `Date` methods are buggy.\n\t      if (!isExtended) {\n\t        var floor = Math.floor;\n\t        // A mapping between the months of the year and the number of days between\n\t        // January 1st and the first of the respective month.\n\t        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n\t        // Internal: Calculates the number of days between the Unix epoch and the\n\t        // first day of the given month.\n\t        var getDay = function (year, month) {\n\t          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n\t        };\n\t      }\n\t\n\t      // Internal: Determines if a property is a direct property of the given\n\t      // object. Delegates to the native `Object#hasOwnProperty` method.\n\t      if (!(isProperty = objectProto.hasOwnProperty)) {\n\t        isProperty = function (property) {\n\t          var members = {}, constructor;\n\t          if ((members.__proto__ = null, members.__proto__ = {\n\t            // The *proto* property cannot be set multiple times in recent\n\t            // versions of Firefox and SeaMonkey.\n\t            \"toString\": 1\n\t          }, members).toString != getClass) {\n\t            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n\t            // supports the mutable *proto* property.\n\t            isProperty = function (property) {\n\t              // Capture and break the object's prototype chain (see section 8.6.2\n\t              // of the ES 5.1 spec). The parenthesized expression prevents an\n\t              // unsafe transformation by the Closure Compiler.\n\t              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n\t              // Restore the original prototype chain.\n\t              this.__proto__ = original;\n\t              return result;\n\t            };\n\t          } else {\n\t            // Capture a reference to the top-level `Object` constructor.\n\t            constructor = members.constructor;\n\t            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n\t            // other environments.\n\t            isProperty = function (property) {\n\t              var parent = (this.constructor || constructor).prototype;\n\t              return property in this && !(property in parent && this[property] === parent[property]);\n\t            };\n\t          }\n\t          members = null;\n\t          return isProperty.call(this, property);\n\t        };\n\t      }\n\t\n\t      // Internal: Normalizes the `for...in` iteration algorithm across\n\t      // environments. Each enumerated key is yielded to a `callback` function.\n\t      forEach = function (object, callback) {\n\t        var size = 0, Properties, members, property;\n\t\n\t        // Tests for bugs in the current environment's `for...in` algorithm. The\n\t        // `valueOf` property inherits the non-enumerable flag from\n\t        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n\t        (Properties = function () {\n\t          this.valueOf = 0;\n\t        }).prototype.valueOf = 0;\n\t\n\t        // Iterate over a new instance of the `Properties` class.\n\t        members = new Properties();\n\t        for (property in members) {\n\t          // Ignore all properties inherited from `Object.prototype`.\n\t          if (isProperty.call(members, property)) {\n\t            size++;\n\t          }\n\t        }\n\t        Properties = members = null;\n\t\n\t        // Normalize the iteration algorithm.\n\t        if (!size) {\n\t          // A list of non-enumerable properties inherited from `Object.prototype`.\n\t          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n\t          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n\t          // properties.\n\t          forEach = function (object, callback) {\n\t            var isFunction = getClass.call(object) == functionClass, property, length;\n\t            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n\t            for (property in object) {\n\t              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n\t              // certain conditions; IE does not.\n\t              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n\t                callback(property);\n\t              }\n\t            }\n\t            // Manually invoke the callback for each non-enumerable property.\n\t            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n\t          };\n\t        } else if (size == 2) {\n\t          // Safari <= 2.0.4 enumerates shadowed properties twice.\n\t          forEach = function (object, callback) {\n\t            // Create a set of iterated properties.\n\t            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n\t            for (property in object) {\n\t              // Store each property name to prevent double enumeration. The\n\t              // `prototype` property of functions is not enumerated due to cross-\n\t              // environment inconsistencies.\n\t              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n\t                callback(property);\n\t              }\n\t            }\n\t          };\n\t        } else {\n\t          // No bugs detected; use the standard `for...in` algorithm.\n\t          forEach = function (object, callback) {\n\t            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n\t            for (property in object) {\n\t              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n\t                callback(property);\n\t              }\n\t            }\n\t            // Manually invoke the callback for the `constructor` property due to\n\t            // cross-environment inconsistencies.\n\t            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n\t              callback(property);\n\t            }\n\t          };\n\t        }\n\t        return forEach(object, callback);\n\t      };\n\t\n\t      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n\t      // `filter` argument may specify either a function that alters how object and\n\t      // array members are serialized, or an array of strings and numbers that\n\t      // indicates which properties should be serialized. The optional `width`\n\t      // argument may be either a string or number that specifies the indentation\n\t      // level of the output.\n\t      if (!has(\"json-stringify\")) {\n\t        // Internal: A map of control characters and their escaped equivalents.\n\t        var Escapes = {\n\t          92: \"\\\\\\\\\",\n\t          34: '\\\\\"',\n\t          8: \"\\\\b\",\n\t          12: \"\\\\f\",\n\t          10: \"\\\\n\",\n\t          13: \"\\\\r\",\n\t          9: \"\\\\t\"\n\t        };\n\t\n\t        // Internal: Converts `value` into a zero-padded string such that its\n\t        // length is at least equal to `width`. The `width` must be <= 6.\n\t        var leadingZeroes = \"000000\";\n\t        var toPaddedString = function (width, value) {\n\t          // The `|| 0` expression is necessary to work around a bug in\n\t          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n\t          return (leadingZeroes + (value || 0)).slice(-width);\n\t        };\n\t\n\t        // Internal: Double-quotes a string `value`, replacing all ASCII control\n\t        // characters (characters with code unit values between 0 and 31) with\n\t        // their escaped equivalents. This is an implementation of the\n\t        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n\t        var unicodePrefix = \"\\\\u00\";\n\t        var quote = function (value) {\n\t          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n\t          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n\t          for (; index < length; index++) {\n\t            var charCode = value.charCodeAt(index);\n\t            // If the character is a control character, append its Unicode or\n\t            // shorthand escape sequence; otherwise, append the character as-is.\n\t            switch (charCode) {\n\t              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n\t                result += Escapes[charCode];\n\t                break;\n\t              default:\n\t                if (charCode < 32) {\n\t                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n\t                  break;\n\t                }\n\t                result += useCharIndex ? symbols[index] : value.charAt(index);\n\t            }\n\t          }\n\t          return result + '\"';\n\t        };\n\t\n\t        // Internal: Recursively serializes an object. Implements the\n\t        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n\t        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n\t          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n\t          try {\n\t            // Necessary for host object support.\n\t            value = object[property];\n\t          } catch (exception) {}\n\t          if (typeof value == \"object\" && value) {\n\t            className = getClass.call(value);\n\t            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n\t              if (value > -1 / 0 && value < 1 / 0) {\n\t                // Dates are serialized according to the `Date#toJSON` method\n\t                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n\t                // for the ISO 8601 date time string format.\n\t                if (getDay) {\n\t                  // Manually compute the year, month, date, hours, minutes,\n\t                  // seconds, and milliseconds if the `getUTC*` methods are\n\t                  // buggy. Adapted from @Yaffle's `date-shim` project.\n\t                  date = floor(value / 864e5);\n\t                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n\t                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n\t                  date = 1 + date - getDay(year, month);\n\t                  // The `time` value specifies the time within the day (see ES\n\t                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n\t                  // to compute `A modulo B`, as the `%` operator does not\n\t                  // correspond to the `modulo` operation for negative numbers.\n\t                  time = (value % 864e5 + 864e5) % 864e5;\n\t                  // The hours, minutes, seconds, and milliseconds are obtained by\n\t                  // decomposing the time within the day. See section 15.9.1.10.\n\t                  hours = floor(time / 36e5) % 24;\n\t                  minutes = floor(time / 6e4) % 60;\n\t                  seconds = floor(time / 1e3) % 60;\n\t                  milliseconds = time % 1e3;\n\t                } else {\n\t                  year = value.getUTCFullYear();\n\t                  month = value.getUTCMonth();\n\t                  date = value.getUTCDate();\n\t                  hours = value.getUTCHours();\n\t                  minutes = value.getUTCMinutes();\n\t                  seconds = value.getUTCSeconds();\n\t                  milliseconds = value.getUTCMilliseconds();\n\t                }\n\t                // Serialize extended years correctly.\n\t                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n\t                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n\t                  // Months, dates, hours, minutes, and seconds should have two\n\t                  // digits; milliseconds should have three.\n\t                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n\t                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n\t                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n\t              } else {\n\t                value = null;\n\t              }\n\t            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n\t              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n\t              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n\t              // ignores all `toJSON` methods on these objects unless they are\n\t              // defined directly on an instance.\n\t              value = value.toJSON(property);\n\t            }\n\t          }\n\t          if (callback) {\n\t            // If a replacement function was provided, call it to obtain the value\n\t            // for serialization.\n\t            value = callback.call(object, property, value);\n\t          }\n\t          if (value === null) {\n\t            return \"null\";\n\t          }\n\t          className = getClass.call(value);\n\t          if (className == booleanClass) {\n\t            // Booleans are represented literally.\n\t            return \"\" + value;\n\t          } else if (className == numberClass) {\n\t            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n\t            // `\"null\"`.\n\t            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n\t          } else if (className == stringClass) {\n\t            // Strings are double-quoted and escaped.\n\t            return quote(\"\" + value);\n\t          }\n\t          // Recursively serialize objects and arrays.\n\t          if (typeof value == \"object\") {\n\t            // Check for cyclic structures. This is a linear search; performance\n\t            // is inversely proportional to the number of unique nested objects.\n\t            for (length = stack.length; length--;) {\n\t              if (stack[length] === value) {\n\t                // Cyclic structures cannot be serialized by `JSON.stringify`.\n\t                throw TypeError();\n\t              }\n\t            }\n\t            // Add the object to the stack of traversed objects.\n\t            stack.push(value);\n\t            results = [];\n\t            // Save the current indentation level and indent one additional level.\n\t            prefix = indentation;\n\t            indentation += whitespace;\n\t            if (className == arrayClass) {\n\t              // Recursively serialize array elements.\n\t              for (index = 0, length = value.length; index < length; index++) {\n\t                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n\t                results.push(element === undef ? \"null\" : element);\n\t              }\n\t              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n\t            } else {\n\t              // Recursively serialize object members. Members are selected from\n\t              // either a user-specified list of property names, or the object\n\t              // itself.\n\t              forEach(properties || value, function (property) {\n\t                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n\t                if (element !== undef) {\n\t                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n\t                  // is not the empty string, let `member` {quote(property) + \":\"}\n\t                  // be the concatenation of `member` and the `space` character.\"\n\t                  // The \"`space` character\" refers to the literal space\n\t                  // character, not the `space` {width} argument provided to\n\t                  // `JSON.stringify`.\n\t                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n\t                }\n\t              });\n\t              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n\t            }\n\t            // Remove the object from the traversed object stack.\n\t            stack.pop();\n\t            return result;\n\t          }\n\t        };\n\t\n\t        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n\t        exports.stringify = function (source, filter, width) {\n\t          var whitespace, callback, properties, className;\n\t          if (objectTypes[typeof filter] && filter) {\n\t            if ((className = getClass.call(filter)) == functionClass) {\n\t              callback = filter;\n\t            } else if (className == arrayClass) {\n\t              // Convert the property names array into a makeshift set.\n\t              properties = {};\n\t              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n\t            }\n\t          }\n\t          if (width) {\n\t            if ((className = getClass.call(width)) == numberClass) {\n\t              // Convert the `width` to an integer and create a string containing\n\t              // `width` number of space characters.\n\t              if ((width -= width % 1) > 0) {\n\t                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n\t              }\n\t            } else if (className == stringClass) {\n\t              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n\t            }\n\t          }\n\t          // Opera <= 7.54u2 discards the values associated with empty string keys\n\t          // (`\"\"`) only if they are used directly within an object member list\n\t          // (e.g., `!(\"\" in { \"\": 1})`).\n\t          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n\t        };\n\t      }\n\t\n\t      // Public: Parses a JSON source string.\n\t      if (!has(\"json-parse\")) {\n\t        var fromCharCode = String.fromCharCode;\n\t\n\t        // Internal: A map of escaped control characters and their unescaped\n\t        // equivalents.\n\t        var Unescapes = {\n\t          92: \"\\\\\",\n\t          34: '\"',\n\t          47: \"/\",\n\t          98: \"\\b\",\n\t          116: \"\\t\",\n\t          110: \"\\n\",\n\t          102: \"\\f\",\n\t          114: \"\\r\"\n\t        };\n\t\n\t        // Internal: Stores the parser state.\n\t        var Index, Source;\n\t\n\t        // Internal: Resets the parser state and throws a `SyntaxError`.\n\t        var abort = function () {\n\t          Index = Source = null;\n\t          throw SyntaxError();\n\t        };\n\t\n\t        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n\t        // the end of the source string. A token may be a string, number, `null`\n\t        // literal, or Boolean literal.\n\t        var lex = function () {\n\t          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n\t          while (Index < length) {\n\t            charCode = source.charCodeAt(Index);\n\t            switch (charCode) {\n\t              case 9: case 10: case 13: case 32:\n\t                // Skip whitespace tokens, including tabs, carriage returns, line\n\t                // feeds, and space characters.\n\t                Index++;\n\t                break;\n\t              case 123: case 125: case 91: case 93: case 58: case 44:\n\t                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n\t                // the current position.\n\t                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n\t                Index++;\n\t                return value;\n\t              case 34:\n\t                // `\"` delimits a JSON string; advance to the next character and\n\t                // begin parsing the string. String tokens are prefixed with the\n\t                // sentinel `@` character to distinguish them from punctuators and\n\t                // end-of-string tokens.\n\t                for (value = \"@\", Index++; Index < length;) {\n\t                  charCode = source.charCodeAt(Index);\n\t                  if (charCode < 32) {\n\t                    // Unescaped ASCII control characters (those with a code unit\n\t                    // less than the space character) are not permitted.\n\t                    abort();\n\t                  } else if (charCode == 92) {\n\t                    // A reverse solidus (`\\`) marks the beginning of an escaped\n\t                    // control character (including `\"`, `\\`, and `/`) or Unicode\n\t                    // escape sequence.\n\t                    charCode = source.charCodeAt(++Index);\n\t                    switch (charCode) {\n\t                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n\t                        // Revive escaped control characters.\n\t                        value += Unescapes[charCode];\n\t                        Index++;\n\t                        break;\n\t                      case 117:\n\t                        // `\\u` marks the beginning of a Unicode escape sequence.\n\t                        // Advance to the first character and validate the\n\t                        // four-digit code point.\n\t                        begin = ++Index;\n\t                        for (position = Index + 4; Index < position; Index++) {\n\t                          charCode = source.charCodeAt(Index);\n\t                          // A valid sequence comprises four hexdigits (case-\n\t                          // insensitive) that form a single hexadecimal value.\n\t                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n\t                            // Invalid Unicode escape sequence.\n\t                            abort();\n\t                          }\n\t                        }\n\t                        // Revive the escaped character.\n\t                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n\t                        break;\n\t                      default:\n\t                        // Invalid escape sequence.\n\t                        abort();\n\t                    }\n\t                  } else {\n\t                    if (charCode == 34) {\n\t                      // An unescaped double-quote character marks the end of the\n\t                      // string.\n\t                      break;\n\t                    }\n\t                    charCode = source.charCodeAt(Index);\n\t                    begin = Index;\n\t                    // Optimize for the common case where a string is valid.\n\t                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n\t                      charCode = source.charCodeAt(++Index);\n\t                    }\n\t                    // Append the string as-is.\n\t                    value += source.slice(begin, Index);\n\t                  }\n\t                }\n\t                if (source.charCodeAt(Index) == 34) {\n\t                  // Advance to the next character and return the revived string.\n\t                  Index++;\n\t                  return value;\n\t                }\n\t                // Unterminated string.\n\t                abort();\n\t              default:\n\t                // Parse numbers and literals.\n\t                begin = Index;\n\t                // Advance past the negative sign, if one is specified.\n\t                if (charCode == 45) {\n\t                  isSigned = true;\n\t                  charCode = source.charCodeAt(++Index);\n\t                }\n\t                // Parse an integer or floating-point value.\n\t                if (charCode >= 48 && charCode <= 57) {\n\t                  // Leading zeroes are interpreted as octal literals.\n\t                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n\t                    // Illegal octal literal.\n\t                    abort();\n\t                  }\n\t                  isSigned = false;\n\t                  // Parse the integer component.\n\t                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n\t                  // Floats cannot contain a leading decimal point; however, this\n\t                  // case is already accounted for by the parser.\n\t                  if (source.charCodeAt(Index) == 46) {\n\t                    position = ++Index;\n\t                    // Parse the decimal component.\n\t                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n\t                    if (position == Index) {\n\t                      // Illegal trailing decimal.\n\t                      abort();\n\t                    }\n\t                    Index = position;\n\t                  }\n\t                  // Parse exponents. The `e` denoting the exponent is\n\t                  // case-insensitive.\n\t                  charCode = source.charCodeAt(Index);\n\t                  if (charCode == 101 || charCode == 69) {\n\t                    charCode = source.charCodeAt(++Index);\n\t                    // Skip past the sign following the exponent, if one is\n\t                    // specified.\n\t                    if (charCode == 43 || charCode == 45) {\n\t                      Index++;\n\t                    }\n\t                    // Parse the exponential component.\n\t                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n\t                    if (position == Index) {\n\t                      // Illegal empty exponent.\n\t                      abort();\n\t                    }\n\t                    Index = position;\n\t                  }\n\t                  // Coerce the parsed value to a JavaScript number.\n\t                  return +source.slice(begin, Index);\n\t                }\n\t                // A negative sign may only precede numbers.\n\t                if (isSigned) {\n\t                  abort();\n\t                }\n\t                // `true`, `false`, and `null` literals.\n\t                if (source.slice(Index, Index + 4) == \"true\") {\n\t                  Index += 4;\n\t                  return true;\n\t                } else if (source.slice(Index, Index + 5) == \"false\") {\n\t                  Index += 5;\n\t                  return false;\n\t                } else if (source.slice(Index, Index + 4) == \"null\") {\n\t                  Index += 4;\n\t                  return null;\n\t                }\n\t                // Unrecognized token.\n\t                abort();\n\t            }\n\t          }\n\t          // Return the sentinel `$` character if the parser has reached the end\n\t          // of the source string.\n\t          return \"$\";\n\t        };\n\t\n\t        // Internal: Parses a JSON `value` token.\n\t        var get = function (value) {\n\t          var results, hasMembers;\n\t          if (value == \"$\") {\n\t            // Unexpected end of input.\n\t            abort();\n\t          }\n\t          if (typeof value == \"string\") {\n\t            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n\t              // Remove the sentinel `@` character.\n\t              return value.slice(1);\n\t            }\n\t            // Parse object and array literals.\n\t            if (value == \"[\") {\n\t              // Parses a JSON array, returning a new JavaScript array.\n\t              results = [];\n\t              for (;; hasMembers || (hasMembers = true)) {\n\t                value = lex();\n\t                // A closing square bracket marks the end of the array literal.\n\t                if (value == \"]\") {\n\t                  break;\n\t                }\n\t                // If the array literal contains elements, the current token\n\t                // should be a comma separating the previous element from the\n\t                // next.\n\t                if (hasMembers) {\n\t                  if (value == \",\") {\n\t                    value = lex();\n\t                    if (value == \"]\") {\n\t                      // Unexpected trailing `,` in array literal.\n\t                      abort();\n\t                    }\n\t                  } else {\n\t                    // A `,` must separate each array element.\n\t                    abort();\n\t                  }\n\t                }\n\t                // Elisions and leading commas are not permitted.\n\t                if (value == \",\") {\n\t                  abort();\n\t                }\n\t                results.push(get(value));\n\t              }\n\t              return results;\n\t            } else if (value == \"{\") {\n\t              // Parses a JSON object, returning a new JavaScript object.\n\t              results = {};\n\t              for (;; hasMembers || (hasMembers = true)) {\n\t                value = lex();\n\t                // A closing curly brace marks the end of the object literal.\n\t                if (value == \"}\") {\n\t                  break;\n\t                }\n\t                // If the object literal contains members, the current token\n\t                // should be a comma separator.\n\t                if (hasMembers) {\n\t                  if (value == \",\") {\n\t                    value = lex();\n\t                    if (value == \"}\") {\n\t                      // Unexpected trailing `,` in object literal.\n\t                      abort();\n\t                    }\n\t                  } else {\n\t                    // A `,` must separate each object member.\n\t                    abort();\n\t                  }\n\t                }\n\t                // Leading commas are not permitted, object property names must be\n\t                // double-quoted strings, and a `:` must separate each property\n\t                // name and value.\n\t                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n\t                  abort();\n\t                }\n\t                results[value.slice(1)] = get(lex());\n\t              }\n\t              return results;\n\t            }\n\t            // Unexpected token encountered.\n\t            abort();\n\t          }\n\t          return value;\n\t        };\n\t\n\t        // Internal: Updates a traversed object member.\n\t        var update = function (source, property, callback) {\n\t          var element = walk(source, property, callback);\n\t          if (element === undef) {\n\t            delete source[property];\n\t          } else {\n\t            source[property] = element;\n\t          }\n\t        };\n\t\n\t        // Internal: Recursively traverses a parsed JSON object, invoking the\n\t        // `callback` function for each value. This is an implementation of the\n\t        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n\t        var walk = function (source, property, callback) {\n\t          var value = source[property], length;\n\t          if (typeof value == \"object\" && value) {\n\t            // `forEach` can't be used to traverse an array in Opera <= 8.54\n\t            // because its `Object#hasOwnProperty` implementation returns `false`\n\t            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n\t            if (getClass.call(value) == arrayClass) {\n\t              for (length = value.length; length--;) {\n\t                update(value, length, callback);\n\t              }\n\t            } else {\n\t              forEach(value, function (property) {\n\t                update(value, property, callback);\n\t              });\n\t            }\n\t          }\n\t          return callback.call(source, property, value);\n\t        };\n\t\n\t        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n\t        exports.parse = function (source, callback) {\n\t          var result, value;\n\t          Index = 0;\n\t          Source = \"\" + source;\n\t          result = get(lex());\n\t          // If a JSON string contains multiple tokens, it is invalid.\n\t          if (lex() != \"$\") {\n\t            abort();\n\t          }\n\t          // Reset the parser state.\n\t          Index = Source = null;\n\t          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n\t        };\n\t      }\n\t    }\n\t\n\t    exports[\"runInContext\"] = runInContext;\n\t    return exports;\n\t  }\n\t\n\t  if (freeExports && !isLoader) {\n\t    // Export for CommonJS environments.\n\t    runInContext(root, freeExports);\n\t  } else {\n\t    // Export for web browsers and JavaScript engines.\n\t    var nativeJSON = root.JSON,\n\t        previousJSON = root[\"JSON3\"],\n\t        isRestored = false;\n\t\n\t    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n\t      // Public: Restores the original value of the global `JSON` object and\n\t      // returns a reference to the `JSON3` object.\n\t      \"noConflict\": function () {\n\t        if (!isRestored) {\n\t          isRestored = true;\n\t          root.JSON = nativeJSON;\n\t          root[\"JSON3\"] = previousJSON;\n\t          nativeJSON = previousJSON = null;\n\t        }\n\t        return JSON3;\n\t      }\n\t    }));\n\t\n\t    root.JSON = {\n\t      \"parse\": JSON3.parse,\n\t      \"stringify\": JSON3.stringify\n\t    };\n\t  }\n\t\n\t  // Export for asynchronous module loaders.\n\t  if (isLoader) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t      return JSON3;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t}).call(this);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(19)(module), (function() { return this; }())))\n\n/***/ },\n\n/***/ 204:\n/***/ function(module, exports) {\n\n\tmodule.exports = toArray\n\t\n\tfunction toArray(list, index) {\n\t    var array = []\n\t\n\t    index = index || 0\n\t\n\t    for (var i = index || 0; i < list.length; i++) {\n\t        array[i - index] = list[i]\n\t    }\n\t\n\t    return array\n\t}\n\n\n/***/ },\n\n/***/ 208:\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ },\n\n/***/ 212:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n\n/***/ 333:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar isMongodbId = exports.isMongodbId = function isMongodbId(id) {\n\t  if (id.match(/^[0-9a-fA-F]{24}$/)) {\n\t    return true;\n\t  } else {\n\t    return false;\n\t  }\n\t};\n\n/***/ },\n\n/***/ 354:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _lodash = __webpack_require__(22);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _chart = __webpack_require__(124);\n\t\n\tvar _chart2 = _interopRequireDefault(_chart);\n\t\n\tvar _socket = __webpack_require__(178);\n\t\n\tvar _socket2 = _interopRequireDefault(_socket);\n\t\n\tvar _store = __webpack_require__(81);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tvar _actions = __webpack_require__(92);\n\t\n\tvar _getters = __webpack_require__(93);\n\t\n\tvar _quickquiz = __webpack_require__(91);\n\t\n\tvar _mongodb = __webpack_require__(333);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar socket = null;\n\tvar qaChart = null;\n\tvar spChart = null;\n\texports.default = {\n\t  attached: function attached() {\n\t    var quickquiz_id = this.$route.params.quickquiz_id;\n\t    if ((0, _mongodb.isMongodbId)(quickquiz_id)) {\n\t      this.validateURL = true;\n\t      this.getQuickquizDetail(quickquiz_id);\n\t    } else {\n\t      console.log('invalid quickquiz id');\n\t    }\n\t  },\n\t  detached: function detached() {\n\t    socket.io.disconnect();\n\t    console.log('emit socket disconnect');\n\t  },\n\t  methods: {\n\t    getQuickquizDetail: function getQuickquizDetail(id) {\n\t      var apiURL = '/api/manage-quickquiz/teacher/quickquiz/' + '?id=' + id;\n\t      this.$http.get(apiURL).then(function (response) {\n\t        console.log(response);\n\t        var students = _lodash2.default.get(response.data, 'students', []);\n\t        this.setQuickquizStudents(students);\n\t        this.samples = _lodash2.default.get(response.data, 'samples', []);\n\t        console.log();\n\t        delete response.data.students;\n\t        delete response.data.samples;\n\t        this.quickquiz = response.data;\n\t        this.analysis('count_exception');\n\t        if (!_lodash2.default.get(response.data, 'finished', false)) {\n\t          this.$els.statistic.style.display = 'none';\n\t        }\n\t        this.listenForSocket();\n\t      }, function (response) {\n\t        this.$showToast('Error:' + response.data);\n\t      });\n\t    },\n\t    endQuiz: function endQuiz() {\n\t      if (this.quickquiz.finished === false) {\n\t        var data = {\n\t          quickquiz_id: this.quickquiz._id\n\t        };\n\t        this.$http.post('/api/manage-quickquiz/teacher/quickquiz/end', data).then(function (response) {\n\t          this.quickquiz.finished = true;\n\t          window.location.reload();\n\t        }, function (response) {\n\t          this.$showToast('Error:' + response.data);\n\t        });\n\t      }\n\t    },\n\t    listenForSocket: function listenForSocket() {\n\t      var self = this;\n\t      socket = _socket2.default.connect('/quickquiz');\n\t\n\t      socket.on('connect', function () {\n\t        console.log('on connect');\n\t        socket.emit('authenticate', { token: window.sessionStorage.token });\n\t      });\n\t\n\t      socket.on('authenticated', function () {\n\t        self.socket.authenticated = true;\n\t        socket.emit('user join', { quickquizId: self.$route.params.quickquiz_id });\n\t        console.log('socket auth success');\n\t      });\n\t\n\t      socket.on('joined', function (data) {\n\t        self.socket.joined = true;\n\t      });\n\t\n\t      socket.on('student list', function (data) {\n\t        var students = data;\n\t        console.log('on receiving Student List');\n\t\n\t        for (var i = 0; i < students.length; i++) {\n\t          var index = (0, _quickquiz.studentIndex)(self.students, students[i].id);\n\t          if (index > -1) {\n\t            var student = self.students[index];\n\t            student['online'] = true;\n\t            if (students[i].status !== '') {\n\t              student['status'] = students[i].status;\n\t            }\n\t            if (students[i].quizsample !== '' && !_lodash2.default.has(student, 'sample._id')) {\n\t              var sample = {\n\t                _id: students[i].quizsample\n\t              };\n\t              student['sample'] = sample;\n\t            }\n\t            self.updateQuickquizStudent(index, student);\n\t          }\n\t        }\n\t      });\n\t\n\t      socket.on('student joined', function (data) {\n\t        console.log('on Student Joined');\n\t\n\t        var student_id = _lodash2.default.get(data, 'id', null);\n\t        var student_name = _lodash2.default.get(data, 'name', null);\n\t\n\t        var index = (0, _quickquiz.studentIndex)(self.students, student_id);\n\t        if (index > -1) {\n\t          var student = self.students[index];\n\t          student['online'] = true;\n\t          self.updateQuickquizStudent(index, student);\n\t        } else {\n\t          var _student = {\n\t            _id: student_id,\n\t            name: student_name,\n\t            online: true\n\t          };\n\t          self.updateQuickquizStudent(self.students.length, _student);\n\t        }\n\t      });\n\t\n\t      socket.on('student leaved', function (data) {\n\t        console.log('on Student Leaved');\n\t        var index = (0, _quickquiz.studentIndex)(self.students, data);\n\t        if (data && index > -1) {\n\t          var student = self.students[index];\n\t          student['online'] = false;\n\t          if (_lodash2.default.get(student, 'status', null) !== 'finish') {\n\t            student['status'] = null;\n\t          }\n\t          self.updateQuickquizStudent(index, student);\n\t        }\n\t      });\n\t\n\t      socket.on('start doing', function (data) {\n\t        if (data) {\n\t          var index = (0, _quickquiz.studentIndex)(self.students, data.student);\n\t          if (data && index > -1) {\n\t            var student = self.students[index];\n\t            student['status'] = 'doing';\n\t            if (!_lodash2.default.has(student, 'sample._id')) {\n\t              var sample = {\n\t                _id: data.quizsample\n\t              };\n\t              student['sample'] = sample;\n\t            }\n\t            self.updateQuickquizStudent(index, student);\n\t          }\n\t        }\n\t        console.log('student ' + data + ' just start doing the quiz');\n\t      });\n\t\n\t      socket.on('finish doing', function (data) {\n\t        if (data) {\n\t          var index = (0, _quickquiz.studentIndex)(self.students, data);\n\t          if (data && index > -1) {\n\t            var student = self.students[index];\n\t            student['status'] = 'finish';\n\t            self.updateQuickquizStudent(index, student);\n\t          }\n\t        }\n\t        console.log('student ' + data + ' just finished the quiz');\n\t      });\n\t    },\n\t    checkSamples: function checkSamples() {\n\t      if (this.samples.length > 0) {\n\t        this.setQuickquizStudents((0, _quickquiz.zipSampleToStudent)(this.samples, this.students));\n\t        this.setQuickquizID(this.quickquiz._id);\n\t        this.setQuickquizStudents(this.students);\n\t        this.drawCharts();\n\t      }\n\t    },\n\t    analysisSample: function analysisSample(student_index, option) {\n\t      var sample = this.students[student_index].sample;\n\t\n\t      if (option === 'score') {\n\t        var rightCount = sample.results.right.length;\n\t        var total = sample.results.right.length + sample.results.blank.length + sample.results.wrong.length;\n\t        return rightCount + '/' + total;\n\t      } else if (option === 'time') {\n\t        var start = sample.startTime;\n\t        var finish = sample.finishTime;\n\t        return this.timeDifference(Math.abs(new Date(start) - new Date(finish)), 'simple');\n\t      } else if (option === 'rightCount') {\n\t        var _rightCount = sample.results.right.length;\n\t        return _rightCount;\n\t      } else if (option === 'timeInMilliSec') {\n\t        var _start = sample.startTime;\n\t        var _finish = sample.finishTime;\n\t        return Math.abs(new Date(_start) - new Date(_finish));\n\t      }\n\t    },\n\t    analysis: function analysis(option) {\n\t      if (option === 'average_score') {\n\t        return (this.quickquiz.analysis.aveRight * 100 / (this.quickquiz.questions - this.quickquiz.exception)).toFixed(2);\n\t      } else if (option === 'average_time') {\n\t        return this.timeDifference(this.quickquiz.analysis.aveTime);\n\t      } else if (option === 'average_right_count') {\n\t        return this.quickquiz.analysis.aveRight.toFixed(2) / 1;\n\t      } else if (option === 'count_exception') {\n\t        var exception_count = 0;\n\t        var question_analysis = this.quickquiz.analysis.questions;\n\t        _lodash2.default.forEach(question_analysis, function (array) {\n\t          if (array[0] === 0 && array[1] === 0 && array[2] === 0 && array[3] > 0) {\n\t            exception_count++;\n\t          }\n\t        });\n\t        this.quickquiz['exception'] = exception_count;\n\t        this.checkSamples();\n\t      } else {\n\t        return false;\n\t      }\n\t    },\n\t    timeDifference: function timeDifference(millisecound, option) {\n\t      var ms = millisecound;\n\t      var min = ms / 1000 / 60 << 0;\n\t      var sec = ms / 1000 % 60 << 0;\n\t      if (option === 'simple') {\n\t        return min + ':' + sec;\n\t      } else {\n\t        return min + '分' + sec + '秒';\n\t      }\n\t    },\n\t    drawCharts: function drawCharts() {\n\t      var self = this;\n\t      if (_lodash2.default.get(self.quickquiz, 'finished', false)) {\n\t        this.drawSPChart();\n\t        this.drawQAChart();\n\t      }\n\t    },\n\t    drawSPChart: function drawSPChart(sort, type) {\n\t      if (spChart !== null) {\n\t        spChart.destroy();\n\t      }\n\t      var self = this;\n\t      var studentCount = this.students.length;\n\t      var student_performance_chart = this.$els.spChart;\n\t\n\t      var name_set = _lodash2.default.map(this.students, function (student) {\n\t        return student.name;\n\t      });\n\t      var time_cost_set = _lodash2.default.map(this.students, function (student, key) {\n\t        return self.analysisSample(key, 'timeInMilliSec') / 60000;\n\t      });\n\t      var correct_count_set = _lodash2.default.map(this.students, function (student, key) {\n\t        return self.analysisSample(key, 'rightCount');\n\t      });\n\t\n\t      var ave_correct_count = self.analysis('average_right_count');\n\t      var ave_correct_data_set = _lodash2.default.times(studentCount, _lodash2.default.constant(ave_correct_count));\n\t\n\t      var chart_main_data = _lodash2.default.zip(name_set, time_cost_set, correct_count_set);\n\t\n\t      if (sort === 'correct') {\n\t        if (this.charts.sp.correct !== 1) {\n\t          this.charts.sp.correct = 1;\n\t          chart_main_data = _lodash2.default.sortBy(chart_main_data, function (data) {\n\t            return data[2];\n\t          });\n\t        } else {\n\t          this.charts.sp.correct = -1;\n\t          chart_main_data = _lodash2.default.sortBy(chart_main_data, function (data) {\n\t            return -data[2];\n\t          });\n\t        }\n\t      } else if (sort === 'time') {\n\t        if (this.charts.sp.time !== 1) {\n\t          this.charts.sp.time = 1;\n\t          chart_main_data = _lodash2.default.sortBy(chart_main_data, function (data) {\n\t            return data[1];\n\t          });\n\t        } else {\n\t          this.charts.sp.time = -1;\n\t          chart_main_data = _lodash2.default.sortBy(chart_main_data, function (data) {\n\t            return -data[1];\n\t          });\n\t        }\n\t      }\n\t\n\t      var spChartdata = {\n\t        labels: _lodash2.default.unzip(chart_main_data)[0],\n\t        datasets: [{\n\t          label: '時間',\n\t          backgroundColor: 'rgba(255,152,0,0.2)',\n\t          borderColor: 'rgba(255,152,0,1)',\n\t          borderWidth: 1,\n\t          hoverBackgroundColor: 'rgba(255,152,0,0.4)',\n\t          hoverBorderColor: 'rgba(255,152,0,1)',\n\t          data: _lodash2.default.unzip(chart_main_data)[1]\n\t        }, {\n\t          label: '正確題數',\n\t          backgroundColor: 'rgba(76, 175, 80 ,0.2)',\n\t          borderColor: 'rgba(76, 175, 80 ,1)',\n\t          borderWidth: 1,\n\t          hoverBackgroundColor: 'rgba(76, 175, 80 ,0.4)',\n\t          hoverBorderColor: 'rgba(76, 175, 80 ,1)',\n\t          data: _lodash2.default.unzip(chart_main_data)[2]\n\t        }, {\n\t          label: '平均正確題數',\n\t          type: 'line',\n\t          backgroundColor: 'rgba(63, 81, 181, 0.2)',\n\t          borderColor: 'rgba(63, 81, 181, 1)',\n\t          borderWidth: 1,\n\t          hoverBackgroundColor: 'rgba(63, 81, 181, 0.4)',\n\t          hoverBorderColor: 'rgba(63, 81, 181, 1)',\n\t          data: ave_correct_data_set\n\t        }]\n\t      };\n\t\n\t      spChart = new _chart2.default(student_performance_chart, {\n\t        type: 'bar',\n\t        data: spChartdata\n\t      });\n\t      spChart.render(500, false);\n\t    },\n\t    drawQAChart: function drawQAChart(sort, type) {\n\t      if (qaChart !== null) {\n\t        qaChart.destroy();\n\t      }\n\t      var question_analysis_chart = this.$els.qaChart;\n\t\n\t      var labels_set = _lodash2.default.map(_lodash2.default.times(this.quickquiz.questions, Number), function (number) {\n\t        return '第' + (number + 1) + '題';\n\t      });\n\t      var correct_count_set = _lodash2.default.map(this.quickquiz.analysis.questions, function (question, key) {\n\t        return question[0];\n\t      });\n\t      var wrong_count_set = _lodash2.default.map(this.quickquiz.analysis.questions, function (question, key) {\n\t        return question[1];\n\t      });\n\t      var blank_count_set = _lodash2.default.map(this.quickquiz.analysis.questions, function (question, key) {\n\t        return question[2];\n\t      });\n\t\n\t      var main_chart_data = _lodash2.default.zip(labels_set, correct_count_set, wrong_count_set, blank_count_set);\n\t\n\t      if (sort === 'correct') {\n\t        if (this.charts.qa.correct !== 1) {\n\t          this.charts.qa.correct = 1;\n\t          main_chart_data = _lodash2.default.sortBy(main_chart_data, function (data) {\n\t            return data[1];\n\t          });\n\t        } else {\n\t          this.charts.qa.correct = -1;\n\t          main_chart_data = _lodash2.default.sortBy(main_chart_data, function (data) {\n\t            return -data[1];\n\t          });\n\t        }\n\t      }\n\t\n\t      var qaChartData = {\n\t        labels: _lodash2.default.unzip(main_chart_data)[0],\n\t        datasets: [{\n\t          label: '正確',\n\t          backgroundColor: 'rgba(76, 175, 80 ,0.2)',\n\t          borderColor: 'rgba(76, 175, 80 ,1)',\n\t          borderWidth: 1,\n\t          hoverBackgroundColor: 'rgba(76, 175, 80 ,0.4)',\n\t          hoverBorderColor: 'rgba(76, 175, 80 ,1)',\n\t          data: _lodash2.default.unzip(main_chart_data)[1]\n\t        }, {\n\t          label: '錯誤',\n\t          backgroundColor: 'rgba(255,99,132,0.2)',\n\t          borderColor: 'rgba(255,99,132,1)',\n\t          borderWidth: 1,\n\t          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t          hoverBorderColor: 'rgba(255,99,132,1)',\n\t          data: _lodash2.default.unzip(main_chart_data)[2]\n\t        }, {\n\t          label: '留空',\n\t          backgroundColor: 'rgba(255,152,0,0.2)',\n\t          borderColor: 'rgba(255,152,0,1)',\n\t          borderWidth: 1,\n\t          hoverBackgroundColor: 'rgba(255,152,0,0.4)',\n\t          hoverBorderColor: 'rgba(255,152,0,1)',\n\t          data: _lodash2.default.unzip(main_chart_data)[3]\n\t        }]\n\t      };\n\t\n\t      qaChart = new _chart2.default(question_analysis_chart, {\n\t        type: 'bar',\n\t        data: qaChartData\n\t      });\n\t      qaChart.render(500, false);\n\t    },\n\t\n\t    checkQuizPaper: function checkQuizPaper(student) {\n\t      if (student) {\n\t        if (_lodash2.default.has(student, 'sample._id')) {\n\t          this.$router.go({\n\t            name: 'quiz-paper',\n\t            params: { quickquiz_id: this.$route.params.quickquiz_id, quizsample_id: student.sample._id }\n\t          });\n\t        }\n\t      } else {\n\t        this.$router.go({\n\t          name: 'quiz-paper',\n\t          params: { quickquiz_id: this.$route.params.quickquiz_id, quizsample_id: 0 }\n\t        });\n\t      }\n\t    },\n\t    deleteQuiz: function deleteQuiz() {\n\t      if (this.quickquiz.finished) {\n\t        var data = {\n\t          quickquiz_id: this.quickquiz._id\n\t        };\n\t        this.$http.delete('/api/manage-quickquiz/quickquiz', data).then(function (response) {\n\t          this.$router.go({\n\t            name: 'quiz-results'\n\t          });\n\t        }, function (response) {\n\t          this.$showToast(response.data);\n\t        });\n\t      }\n\t    }\n\t  },\n\t  data: function data() {\n\t    return {\n\t      socket: {\n\t        joined: false,\n\t        authenticated: false\n\t      },\n\t      validateURL: false,\n\t      quickquiz: {},\n\t      charts: {\n\t        sp: {\n\t          time: 0,\n\t          correct: 0\n\t        },\n\t        qa: {\n\t          correct: 0,\n\t          wrong: 0\n\t        }\n\t      }\n\t    };\n\t  },\n\t\n\t  filters: {\n\t    finished: function finished(value) {\n\t      if (value === false) {\n\t        return '測試進行中';\n\t      } else {\n\t        return '已結束';\n\t      }\n\t    }\n\t  },\n\t  store: _store2.default,\n\t  vuex: {\n\t    actions: {\n\t      setQuickquizID: _actions.setQuickquizID,\n\t      setQuickquizStudents: _actions.setQuickquizStudents,\n\t      updateQuickquizStudent: _actions.updateQuickquizStudent\n\t    },\n\t    getters: {\n\t      getQuickquizID: _getters.getQuickquizID,\n\t      students: _getters.getQuickquizStudents\n\t    }\n\t  }\n\t};\n\n/***/ },\n\n/***/ 372:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".wrapper[_v-afa92f70]{margin:16px}.second-wrapper[_v-afa92f70]{background:#fff;margin-top:16px}.quiz-title[_v-afa92f70]{margin:0}.quiz-finished[_v-afa92f70]{margin-left:8px;font-size:18px;color:#ff9800}.quiz-time[_v-afa92f70]{color:#2196f3;font-size:18px;margin-left:16px}.quiz-time i[_v-afa92f70]{font-size:18px;margin-right:4px}.quiz-questions-count[_v-afa92f70]{color:#2196f3;font-size:18px;margin-left:auto}.quiz-questions-count i[_v-afa92f70]{font-size:18px;margin-right:4px}.student-status[_v-afa92f70]{background-color:#9e9e9e;width:10px;height:10px;margin-right:8px;border-radius:5px}.student-status.online[_v-afa92f70]{background-color:#4caf50;width:10px;height:10px;margin-right:8px;border-radius:5px}.student[_v-afa92f70]{padding:8px 16px}.student .student-name[_v-afa92f70]{font-size:18px;padding:8px 0}.student .doing-status[_v-afa92f70]{color:#009688}.student .doing-status[_v-afa92f70],.student .unfinish-status[_v-afa92f70]{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}.student .unfinish-status[_v-afa92f70]{color:#9e9e9e}.student .finished-status[_v-afa92f70]{color:#009688;margin-left:auto;cursor:pointer}.student .doing-status[_v-afa92f70]{color:#3f51b5;text-align:center;cursor:pointer}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/quickquiz/Quiz-detail.vue\"],\"names\":[],\"mappings\":\"AACA,sBACE,WAAa,CACd,AAED,6BACE,gBAAiB,AACjB,eAAiB,CAClB,AAED,yBACE,QAAQ,CACT,AAED,4BACE,gBAAiB,AACjB,eAAgB,AAChB,aAAc,CACf,AAED,wBACE,cAAe,AACf,eAAgB,AAChB,gBAAiB,CAClB,AAED,0BACE,eAAgB,AAChB,gBAAiB,CAClB,AAED,mCACE,cAAe,AACf,eAAgB,AAChB,gBAAkB,CACnB,AAED,qCACE,eAAgB,AAChB,gBAAiB,CAClB,AAED,6BACE,yBAA0B,AAC1B,WAAY,AACZ,YAAa,AACb,iBAAkB,AAClB,iBAAmB,CACpB,AAED,oCACE,yBAA0B,AAC1B,WAAY,AACZ,YAAa,AACb,iBAAkB,AAClB,iBAAmB,CACpB,AAED,sBACE,gBAAiB,CAClB,AAED,oCACE,eAAgB,AAChB,aAAc,CACf,AAED,oCACE,aAAe,CAKhB,AAED,2EANE,wBAAyB,AACzB,+BAAgC,AAC5B,qBAAsB,AAClB,sBAAwB,CASjC,AAND,uCACE,aAAe,CAKhB,AAED,uCACE,cAAe,AACf,iBAAkB,AAClB,cAAgB,CACjB,AAED,oCACE,cAAe,AACf,kBAAmB,AACnB,cAAgB,CACjB\",\"file\":\"Quiz-detail.vue\",\"sourcesContent\":[\"\\n.wrapper[_v-afa92f70] {\\n  margin: 16px;\\n}\\n\\n.second-wrapper[_v-afa92f70] {\\n  background: #fff;\\n  margin-top: 16px;\\n}\\n\\n.quiz-title[_v-afa92f70] {\\n  margin:0\\n}\\n\\n.quiz-finished[_v-afa92f70] {\\n  margin-left: 8px;\\n  font-size: 18px;\\n  color: #FF9800\\n}\\n\\n.quiz-time[_v-afa92f70] {\\n  color: #2196F3;\\n  font-size: 18px;\\n  margin-left: 16px\\n}\\n\\n.quiz-time i[_v-afa92f70]{\\n  font-size: 18px;\\n  margin-right: 4px\\n}\\n\\n.quiz-questions-count[_v-afa92f70] {\\n  color: #2196F3;\\n  font-size: 18px;\\n  margin-left: auto;\\n}\\n\\n.quiz-questions-count i[_v-afa92f70]{\\n  font-size: 18px;\\n  margin-right: 4px\\n}\\n\\n.student-status[_v-afa92f70] {\\n  background-color: #9E9E9E;\\n  width: 10px;\\n  height: 10px;\\n  margin-right: 8px;\\n  border-radius: 5px;\\n}\\n\\n.student-status.online[_v-afa92f70] {\\n  background-color: #4CAF50;\\n  width: 10px;\\n  height: 10px;\\n  margin-right: 8px;\\n  border-radius: 5px;\\n}\\n\\n.student[_v-afa92f70] {\\n  padding: 8px 16px\\n}\\n\\n.student .student-name[_v-afa92f70] {\\n  font-size: 18px;\\n  padding: 8px 0\\n}\\n\\n.student .doing-status[_v-afa92f70] {\\n  color: #009688;\\n  -webkit-box-pack: center;\\n  -webkit-justify-content: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n}\\n\\n.student .unfinish-status[_v-afa92f70] {\\n  color: #9E9E9E;\\n  -webkit-box-pack: center;\\n  -webkit-justify-content: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n}\\n\\n.student .finished-status[_v-afa92f70] {\\n  color: #009688;\\n  margin-left: auto;\\n  cursor: pointer;\\n}\\n\\n.student .doing-status[_v-afa92f70] {\\n  color: #3F51B5;\\n  text-align: center;\\n  cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 387:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(372);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-afa92f70&scoped=true!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Quiz-detail.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-afa92f70&scoped=true!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Quiz-detail.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 488:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=quiz-detail _v-afa92f70=\\\"\\\"> <div class=\\\"wrapper flex-column\\\" _v-afa92f70=\\\"\\\"> <div class=flex-row _v-afa92f70=\\\"\\\"> <mdl-button class=icon-left-button raised=\\\"\\\" primary=\\\"\\\" @click=$goBack() _v-afa92f70=\\\"\\\"><i class=material-icons _v-afa92f70=\\\"\\\">keyboard_arrow_left</i>返回</mdl-button> <mdl-button v-if=quickquiz.finished style=margin-left:16px raised=\\\"\\\" _v-afa92f70=\\\"\\\"><i class=material-icons style=font-size:20px;margin-right:4px _v-afa92f70=\\\"\\\">redo</i>再測一次</mdl-button> <mdl-button v-if=!quickquiz.finished style=margin-left:16px raised=\\\"\\\" accent=\\\"\\\" @click=endQuiz() _v-afa92f70=\\\"\\\"><i class=material-icons style=font-size:20px;margin-right:4px _v-afa92f70=\\\"\\\">gavel</i>結束小測</mdl-button> <mdl-button style=margin-left:16px raised=\\\"\\\" primary=\\\"\\\" @click=checkQuizPaper() _v-afa92f70=\\\"\\\"><i class=material-icons style=font-size:20px;margin-right:4px _v-afa92f70=\\\"\\\">description</i>查看试卷</mdl-button> <mdl-button v-if=quickquiz.finished raised=\\\"\\\" accent=\\\"\\\" @click=deleteQuiz() style=\\\"margin-left: 16px\\\" _v-afa92f70=\\\"\\\"><i class=material-icons _v-afa92f70=\\\"\\\">delete</i>刪除小測</mdl-button> </div> <div class=\\\"flex-column second-wrapper mdl-shadow--2dp\\\" _v-afa92f70=\\\"\\\"> <div class=flex-column style=padding:16px _v-afa92f70=\\\"\\\"> <div class=\\\"flex-row flex-baseline\\\" _v-afa92f70=\\\"\\\"> <h4 class=quiz-title _v-afa92f70=\\\"\\\">{{quickquiz.title}}</h4> <span class=quiz-finished _v-afa92f70=\\\"\\\">{{quickquiz.finished | finished}}</span> <span class=\\\"flex-row flex-center quiz-questions-count\\\" _v-afa92f70=\\\"\\\"><i class=material-icons _v-afa92f70=\\\"\\\">description</i><span _v-afa92f70=\\\"\\\">{{quickquiz.questions}}題</span></span> <span class=\\\"flex-row flex-center quiz-time\\\" _v-afa92f70=\\\"\\\"><i class=material-icons _v-afa92f70=\\\"\\\">timer</i><span _v-afa92f70=\\\"\\\">{{quickquiz.time}}分鐘</span></span> </div> </div> <div class=\\\"flex-row flex-center\\\" style=\\\"border-top:1px solid #eee\\\" _v-afa92f70=\\\"\\\"> <span class=\\\"flex-column flex-50\\\" style=\\\"padding: 16px;border-right:1px solid #eee\\\" _v-afa92f70=\\\"\\\"> <span class=field-title _v-afa92f70=\\\"\\\">開始於</span> <span class=field-content _v-afa92f70=\\\"\\\">{{quickquiz.startTime | date 'YYYY[年]M[月]DD[日] H:mm'}}</span> </span> <span class=\\\"flex-column flex-50\\\" style=\\\"padding: 16px;border-right:1px solid #eee\\\" _v-afa92f70=\\\"\\\"> <span class=field-title _v-afa92f70=\\\"\\\">結束於</span> <span class=field-content _v-afa92f70=\\\"\\\">{{quickquiz.finishTime | date 'YYYY[年]M[月]DD[日] H:mm'}}</span> </span> </div> <div class=flex-column v-show=\\\"students &amp;&amp; students.length > 0\\\" _v-afa92f70=\\\"\\\"> <p style=\\\"border-top:1px solid #eee;padding:8px 0 8px 0;margin:0;text-align:center;color:#aaa\\\" _v-afa92f70=\\\"\\\">學生 {{students.length}}名</p> <div class=grids _v-afa92f70=\\\"\\\"> <div class=\\\"grid-4 flex-column student\\\" v-for=\\\"student in students\\\" track-by=_id _v-afa92f70=\\\"\\\"> <div class=\\\"flex-row flex-center\\\" _v-afa92f70=\\\"\\\"> <div class=\\\"student-status online\\\" v-show=students[$index].online _v-afa92f70=\\\"\\\"></div> <span class=student-name _v-afa92f70=\\\"\\\">{{student.name}}</span> </div> <span class=\\\"finished-status flex-row flex-center\\\" v-if=\\\"students[$index].status === 'finish'\\\" @click=checkQuizPaper(student) _v-afa92f70=\\\"\\\"> <span style=margin-right:8px;color:#3F51B5 _v-afa92f70=\\\"\\\">{{analysisSample($index, 'time')}}</span> <span style=\\\"color: #E91E63;margin-right: 8px\\\" _v-afa92f70=\\\"\\\">{{analysisSample($index, 'score')}}</span> <span _v-afa92f70=\\\"\\\">已完成</span> <i class=material-icons _v-afa92f70=\\\"\\\">keyboard_arrow_right</i> </span> <span class=\\\"unfinish-status flex-row flex-center\\\" v-show=!students[$index].status _v-afa92f70=\\\"\\\"> <span _v-afa92f70=\\\"\\\">未上交</span> <i class=material-icons _v-afa92f70=\\\"\\\">short_text</i> </span> <span class=\\\"doing-status flex-row flex-center\\\" v-show=\\\"students[$index].status === 'doing'\\\" @click=checkQuizPaper(student) _v-afa92f70=\\\"\\\"> <span _v-afa92f70=\\\"\\\">做卷中&nbsp;</span> <i class=material-icons _v-afa92f70=\\\"\\\">keyboard_arrow_right</i> </span> </div> </div> </div> <div class=flex-column v-el:statistic=\\\"\\\" _v-afa92f70=\\\"\\\"> <p style=\\\"padding:8px 0 8px 0;margin:0;text-align:center;color:#aaa;border-top:1px solid #eee\\\" _v-afa92f70=\\\"\\\">數據 統計</p> <div class=\\\"flex-row grids\\\" v-if=quickquiz.finished _v-afa92f70=\\\"\\\"> <div class=\\\"grid-2 flex-column flex-center flex-50\\\" _v-afa92f70=\\\"\\\"> <span class=field-title _v-afa92f70=\\\"\\\">平均分</span> <span class=field-content _v-afa92f70=\\\"\\\">{{analysis('average_score')}}</span> </div> <div class=\\\"grid-2 flex-column flex-center flex-50\\\" _v-afa92f70=\\\"\\\"> <span class=field-title _v-afa92f70=\\\"\\\">平均用時</span> <span class=field-content _v-afa92f70=\\\"\\\">{{analysis('average_time')}}</span> </div> </div> <div class=\\\"flex-row flex-center\\\" style=\\\"margin-top: 16px\\\" _v-afa92f70=\\\"\\\"> <span style=\\\"margin: 16px 16px 16px 32px; font-size: 26px\\\" _v-afa92f70=\\\"\\\">學生表現</span> <mdl-button accent=\\\"\\\" raised=\\\"\\\" @click=\\\"drawSPChart('time')\\\" style=\\\"background-color: #FF9800\\\" _v-afa92f70=\\\"\\\"> <i class=material-icons _v-afa92f70=\\\"\\\">swap_vert</i> <span _v-afa92f70=\\\"\\\">時間</span> </mdl-button> <mdl-button accent=\\\"\\\" raised=\\\"\\\" style=margin-left:16px @click=\\\"drawSPChart('correct')\\\" _v-afa92f70=\\\"\\\"> <i class=material-icons _v-afa92f70=\\\"\\\">swap_vert</i> <span _v-afa92f70=\\\"\\\">正確題數</span> </mdl-button> </div> <canvas width=400px height=200 v-el:sp-chart=\\\"\\\" _v-afa92f70=\\\"\\\"></canvas> <div class=\\\"flex-row flex-center\\\" style=\\\"margin-top:32px;border-top:1px solid #ddd;padding-top:16px\\\" _v-afa92f70=\\\"\\\"> <span style=\\\"margin: 16px 16px 16px 32px; font-size: 26px\\\" _v-afa92f70=\\\"\\\">題目數據</span> <mdl-button accent=\\\"\\\" raised=\\\"\\\" @click=\\\"drawQAChart('correct')\\\" _v-afa92f70=\\\"\\\"> <i class=material-icons _v-afa92f70=\\\"\\\">swap_vert</i> <span _v-afa92f70=\\\"\\\">正確數量</span> </mdl-button> </div> <canvas width=400px height=200 v-el:qa-chart=\\\"\\\" _v-afa92f70=\\\"\\\"></canvas> </div> </div> </div> </div>\";\n\n/***/ },\n\n/***/ 508:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(387)\n\t__vue_script__ = __webpack_require__(354)\n\t__vue_template__ = __webpack_require__(488)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 2.8e29088beb687e6f54b5.js\n **/","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/debug/browser.js\n ** module id = 4\n ** module chunks = 1 2\n **/","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary');\nvar sliceBuffer = require('arraybuffer.slice');\nvar base64encoder = require('base64-arraybuffer');\nvar after = require('after');\nvar utf8 = require('utf8');\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = navigator.userAgent.match(/Android/i);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  // String data\n  if (typeof data == 'string' || data === undefined) {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      try {\n        data = utf8.decode(data);\n      } catch (e) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!global.ArrayBuffer) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/lib/browser.js\n ** module id = 7\n ** module chunks = 1 2\n **/","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/component-inherit/index.js\n ** module id = 16\n ** module chunks = 1 2\n **/","/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.13.1';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(\\.|\\[\\])(?:\\4|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match non-compound words composed of alphanumeric characters. */\n  var reBasicWord = /[a-zA-Z0-9]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0x/i;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reComplexWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = checkGlobal(typeof global == 'object' && global);\n\n  /** Detect free variable `self`. */\n  var freeSelf = checkGlobal(typeof self == 'object' && self);\n\n  /** Detect `this` as the global object. */\n  var thisGlobal = checkGlobal(typeof this == 'object' && this);\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    var length = args.length;\n    switch (length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array ? array.length : 0;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array ? array.length : 0;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array ? array.length : 0;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing wrapper metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a cache value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Checks if `value` is a global object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n   */\n  function checkGlobal(value) {\n    return (value && value.Object === Object) ? value : null;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        result++;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    if (!(string && reHasComplexSymbol.test(string))) {\n      return string.length;\n    }\n    var result = reComplexSymbol.lastIndex = 0;\n    while (reComplexSymbol.test(string)) {\n      result++;\n    }\n    return result;\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return string.match(reComplexSymbol);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Use `context` to stub `Date#getTime` use in `_.now`.\n   * var stubbed = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': stubGetTime };\n   *   }\n   * });\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Date = context.Date,\n        Error = context.Error,\n        Math = context.Math,\n        RegExp = context.RegExp,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = context.Array.prototype,\n        objectProto = context.Object.prototype,\n        stringProto = context.String.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = context.Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Reflect = context.Reflect,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        enumerate = Reflect ? Reflect.enumerate : undefined,\n        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice;\n\n    /** Built-in method references that are mockable. */\n    var setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetPrototype = Object.getPrototypeOf,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = Object.keys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReplace = stringProto.replace,\n        nativeReverse = arrayProto.reverse,\n        nativeSplit = stringProto.split;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,\n     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,\n     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,\n     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,\n     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,\n     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,\n     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,\n     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,\n     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      return getMapData(this, key)['delete'](key);\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      getMapData(this, key).set(key, value);\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      this.__data__ = new ListCache(entries);\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      return this.__data__['delete'](key);\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var cache = this.__data__;\n      if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {\n        cache = this.__data__ = new MapCache(cache.__data__);\n      }\n      cache.set(key, value);\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      // Recursively populate clone (susceptible to call stack limits).\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source),\n          length = props.length;\n\n      return function(object) {\n        if (object == null) {\n          return !length;\n        }\n        var index = length;\n        while (index--) {\n          var key = props[index],\n              predicate = source[key],\n              value = object[key];\n\n          if ((value === undefined &&\n              !(key in Object(object))) || !predicate(value)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(proto) {\n      return isObject(proto) ? objectCreate(proto) : {};\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an array\n     * of `func` arguments.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments to provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n      // that are composed entirely of index properties, return `false` for\n      // `hasOwnProperty` checks of them.\n      return object != null &&\n        (hasOwnProperty.call(object, key) ||\n          (typeof object == 'object' && key in object && getPrototype(object) === null));\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      return nativeKeys(Object(object));\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      object = object == null ? object : Object(object);\n\n      var result = [];\n      for (var key in object) {\n        result.push(key);\n      }\n      return result;\n    }\n\n    // Fallback for IE < 9 with es6-shim.\n    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n      baseKeysIn = function(object) {\n        return iteratorToArray(enumerate(object));\n      };\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = keysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      stack.set(srcValue, newValue);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n      }\n      stack['delete'](srcValue);\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return arrayReduce(props, function(result, key) {\n        if (key in object) {\n          result[key] = object[key];\n        }\n        return result;\n      }, {});\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, predicate) {\n      var index = -1,\n          props = getAllKeysIn(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          result[key] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]);\n        if (isObject(nested)) {\n          var newValue = value;\n          if (index != lastIndex) {\n            var objValue = nested[key];\n            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n            if (newValue === undefined) {\n              newValue = objValue == null\n                ? (isIndex(path[index + 1]) ? [] : {})\n                : objValue;\n            }\n          }\n          assignValue(nested, key, newValue);\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && baseHas(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var result = new buffer.constructor(buffer.length);\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : source[key];\n\n        assignValue(object, key, newValue);\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return rest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBaseWrapper(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = reHasComplexSymbol.test(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurryWrapper(func, bitmask, arity) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        predicate = getIteratee(predicate, 3);\n        if (!isArrayLike(collection)) {\n          var props = keys(collection);\n        }\n        var index = findIndexFunc(props || collection, function(value, key) {\n          if (props) {\n            key = value;\n            value = iterable[key];\n          }\n          return predicate(value, key, iterable);\n        }, fromIndex);\n        return index > -1 ? collection[props ? props[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return rest(function(funcs) {\n        funcs = baseFlatten(funcs, 1);\n\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return 0;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return rest(function(iteratees) {\n        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n          : arrayMap(baseFlatten(iteratees, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\n        return rest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return reHasComplexSymbol.test(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toNumber(start);\n        start = start === start ? start : 0;\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toNumber(end) || 0;\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBaseWrapper(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurryWrapper(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartialWrapper(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!seen.has(othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.add(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and\n          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as\n          // not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object) ? other != +other : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n          stack.set(object, other);\n\n          // Recursively compare objects (susceptible to call stack limits).\n          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : baseHas(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      return result;\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a\n     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n     * Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the `[[Prototype]]` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {null|Object} Returns the `[[Prototype]]`.\n     */\n    function getPrototype(value) {\n      return nativeGetPrototype(Object(value));\n    }\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    function getSymbols(object) {\n      // Coerce `object` to an object to avoid non-object errors in V8.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.\n      return getOwnPropertySymbols(Object(object));\n    }\n\n    // Fallback for IE < 11.\n    if (!getOwnPropertySymbols) {\n      getSymbols = stubArray;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function getTag(value) {\n      return objectToString.call(value);\n    }\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11,\n    // for data views in Edge, and promises in Node.js.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var result,\n          index = -1,\n          length = path.length;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result) {\n        return result;\n      }\n      var length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isString(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Creates an array of index keys for `object` values of arrays,\n     * `arguments` objects, and strings, otherwise `null` is returned.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array|null} Returns index keys, else `null`.\n     */\n    function indexKeys(object) {\n      var length = object ? object.length : undefined;\n      if (isLength(length) &&\n          (isArray(object) || isString(object) || isArguments(object))) {\n        return baseTimes(length, String);\n      }\n      return null;\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value);\n    }\n\n    /**\n     * Checks if `value` is a flattenable array and not a `_.matchesProperty`\n     * iteratee shorthand.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenableIteratee(value) {\n      return isArray(value) && !(value.length == 2 && !isFunction(value[0]));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));\n      }\n      return objValue;\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoize(function(string) {\n      var result = [];\n      toString(string).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length,\n          args = Array(length ? length - 1 : 0),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return length\n        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other given\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = rest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. Result values\n     * are chosen from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = rest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = rest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = rest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. Result values are chosen\n     * from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = rest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = (\n          index < 0\n            ? nativeMax(length + index, 0)\n            : nativeMin(index, length - 1)\n        ) + 1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index - 1, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = rest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = rest(function(array, indexes) {\n      indexes = baseFlatten(indexes, 1);\n\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = rest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each\n     * element is kept.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = rest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = rest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = rest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = rest(function(paths) {\n      paths = baseFlatten(paths, 1);\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _([1, 2]).forEach(function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function, it's\n     * invoked for and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = rest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getIteratee(predicate, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var array = isArrayLike(collection) ? collection : values(collection),\n          length = array.length;\n\n      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = baseClamp(toInteger(n), 0, length);\n      }\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sampleSize(collection, MAX_ARRAY_LENGTH);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        var result = collection.length;\n        return (result && isString(collection)) ? stringSize(collection) : result;\n      }\n      if (isObjectLike(collection)) {\n        var tag = getTag(collection);\n        if (tag == mapTag || tag == setTag) {\n          return collection.size;\n        }\n      }\n      return keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [iteratees=[_.identity]] The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, function(o) { return o.user; });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     *\n     * _.sortBy(users, 'user', function(o) {\n     *   return Math.floor(o.age / 10);\n     * });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    var sortBy = rest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n        ? iteratees[0]\n        : baseFlatten(iteratees, 1, isFlattenableIteratee);\n\n      return baseOrderBy(collection, iteratees, []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    function now() {\n      return Date.now();\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = rest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = rest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide an options object to indicate whether `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent calls\n     * to the debounced function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one or more milliseconds.\n     */\n    var defer = rest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = rest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrapper(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with arguments transformed by\n     * corresponding `transforms`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [transforms[_.identity]] The functions to transform.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = rest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return rest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = rest(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, array);\n          case 1: return func.call(this, args[0], array);\n          case 2: return func.call(this, args[0], args[1], array);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return rest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide an options object to indicate whether\n     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @type {Function}\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    function isArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value)) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = !Buffer ? stubFalse : function(value) {\n      return value instanceof Buffer;\n    };\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element,\n     *  else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || isString(value) || isFunction(value.splice) ||\n            isArguments(value) || isBuffer(value))) {\n        return !value.length;\n      }\n      if (isObjectLike(value)) {\n        var tag = getTag(value);\n        if (tag == mapTag || tag == setTag) {\n          return !value.size;\n        }\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return !(nonEnumShadows && keys(value).length);\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object,\n     *  else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number,\n     *  else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length,\n     *  else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    function isMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values. This method is\n     * equivalent to a `_.matches` function when `source` is partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the\n     * presence of the `core-js` package because `core-js` circumvents this kind\n     * of detection. Despite multiple requests, the `core-js` maintainer has made\n     * it clear: any attempt to fix the detection will be obstructed. As a result,\n     * we're left with little choice but to throw an error. Unfortunately, this\n     * also affects packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on `core-js`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error('This method is not supported with `core-js`. Try https://github.com/es-shims.');\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object,\n     *  else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) ||\n          objectToString.call(value) != objectTag || isHostObject(value)) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer,\n     *  else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    function isSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.c = 3;\n     * }\n     *\n     * function Bar() {\n     *   this.e = 5;\n     * }\n     *\n     * Foo.prototype.d = 4;\n     * Bar.prototype.f = 6;\n     *\n     * _.assign({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3, 'e': 5 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * function Bar() {\n     *   this.d = 4;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     * Bar.prototype.e = 5;\n     *\n     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keysIn(source), object);\n        return;\n      }\n      for (var key in source) {\n        assignValue(object, key, source[key]);\n      }\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = rest(function(object, paths) {\n      return baseAt(object, baseFlatten(paths, 1));\n    });\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = rest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = rest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = rest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      var isProto = isPrototype(object);\n      if (!(isProto || isArrayLike(object))) {\n        return baseKeys(object);\n      }\n      var indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      for (var key in object) {\n        if (baseHas(object, key) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(isProto && key == 'constructor')) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      var index = -1,\n          isProto = isPrototype(object),\n          props = baseKeysIn(object),\n          propsLength = props.length,\n          indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[iteratee(value, key, object)] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with seven arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = rest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(baseFlatten(props, 1), toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      predicate = getIteratee(predicate);\n      return basePickBy(object, function(value, key) {\n        return !predicate(value, key);\n      });\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = rest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toNumber(start) || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toNumber(end) || 0;\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toNumber(lower) || 0;\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toNumber(upper) || 0;\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in IE < 9, they can break out of\n     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the\n     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = toString(string).replace(reTrim, '');\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (separator == '' && reHasComplexSymbol.test(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return nativeSplit.call(string, separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      return string.lastIndexOf(baseToString(target), position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (reHasComplexSymbol.test(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = rest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['onClick']);\n     * jQuery(element).on('click', view.onClick);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = rest(function(object, methodNames) {\n      arrayEach(baseFlatten(methodNames, 1), function(key) {\n        key = toKey(key);\n        object[key] = bind(object[key], object);\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.constant(true),                _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return rest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.filter(users, _.conforms({ 'age': function(n) { return n > 38; } }));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument given to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`. The created function is equivalent to\n     * `_.isMatch` with a `source` partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = rest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = rest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * A method that returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return rest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [iteratees=[_.identity]] The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [predicates=[_.identity]] The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [predicates=[_.identity]] The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * A method that returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * A method that returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * A method that returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * A method that returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * A method that returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    });\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    });\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    });\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    });\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.deburr = deburr;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      predicate = getIteratee(predicate, 3);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Expose Lodash on the free variable `window` or `self` when available so it's\n  // globally accessible, even when bundled with Browserify, Webpack, etc. This\n  // also prevents errors in cases where Lodash is loaded by a script tag in the\n  // presence of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch\n  // for more details. Use `_.noConflict` to remove Lodash from the global object.\n  (freeSelf || {})._ = _;\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lodash.js\n ** module id = 22\n ** module chunks = 1 2 4\n **/","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' == this.readyState || '' == this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function(packets){\n  if ('open' == this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function(data){\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/transport.js\n ** module id = 37\n ** module chunks = 1 2\n **/","// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function(opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    } catch(e) { }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/xmlhttprequest.js\n ** module id = 38\n ** module chunks = 1 2\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/component-emitter/index.js\n ** module id = 39\n ** module chunks = 1 2\n **/","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/parseqs/index.js\n ** module id = 40\n ** module chunks = 1 2\n **/","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar json = require('json3');\nvar isArray = require('isarray');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    try {\n      p.data = json.parse(str.substr(i));\n    } catch(e){\n      return error();\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/socket.io-parser/index.js\n ** module id = 41\n ** module chunks = 1 2\n **/","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts){\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' == typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function() {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function(){\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.engine.id;\n    }\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function(v){\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function(v){\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function(v){\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function(v){\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function(v){\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function(v){\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function() {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function(fn){\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function() {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function(data){\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function(){\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function(){\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function(){\n  this.lastPing = new Date;\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function(){\n  this.emitAll('pong', new Date - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function(data){\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function(packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function(err){\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function(nsp){\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function(){\n      socket.id = self.engine.id;\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting evnet is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function(socket){\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function(packet){\n  debug('writing packet %j', packet);\n  var self = this;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function(encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function() {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function(){\n  debug('cleanup');\n\n  var sub;\n  while (sub = this.subs.shift()) sub.destroy();\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function(){\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' == this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function(reason){\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function(){\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function(){\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function(err){\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function(){\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/manager.js\n ** module id = 65\n ** module chunks = 1 2\n **/","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function(){\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/on.js\n ** module id = 66\n ** module chunks = 1 2\n **/","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp){\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function() {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function(){\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' == this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function(){\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev){\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' == typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function(packet){\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function(){\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' != this.nsp) {\n    this.packet({ type: parser.CONNECT });\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function(reason){\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet){\n  if (packet.nsp != this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function(packet){\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function(id){\n  var self = this;\n  var sent = false;\n  return function(){\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function(packet){\n  var ack = this.acks[packet.id];\n  if ('function' == typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function(){\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function(){\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function(){\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function(){\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function(){\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function(compress){\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/socket.js\n ** module id = 67\n ** module chunks = 1 2\n **/","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/component-bind/index.js\n ** module id = 68\n ** module chunks = 1 2\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/component-emitter/index.js\n ** module id = 69\n ** module chunks = 1 2\n **/","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts){\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname != location.hostname || port != opts.port;\n    xs = opts.secure != isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/transports/index.js\n ** module id = 70\n ** module chunks = 1 2\n **/","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function() {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function(){\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function(onPause){\n  var pending = 0;\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause(){\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function(){\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function(){\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function(){\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function(data){\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' == self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' == packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' != this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' == this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function(){\n  var self = this;\n\n  function close(){\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' == this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n  var callbackfn = function() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function(data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' == schema && this.port != 443) ||\n     ('http' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/transports/polling.js\n ** module id = 71\n ** module chunks = 1 2\n **/","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/yeast/index.js\n ** module id = 72\n ** module chunks = 1 2\n **/","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/indexof/index.js\n ** module id = 73\n ** module chunks = 1 2\n **/","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    return uri;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/parseuri/index.js\n ** module id = 74\n ** module chunks = 1 2\n **/","\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/socket.io-parser/is-buffer.js\n ** module id = 75\n ** module chunks = 1 2\n **/","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/socket.io-parser/~/isarray/index.js\n ** module id = 76\n ** module chunks = 1 2\n **/","import _ from 'lodash'\nexport const zipSampleToStudent = function (samples, students) {\n  if (samples.length > 0) {\n    _.forEach(samples, function (sample) {\n      let index = getIndexOfStudents(students, sample.student)\n      if (index > -1) {\n        let student = students[index]\n        if (_.has(sample, 'finishTime')) {\n          student['status'] = 'finish'\n        }\n        student['sample'] = sample\n        students[index] = student\n      }\n    })\n    return students\n  }\n}\n\nexport const studentIndex = function (students, student_id) {\n  return getIndexOfStudents(students, student_id)\n}\n\nfunction getIndexOfStudents (students, student_id) {\n  return _.findIndex(students, function (student) { return student._id === student_id })\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/quickquiz.js\n **/","/* MIT license */\r\nvar convert = require('color-convert');\r\nvar string = require('chartjs-color-string');\r\n\r\nvar Color = function (obj) {\r\n\tif (obj instanceof Color) {\r\n\t\treturn obj;\r\n\t}\r\n\tif (!(this instanceof Color)) {\r\n\t\treturn new Color(obj);\r\n\t}\r\n\r\n\tthis.values = {\r\n\t\trgb: [0, 0, 0],\r\n\t\thsl: [0, 0, 0],\r\n\t\thsv: [0, 0, 0],\r\n\t\thwb: [0, 0, 0],\r\n\t\tcmyk: [0, 0, 0, 0],\r\n\t\talpha: 1\r\n\t};\r\n\r\n\t// parse Color() argument\r\n\tvar vals;\r\n\tif (typeof obj === 'string') {\r\n\t\tvals = string.getRgba(obj);\r\n\t\tif (vals) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals = string.getHsla(obj)) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals = string.getHwb(obj)) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unable to parse color from string \"' + obj + '\"');\r\n\t\t}\r\n\t} else if (typeof obj === 'object') {\r\n\t\tvals = obj;\r\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\r\n\t\t\tthis.setValues('hsv', vals);\r\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n\t\t\tthis.setValues('cmyk', vals);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unable to parse color from object ' + JSON.stringify(obj));\r\n\t\t}\r\n\t}\r\n};\r\n\r\nColor.prototype = {\r\n\trgb: function () {\r\n\t\treturn this.setSpace('rgb', arguments);\r\n\t},\r\n\thsl: function () {\r\n\t\treturn this.setSpace('hsl', arguments);\r\n\t},\r\n\thsv: function () {\r\n\t\treturn this.setSpace('hsv', arguments);\r\n\t},\r\n\thwb: function () {\r\n\t\treturn this.setSpace('hwb', arguments);\r\n\t},\r\n\tcmyk: function () {\r\n\t\treturn this.setSpace('cmyk', arguments);\r\n\t},\r\n\r\n\trgbArray: function () {\r\n\t\treturn this.values.rgb;\r\n\t},\r\n\thslArray: function () {\r\n\t\treturn this.values.hsl;\r\n\t},\r\n\thsvArray: function () {\r\n\t\treturn this.values.hsv;\r\n\t},\r\n\thwbArray: function () {\r\n\t\tvar values = this.values;\r\n\t\tif (values.alpha !== 1) {\r\n\t\t\treturn values.hwb.concat([values.alpha]);\r\n\t\t}\r\n\t\treturn values.hwb;\r\n\t},\r\n\tcmykArray: function () {\r\n\t\treturn this.values.cmyk;\r\n\t},\r\n\trgbaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.rgb.concat([values.alpha]);\r\n\t},\r\n\thslaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.hsl.concat([values.alpha]);\r\n\t},\r\n\talpha: function (val) {\r\n\t\tif (val === undefined) {\r\n\t\t\treturn this.values.alpha;\r\n\t\t}\r\n\t\tthis.setValues('alpha', val);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tred: function (val) {\r\n\t\treturn this.setChannel('rgb', 0, val);\r\n\t},\r\n\tgreen: function (val) {\r\n\t\treturn this.setChannel('rgb', 1, val);\r\n\t},\r\n\tblue: function (val) {\r\n\t\treturn this.setChannel('rgb', 2, val);\r\n\t},\r\n\thue: function (val) {\r\n\t\tif (val) {\r\n\t\t\tval %= 360;\r\n\t\t\tval = val < 0 ? 360 + val : val;\r\n\t\t}\r\n\t\treturn this.setChannel('hsl', 0, val);\r\n\t},\r\n\tsaturation: function (val) {\r\n\t\treturn this.setChannel('hsl', 1, val);\r\n\t},\r\n\tlightness: function (val) {\r\n\t\treturn this.setChannel('hsl', 2, val);\r\n\t},\r\n\tsaturationv: function (val) {\r\n\t\treturn this.setChannel('hsv', 1, val);\r\n\t},\r\n\twhiteness: function (val) {\r\n\t\treturn this.setChannel('hwb', 1, val);\r\n\t},\r\n\tblackness: function (val) {\r\n\t\treturn this.setChannel('hwb', 2, val);\r\n\t},\r\n\tvalue: function (val) {\r\n\t\treturn this.setChannel('hsv', 2, val);\r\n\t},\r\n\tcyan: function (val) {\r\n\t\treturn this.setChannel('cmyk', 0, val);\r\n\t},\r\n\tmagenta: function (val) {\r\n\t\treturn this.setChannel('cmyk', 1, val);\r\n\t},\r\n\tyellow: function (val) {\r\n\t\treturn this.setChannel('cmyk', 2, val);\r\n\t},\r\n\tblack: function (val) {\r\n\t\treturn this.setChannel('cmyk', 3, val);\r\n\t},\r\n\r\n\thexString: function () {\r\n\t\treturn string.hexString(this.values.rgb);\r\n\t},\r\n\trgbString: function () {\r\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\trgbaString: function () {\r\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\tpercentString: function () {\r\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\thslString: function () {\r\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thslaString: function () {\r\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thwbString: function () {\r\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\r\n\t},\r\n\tkeyword: function () {\r\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\r\n\t},\r\n\r\n\trgbNumber: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n\t},\r\n\r\n\tluminosity: function () {\r\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar lum = [];\r\n\t\tfor (var i = 0; i < rgb.length; i++) {\r\n\t\t\tvar chan = rgb[i] / 255;\r\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n\t\t}\r\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n\t},\r\n\r\n\tcontrast: function (color2) {\r\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n\t\tvar lum1 = this.luminosity();\r\n\t\tvar lum2 = color2.luminosity();\r\n\t\tif (lum1 > lum2) {\r\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\r\n\t\t}\r\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\r\n\t},\r\n\r\n\tlevel: function (color2) {\r\n\t\tvar contrastRatio = this.contrast(color2);\r\n\t\tif (contrastRatio >= 7.1) {\r\n\t\t\treturn 'AAA';\r\n\t\t}\r\n\r\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\r\n\t},\r\n\r\n\tdark: function () {\r\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n\t\treturn yiq < 128;\r\n\t},\r\n\r\n\tlight: function () {\r\n\t\treturn !this.dark();\r\n\t},\r\n\r\n\tnegate: function () {\r\n\t\tvar rgb = [];\r\n\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = 255 - this.values.rgb[i];\r\n\t\t}\r\n\t\tthis.setValues('rgb', rgb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tlighten: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] += hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdarken: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] -= hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] += hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdesaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] -= hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\twhiten: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[1] += hwb[1] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tblacken: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[2] += hwb[2] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tgreyscale: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n\t\tthis.setValues('rgb', [val, val, val]);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclearer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\topaquer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\trotate: function (degrees) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\tvar hue = (hsl[0] + degrees) % 360;\r\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Ported from sass implementation in C\r\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n\t */\r\n\tmix: function (mixinColor, weight) {\r\n\t\tvar color1 = this;\r\n\t\tvar color2 = mixinColor;\r\n\t\tvar p = weight === undefined ? 0.5 : weight;\r\n\r\n\t\tvar w = 2 * p - 1;\r\n\t\tvar a = color1.alpha() - color2.alpha();\r\n\r\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n\t\tvar w2 = 1 - w1;\r\n\r\n\t\treturn this\r\n\t\t\t.rgb(\r\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\r\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\r\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\r\n\t\t\t)\r\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\t\treturn this.rgb();\r\n\t},\r\n\r\n\tclone: function () {\r\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\r\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\r\n\t\t// except 'alpha' which is a number.\r\n\t\tvar result = new Color();\r\n\t\tvar source = this.values;\r\n\t\tvar target = result.values;\r\n\t\tvar value, type;\r\n\r\n\t\tfor (var prop in source) {\r\n\t\t\tif (source.hasOwnProperty(prop)) {\r\n\t\t\t\tvalue = source[prop];\r\n\t\t\t\ttype = ({}).toString.call(value);\r\n\t\t\t\tif (type === '[object Array]') {\r\n\t\t\t\t\ttarget[prop] = value.slice(0);\r\n\t\t\t\t} else if (type === '[object Number]') {\r\n\t\t\t\t\ttarget[prop] = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('unexpected color value:', value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\nColor.prototype.spaces = {\r\n\trgb: ['red', 'green', 'blue'],\r\n\thsl: ['hue', 'saturation', 'lightness'],\r\n\thsv: ['hue', 'saturation', 'value'],\r\n\thwb: ['hue', 'whiteness', 'blackness'],\r\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n};\r\n\r\nColor.prototype.maxes = {\r\n\trgb: [255, 255, 255],\r\n\thsl: [360, 100, 100],\r\n\thsv: [360, 100, 100],\r\n\thwb: [360, 100, 100],\r\n\tcmyk: [100, 100, 100, 100]\r\n};\r\n\r\nColor.prototype.getValues = function (space) {\r\n\tvar values = this.values;\r\n\tvar vals = {};\r\n\r\n\tfor (var i = 0; i < space.length; i++) {\r\n\t\tvals[space.charAt(i)] = values[space][i];\r\n\t}\r\n\r\n\tif (values.alpha !== 1) {\r\n\t\tvals.a = values.alpha;\r\n\t}\r\n\r\n\t// {r: 255, g: 255, b: 255, a: 0.4}\r\n\treturn vals;\r\n};\r\n\r\nColor.prototype.setValues = function (space, vals) {\r\n\tvar values = this.values;\r\n\tvar spaces = this.spaces;\r\n\tvar maxes = this.maxes;\r\n\tvar alpha = 1;\r\n\tvar i;\r\n\r\n\tif (space === 'alpha') {\r\n\t\talpha = vals;\r\n\t} else if (vals.length) {\r\n\t\t// [10, 10, 10]\r\n\t\tvalues[space] = vals.slice(0, space.length);\r\n\t\talpha = vals[space.length];\r\n\t} else if (vals[space.charAt(0)] !== undefined) {\r\n\t\t// {r: 10, g: 10, b: 10}\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\r\n\t\t}\r\n\r\n\t\talpha = vals.a;\r\n\t} else if (vals[spaces[space][0]] !== undefined) {\r\n\t\t// {red: 10, green: 10, blue: 10}\r\n\t\tvar chans = spaces[space];\r\n\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[chans[i]];\r\n\t\t}\r\n\r\n\t\talpha = vals.alpha;\r\n\t}\r\n\r\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n\tif (space === 'alpha') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar capped;\r\n\r\n\t// cap values of the space prior converting all values\r\n\tfor (i = 0; i < space.length; i++) {\r\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n\t\tvalues[space][i] = Math.round(capped);\r\n\t}\r\n\r\n\t// convert to all the other color spaces\r\n\tfor (var sname in spaces) {\r\n\t\tif (sname !== space) {\r\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nColor.prototype.setSpace = function (space, args) {\r\n\tvar vals = args[0];\r\n\r\n\tif (vals === undefined) {\r\n\t\t// color.rgb()\r\n\t\treturn this.getValues(space);\r\n\t}\r\n\r\n\t// color.rgb(10, 10, 10)\r\n\tif (typeof vals === 'number') {\r\n\t\tvals = Array.prototype.slice.call(args);\r\n\t}\r\n\r\n\tthis.setValues(space, vals);\r\n\treturn this;\r\n};\r\n\r\nColor.prototype.setChannel = function (space, index, val) {\r\n\tvar svalues = this.values[space];\r\n\tif (val === undefined) {\r\n\t\t// color.red()\r\n\t\treturn svalues[index];\r\n\t} else if (val === svalues[index]) {\r\n\t\t// color.red(color.red())\r\n\t\treturn this;\r\n\t}\r\n\r\n\t// color.red(100)\r\n\tsvalues[index] = val;\r\n\tthis.setValues(space, svalues);\r\n\r\n\treturn this;\r\n};\r\n\r\nif (typeof window !== 'undefined') {\r\n\twindow.Color = Color;\r\n}\r\n\r\nmodule.exports = Color;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/~/chartjs-color/index.js\n ** module id = 119\n ** module chunks = 1 2\n **/","/* MIT license */\r\nvar colorNames = require('color-name');\r\n\r\nmodule.exports = {\r\n   getRgba: getRgba,\r\n   getHsla: getHsla,\r\n   getRgb: getRgb,\r\n   getHsl: getHsl,\r\n   getHwb: getHwb,\r\n   getAlpha: getAlpha,\r\n\r\n   hexString: hexString,\r\n   rgbString: rgbString,\r\n   rgbaString: rgbaString,\r\n   percentString: percentString,\r\n   percentaString: percentaString,\r\n   hslString: hslString,\r\n   hslaString: hslaString,\r\n   hwbString: hwbString,\r\n   keyword: keyword\r\n}\r\n\r\nfunction getRgba(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n       hex =  /^#([a-fA-F0-9]{6})$/,\r\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       keyword = /(\\w+)/;\r\n\r\n   var rgb = [0, 0, 0],\r\n       a = 1,\r\n       match = string.match(abbr);\r\n   if (match) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i] + match[i], 16);\r\n      }\r\n   }\r\n   else if (match = string.match(hex)) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n      }\r\n   }\r\n   else if (match = string.match(rgba)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i + 1]);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(per)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(keyword)) {\r\n      if (match[1] == \"transparent\") {\r\n         return [0, 0, 0, 0];\r\n      }\r\n      rgb = colorNames[match[1]];\r\n      if (!rgb) {\r\n         return;\r\n      }\r\n   }\r\n\r\n   for (var i = 0; i < rgb.length; i++) {\r\n      rgb[i] = scale(rgb[i], 0, 255);\r\n   }\r\n   if (!a && a != 0) {\r\n      a = 1;\r\n   }\r\n   else {\r\n      a = scale(a, 0, 1);\r\n   }\r\n   rgb[3] = a;\r\n   return rgb;\r\n}\r\n\r\nfunction getHsla(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hsl);\r\n   if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          s = scale(parseFloat(match[2]), 0, 100),\r\n          l = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, s, l, a];\r\n   }\r\n}\r\n\r\nfunction getHwb(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hwb);\r\n   if (match) {\r\n    var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          w = scale(parseFloat(match[2]), 0, 100),\r\n          b = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, w, b, a];\r\n   }\r\n}\r\n\r\nfunction getRgb(string) {\r\n   var rgba = getRgba(string);\r\n   return rgba && rgba.slice(0, 3);\r\n}\r\n\r\nfunction getHsl(string) {\r\n  var hsla = getHsla(string);\r\n  return hsla && hsla.slice(0, 3);\r\n}\r\n\r\nfunction getAlpha(string) {\r\n   var vals = getRgba(string);\r\n   if (vals) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHsla(string)) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHwb(string)) {\r\n      return vals[3];\r\n   }\r\n}\r\n\r\n// generators\r\nfunction hexString(rgb) {\r\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n              + hexDouble(rgb[2]);\r\n}\r\n\r\nfunction rgbString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return rgbaString(rgba, alpha);\r\n   }\r\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n}\r\n\r\nfunction rgbaString(rgba, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n   }\r\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n           + \", \" + alpha + \")\";\r\n}\r\n\r\nfunction percentString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return percentaString(rgba, alpha);\r\n   }\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n\r\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n}\r\n\r\nfunction percentaString(rgba, alpha) {\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n}\r\n\r\nfunction hslString(hsla, alpha) {\r\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n      return hslaString(hsla, alpha);\r\n   }\r\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n}\r\n\r\nfunction hslaString(hsla, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n   }\r\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n           + alpha + \")\";\r\n}\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\nfunction hwbString(hwb, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n   }\r\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n}\r\n\r\nfunction keyword(rgb) {\r\n  return reverseNames[rgb.slice(0, 3)];\r\n}\r\n\r\n// helpers\r\nfunction scale(num, min, max) {\r\n   return Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n  var str = num.toString(16).toUpperCase();\r\n  return (str.length < 2) ? \"0\" + str : str;\r\n}\r\n\r\n\r\n//create a list of reverse color names\r\nvar reverseNames = {};\r\nfor (var name in colorNames) {\r\n   reverseNames[colorNames[name]] = name;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/~/chartjs-color/~/chartjs-color-string/color-string.js\n ** module id = 120\n ** module chunks = 1 2\n **/","module.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/~/chartjs-color/~/chartjs-color-string/~/color-name/index.js\n ** module id = 121\n ** module chunks = 1 2\n **/","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/~/chartjs-color/~/color-convert/conversions.js\n ** module id = 122\n ** module chunks = 1 2\n **/","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/~/chartjs-color/~/color-convert/index.js\n ** module id = 123\n ** module chunks = 1 2\n **/","var Chart = require('./core/core.js')();\r\n\r\nrequire('./core/core.helpers')(Chart);\r\nrequire('./core/core.element')(Chart);\r\nrequire('./core/core.animation')(Chart);\r\nrequire('./core/core.controller')(Chart);\r\nrequire('./core/core.datasetController')(Chart);\r\nrequire('./core/core.layoutService')(Chart);\r\nrequire('./core/core.legend')(Chart);\r\nrequire('./core/core.plugin.js')(Chart);\r\nrequire('./core/core.scale')(Chart);\r\nrequire('./core/core.scaleService')(Chart);\r\nrequire('./core/core.title')(Chart);\r\nrequire('./core/core.tooltip')(Chart);\r\n\r\nrequire('./elements/element.arc')(Chart);\r\nrequire('./elements/element.line')(Chart);\r\nrequire('./elements/element.point')(Chart);\r\nrequire('./elements/element.rectangle')(Chart);\r\n\r\nrequire('./scales/scale.category')(Chart);\r\nrequire('./scales/scale.linear')(Chart);\r\nrequire('./scales/scale.logarithmic')(Chart);\r\nrequire('./scales/scale.radialLinear')(Chart);\r\nrequire('./scales/scale.time')(Chart);\r\n\r\n// Controllers must be loaded after elements\r\n// See Chart.core.datasetController.dataElementType\r\nrequire('./controllers/controller.bar')(Chart);\r\nrequire('./controllers/controller.bubble')(Chart);\r\nrequire('./controllers/controller.doughnut')(Chart);\r\nrequire('./controllers/controller.line')(Chart);\r\nrequire('./controllers/controller.polarArea')(Chart);\r\nrequire('./controllers/controller.radar')(Chart);\r\n\r\nrequire('./charts/Chart.Bar')(Chart);\r\nrequire('./charts/Chart.Bubble')(Chart);\r\nrequire('./charts/Chart.Doughnut')(Chart);\r\nrequire('./charts/Chart.Line')(Chart);\r\nrequire('./charts/Chart.PolarArea')(Chart);\r\nrequire('./charts/Chart.Radar')(Chart);\r\nrequire('./charts/Chart.Scatter')(Chart);\r\n\r\nwindow.Chart = module.exports = Chart;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/chart.js\n ** module id = 124\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Bar = function(context, config) {\r\n\t\tconfig.type = 'bar';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/charts/Chart.Bar.js\n ** module id = 125\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Bubble = function(context, config) {\r\n\t\tconfig.type = 'bubble';\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/charts/Chart.Bubble.js\n ** module id = 126\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Doughnut = function(context, config) {\r\n\t\tconfig.type = 'doughnut';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/charts/Chart.Doughnut.js\n ** module id = 127\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Line = function(context, config) {\r\n\t\tconfig.type = 'line';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/charts/Chart.Line.js\n ** module id = 128\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.PolarArea = function(context, config) {\r\n\t\tconfig.type = 'polarArea';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/charts/Chart.PolarArea.js\n ** module id = 129\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\t\r\n\tChart.Radar = function(context, config) {\r\n\t\tconfig.options = Chart.helpers.configMerge({ aspectRatio: 1 }, config.options);\r\n\t\tconfig.type = 'radar';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/charts/Chart.Radar.js\n ** module id = 130\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar defaultConfig = {\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"linear\", // scatter should not use a category axis\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t\tid: \"x-axis-1\" // need an ID so datasets can reference the scale\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tposition: \"left\",\r\n\t\t\t\tid: \"y-axis-1\"\r\n\t\t\t}]\r\n\t\t},\r\n\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Register the default config for this type\r\n\tChart.defaults.scatter = defaultConfig;\r\n\r\n\t// Scatter charts use line controllers\r\n\tChart.controllers.scatter = Chart.controllers.line;\r\n\r\n\tChart.Scatter = function(context, config) {\r\n\t\tconfig.type = 'scatter';\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/charts/Chart.Scatter.js\n ** module id = 131\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.bar = {\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"category\",\r\n\r\n\t\t\t\t// Specific to Bar Controller\r\n\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t// grid line settings\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\"\r\n\t\t\t}]\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.bar = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Rectangle,\r\n\r\n\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\r\n\r\n\t\t\t// Use this to indicate that this is a bar dataset.\r\n\t\t\tthis.getMeta().bar = true;\r\n\t\t},\r\n\r\n\t\t// Get the number of datasets that display bars. We use this to correctly calculate the bar width\r\n\t\tgetBarCount: function getBarCount() {\r\n\t\t\tvar barCount = 0;\r\n\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar meta = this.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\tif (meta.bar && this.chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t++barCount;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\treturn barCount;\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\thelpers.each(this.getMeta().data, function(rectangle, index) {\r\n\t\t\t\tthis.updateElement(rectangle, index, reset);\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tupdateElement: function updateElement(rectangle, index, reset) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar scaleBase = yScale.getBasePixel();\r\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar dataset = this.getDataset();\r\n\r\n\t\t\thelpers.extend(rectangle, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: this.calculateBarX(index, this.index),\r\n\t\t\t\t\ty: reset ? scaleBase : this.calculateBarY(index, this.index),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\tlabel: this.chart.data.labels[index],\r\n\t\t\t\t\tdatasetLabel: dataset.label,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tbase: reset ? scaleBase : this.calculateBarBase(this.index, index),\r\n\t\t\t\t\twidth: this.calculateBarWidth(index),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\r\n\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\trectangle.pivot();\r\n\t\t},\r\n\r\n\t\tcalculateBarBase: function(datasetIndex, index) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar base = 0;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar datasets = chart.data.datasets;\r\n\t\t\t\tvar value = datasets[datasetIndex].data[index];\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tvar negDS = datasets[i];\r\n\t\t\t\t\t\tvar negDSMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (negDSMeta.bar && negDSMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tbase += negDS.data[index] < 0 ? negDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var j = 0; j < datasetIndex; j++) {\r\n\t\t\t\t\t\tvar posDS = datasets[j];\r\n\t\t\t\t\t\tvar posDSMeta = chart.getDatasetMeta(j);\r\n\t\t\t\t\t\tif (posDSMeta.bar && posDSMeta.yAxisID === yScale.id && chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t\tbase += posDS.data[index] > 0 ? posDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn yScale.getPixelForValue(base);\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getBasePixel();\r\n\t\t},\r\n\r\n\t\tgetRuler: function(index) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar datasetCount = this.getBarCount();\r\n\r\n\t\t\tvar tickWidth;\r\n\r\n\t\t\tif (xScale.options.type === 'category') {\r\n\t\t\t\ttickWidth = xScale.getPixelForTick(index + 1) - xScale.getPixelForTick(index);\r\n\t\t\t} else {\r\n\t\t\t\t// Average width\r\n\t\t\t\ttickWidth = xScale.width / xScale.ticks.length;\r\n\t\t\t}\r\n\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\r\n\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\r\n\t\t\tvar fullBarWidth = categoryWidth / datasetCount;\r\n\r\n\t\t\tif (xScale.ticks.length !== this.chart.data.labels.length) {\r\n\t\t\t    var perc = xScale.ticks.length / this.chart.data.labels.length;\r\n\t\t\t    fullBarWidth = fullBarWidth * perc;\r\n\t\t\t}\r\n\r\n\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\r\n\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdatasetCount: datasetCount,\r\n\t\t\t\ttickWidth: tickWidth,\r\n\t\t\t\tcategoryWidth: categoryWidth,\r\n\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\tfullBarWidth: fullBarWidth,\r\n\t\t\t\tbarWidth: barWidth,\r\n\t\t\t\tbarSpacing: barSpacing\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculateBarWidth: function(index) {\r\n\t\t\tvar xScale = this.getScaleForId(this.getMeta().xAxisID);\r\n\t\t\tvar ruler = this.getRuler(index);\r\n\t\t\treturn xScale.options.stacked ? ruler.categoryWidth : ruler.barWidth;\r\n\t\t},\r\n\r\n\t\t// Get bar index from the given dataset index accounting for the fact that not all bars are visible\r\n\t\tgetBarIndex: function(datasetIndex) {\r\n\t\t\tvar barIndex = 0;\r\n\t\t\tvar meta, j;\r\n\r\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\tmeta = this.chart.getDatasetMeta(j);\r\n\t\t\t\tif (meta.bar && this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t++barIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn barIndex;\r\n\t\t},\r\n\r\n\t\tcalculateBarX: function(index, datasetIndex) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar barIndex = this.getBarIndex(datasetIndex);\r\n\r\n\t\t\tvar ruler = this.getRuler(index);\r\n\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, this.chart.isCombo);\r\n\t\t\tleftTick -= this.chart.isCombo ? (ruler.tickWidth / 2) : 0;\r\n\r\n\t\t\tif (xScale.options.stacked) {\r\n\t\t\t\treturn leftTick + (ruler.categoryWidth / 2) + ruler.categorySpacing;\r\n\t\t\t}\r\n\r\n\t\t\treturn leftTick +\r\n\t\t\t\t(ruler.barWidth / 2) +\r\n\t\t\t\truler.categorySpacing +\r\n\t\t\t\t(ruler.barWidth * barIndex) +\r\n\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t(ruler.barSpacing * barIndex);\r\n\t\t},\r\n\r\n\t\tcalculateBarY: function(index, datasetIndex) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar value = this.getDataset().data[index];\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\r\n\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\tsumNeg = 0;\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar ds = this.chart.data.datasets[i];\r\n\t\t\t\t\tvar dsMeta = this.chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && this.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\thelpers.each(this.getMeta().data, function(rectangle, index) {\r\n\t\t\t\tvar d = this.getDataset().data[index];\r\n\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\r\n\t\t\t\t\trectangle.transition(easingDecimal).draw();\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(rectangle) {\r\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\tvar index = rectangle._index;\r\n\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar model = rectangle._model;\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(rectangle) {\r\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\tvar index = rectangle._index;\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar model = rectangle._model;\r\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\t// including horizontalBar in the bar file, instead of a file of its own\r\n\t// it extends bar (like pie extends doughnut)\r\n\tChart.defaults.horizontalBar = {\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tposition: \"bottom\"\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\tposition: \"left\",\r\n\t\t\t\ttype: \"category\",\r\n\r\n\t\t\t\t// Specific to Horizontal Bar Controller\r\n\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t// grid line settings\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t},\r\n\t\telements: {\r\n\t\t\trectangle: {\r\n\t\t\t\tborderSkipped: 'left'\r\n\t\t\t}\r\n\t\t},\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\t\tvar title = '';\r\n\r\n\t\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\r\n\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\r\n\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn title;\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n\t\tupdateElement: function updateElement(rectangle, index, reset, numBars) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar scaleBase = xScale.getBasePixel();\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n\t\t\thelpers.extend(rectangle, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? scaleBase : this.calculateBarX(index, this.index),\r\n\t\t\t\t\ty: this.calculateBarY(index, this.index),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\tlabel: this.chart.data.labels[index],\r\n\t\t\t\t\tdatasetLabel: dataset.label,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tbase: reset ? scaleBase : this.calculateBarBase(this.index, index),\r\n\t\t\t\t\theight: this.calculateBarHeight(index),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\r\n\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\r\n\t\t\t\t},\r\n\r\n\t\t\t\tdraw: function () {\r\n\r\n\t\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\t\tvar vm = this._view;\r\n\r\n\t\t\t\t\tvar halfHeight = vm.height / 2,\r\n\t\t\t\t\t\ttopY = vm.y - halfHeight,\r\n\t\t\t\t\t\tbottomY = vm.y + halfHeight,\r\n\t\t\t\t\t\tright = vm.base - (vm.base - vm.x),\r\n\t\t\t\t\t\thalfStroke = vm.borderWidth / 2;\r\n\r\n\t\t\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\t\ttopY += halfStroke;\r\n\t\t\t\t\t\tbottomY -= halfStroke;\r\n\t\t\t\t\t\tright += halfStroke;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\t\t\tctx.lineWidth = vm.borderWidth;\r\n\r\n\t\t\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t\t\t// | 1 2 |\r\n\t\t\t\t\t// | 0 3 |\r\n\t\t\t\t\tvar corners = [\r\n\t\t\t\t\t\t[vm.base, bottomY],\r\n\t\t\t\t\t\t[vm.base, topY],\r\n\t\t\t\t\t\t[right, topY],\r\n\t\t\t\t\t\t[right, bottomY]\r\n\t\t\t\t\t];\r\n\r\n\t\t\t\t\t// Find first (starting) corner with fallback to 'bottom'\r\n\t\t\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\r\n\t\t\t\t\tif (startCorner === -1)\r\n\t\t\t\t\t\tstartCorner = 0;\r\n\r\n\t\t\t\t\tfunction cornerAt(index) {\r\n\t\t\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tinRange: function (mouseX, mouseY) {\r\n\t\t\t\t\tvar vm = this._view;\r\n\t\t\t\t\tvar inRange = false;\r\n\r\n\t\t\t\t\tif (vm) {\r\n\t\t\t\t\t\tif (vm.x < vm.base) {\r\n\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.x && mouseX <= vm.base);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.base && mouseX <= vm.x);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn inRange;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\trectangle.pivot();\r\n\t\t},\r\n\r\n\t\tcalculateBarBase: function (datasetIndex, index) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar base = 0;\r\n\r\n\t\t\tif (xScale.options.stacked) {\r\n\r\n\t\t\t\tvar value = this.chart.data.datasets[datasetIndex].data[index];\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tvar negDS = this.chart.data.datasets[i];\r\n\t\t\t\t\t\tvar negDSMeta = this.chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (negDSMeta.bar && negDSMeta.xAxisID === xScale.id && this.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tbase += negDS.data[index] < 0 ? negDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var j = 0; j < datasetIndex; j++) {\r\n\t\t\t\t\t\tvar posDS = this.chart.data.datasets[j];\r\n\t\t\t\t\t\tvar posDSMeta = this.chart.getDatasetMeta(j);\r\n\t\t\t\t\t\tif (posDSMeta.bar && posDSMeta.xAxisID === xScale.id && this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t\tbase += posDS.data[index] > 0 ? posDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn xScale.getPixelForValue(base);\r\n\t\t\t}\r\n\r\n\t\t\treturn xScale.getBasePixel();\r\n\t\t},\r\n\r\n\t\tgetRuler: function (index) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar datasetCount = this.getBarCount();\r\n\r\n\t\t\tvar tickHeight;\r\n\t\t\tif (yScale.options.type === 'category') {\r\n\t\t\t\ttickHeight = yScale.getPixelForTick(index + 1) - yScale.getPixelForTick(index);\r\n\t\t\t} else {\r\n\t\t\t\t// Average width\r\n\t\t\t\ttickHeight = yScale.width / yScale.ticks.length;\r\n\t\t\t}\r\n\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\r\n\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\r\n\t\t\tvar fullBarHeight = categoryHeight / datasetCount;\r\n\r\n\t\t\tif (yScale.ticks.length !== this.chart.data.labels.length) {\r\n\t\t\t\tvar perc = yScale.ticks.length / this.chart.data.labels.length;\r\n\t\t\t\tfullBarHeight = fullBarHeight * perc;\r\n\t\t\t}\r\n\r\n\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\r\n\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdatasetCount: datasetCount,\r\n\t\t\t\ttickHeight: tickHeight,\r\n\t\t\t\tcategoryHeight: categoryHeight,\r\n\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\tfullBarHeight: fullBarHeight,\r\n\t\t\t\tbarHeight: barHeight,\r\n\t\t\t\tbarSpacing: barSpacing,\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculateBarHeight: function (index) {\r\n\t\t\tvar yScale = this.getScaleForId(this.getMeta().yAxisID);\r\n\t\t\tvar ruler = this.getRuler(index);\r\n\t\t\treturn yScale.options.stacked ? ruler.categoryHeight : ruler.barHeight;\r\n\t\t},\r\n\r\n\t\tcalculateBarX: function (index, datasetIndex) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar value = this.getDataset().data[index];\r\n\r\n\t\t\tif (xScale.options.stacked) {\r\n\r\n\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\tsumNeg = 0;\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar ds = this.chart.data.datasets[i];\r\n\t\t\t\t\tvar dsMeta = this.chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && this.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn xScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tcalculateBarY: function (index, datasetIndex) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar barIndex = this.getBarIndex(datasetIndex);\r\n\r\n\t\t\tvar ruler = this.getRuler(index);\r\n\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, this.chart.isCombo);\r\n\t\t\ttopTick -= this.chart.isCombo ? (ruler.tickHeight / 2) : 0;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\treturn topTick + (ruler.categoryHeight / 2) + ruler.categorySpacing;\r\n\t\t\t}\r\n\r\n\t\t\treturn topTick +\r\n\t\t\t\t(ruler.barHeight / 2) +\r\n\t\t\t\truler.categorySpacing +\r\n\t\t\t\t(ruler.barHeight * barIndex) +\r\n\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t(ruler.barSpacing * barIndex);\r\n\t\t}\r\n\t});\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/controllers/controller.bar.js\n ** module id = 132\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.bubble = {\r\n\t\thover: {\r\n\t\t\tmode: \"single\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"linear\", // bubble should probably use a linear scale by default\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t\tid: \"x-axis-0\" // need an ID so datasets can reference the scale\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tposition: \"left\",\r\n\t\t\t\tid: \"y-axis-0\"\r\n\t\t\t}]\r\n\t\t},\r\n\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t\treturn datasetLabel + ': (' + dataPoint.x + ', ' + dataPoint.y + ', ' + dataPoint.r + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.bubble = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar points = meta.data;\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tthis.updateElement(point, index, reset);\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar data = dataset.data[index];\r\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\r\n\t\t\thelpers.extend(point, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(data, index, this.index, this.chart.isCombo),\r\n\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, this.index),\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : this.getRadius(data),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, pointElementOptions.backgroundColor),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, pointElementOptions.borderColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, pointElementOptions.borderWidth),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar model = point._model;\r\n\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\r\n\r\n\t\t\tpoint.pivot();\r\n\t\t},\r\n\r\n\t\tgetRadius: function(value) {\r\n\t\t\treturn value.r || this.chart.options.elements.point.radius;\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, this.chart.options.elements.point.hoverRadius)) + this.getRadius(this.getDataset().data[point._index]);\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\r\n\t\t\tmodel.radius = custom.radius ? custom.radius : this.getRadius(dataset.data[point._index]);\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, pointElementOptions.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, pointElementOptions.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, pointElementOptions.borderWidth);\r\n\t\t}\r\n\t});\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/controllers/controller.bubble.js\n ** module id = 133\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tdefaults = Chart.defaults;\r\n\r\n\tdefaults.doughnut = {\r\n\t\tanimation: {\r\n\t\t\t//Boolean - Whether we animate the rotation of the Doughnut\r\n\t\t\tanimateRotate: true,\r\n\t\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\r\n\t\t\tanimateScale: false\r\n\t\t},\r\n\t\taspectRatio: 1,\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\t\tlegendCallback: function(chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar labels = data.labels;\r\n\r\n\t\t\tif (datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join(\"\");\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//The percentage of the chart that we cut out of the middle.\r\n\t\tcutoutPercentage: 50,\r\n\r\n\t\t//The rotation of the chart, where the first data arc begins.\r\n\t\trotation: Math.PI * -0.5,\r\n\r\n\t\t//The total circumference of the chart.\r\n\t\tcircumference: Math.PI * 2.0,\r\n\r\n\t\t// Need to override these to give a nice default\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdefaults.pie = helpers.clone(defaults.doughnut);\r\n\thelpers.extend(defaults.pie, {\r\n\t\tcutoutPercentage: 0\r\n\t});\r\n\r\n\r\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Arc,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n\t\tgetRingIndex: function getRingIndex(datasetIndex) {\r\n\t\t\tvar ringIndex = 0;\r\n\r\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t++ringIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ringIndex;\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar chart = _this.chart,\r\n\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\topts = chart.options,\r\n\t\t\t\tarcOpts = opts.elements.arc,\r\n\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\r\n\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\r\n\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\r\n\t\t\t\toffset = {\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0\r\n\t\t\t\t},\r\n\t\t\t\tmeta = _this.getMeta(),\r\n\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\r\n\t\t\t\tcircumference = opts.circumference;\r\n\r\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n\t\t\tif (circumference < Math.PI * 2.0) {\r\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\r\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n\t\t\t\tvar endAngle = startAngle + circumference;\r\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\r\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\r\n\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\r\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\r\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\r\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\r\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\r\n\t\t\t}\r\n\r\n\t\t\tchart.outerRadius = Math.max(minSize / 2, 0);\r\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 1, 0);\r\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\r\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\r\n\r\n\t\t\tmeta.total = _this.calculateTotal();\r\n\r\n\t\t\t_this.outerRadius = chart.outerRadius - (chart.radiusLength * _this.getRingIndex(_this.index));\r\n\t\t\t_this.innerRadius = _this.outerRadius - chart.radiusLength;\r\n\r\n\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\t_this.updateElement(arc, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar chart = _this.chart,\r\n\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\topts = chart.options,\r\n\t\t\t\tanimationOpts = opts.animation,\r\n\t\t\t\tarcOpts = opts.elements.arc,\r\n\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\r\n\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\r\n\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\tendAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\tdataset = _this.getDataset(),\r\n\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : _this.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\r\n\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : _this.innerRadius,\r\n\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : _this.outerRadius,\r\n\t\t\t\tcustom = arc.custom || {},\r\n\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\r\n\t\t\thelpers.extend(arc, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: _this.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: centerX + chart.offsetX,\r\n\t\t\t\t\ty: centerY + chart.offsetY,\r\n\t\t\t\t\tstartAngle: startAngle,\r\n\t\t\t\t\tendAngle: endAngle,\r\n\t\t\t\t\tcircumference: circumference,\r\n\t\t\t\t\touterRadius: outerRadius,\r\n\t\t\t\t\tinnerRadius: innerRadius,\r\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar model = arc._model;\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(dataset.backgroundColor, index, arcOpts.backgroundColor);\r\n\t\t\tmodel.hoverBackgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, arcOpts.hoverBackgroundColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(dataset.borderWidth, index, arcOpts.borderWidth);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(dataset.borderColor, index, arcOpts.borderColor);\r\n\r\n\t\t\t// Set correct angles if not resetting\r\n\t\t\tif (!reset || !animationOpts.animateRotate) {\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tmodel.startAngle = opts.rotation;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmodel.startAngle = _this.getMeta().data[index - 1]._model.endAngle;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\r\n\t\t\t}\r\n\r\n\t\t\tarc.pivot();\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(arc) {\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t},\r\n\r\n\t\tcalculateTotal: function() {\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar total = 0;\r\n\t\t\tvar value;\r\n\r\n\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\tvalue = dataset.data[index];\r\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\r\n\t\t\t\t\ttotal += Math.abs(value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn total;\r\n\t\t},\r\n\r\n\t\tcalculateCircumference: function(value) {\r\n\t\t\tvar total = this.getMeta().total;\r\n\t\t\tif (total > 0 && !isNaN(value)) {\r\n\t\t\t\treturn (Math.PI * 2.0) * (value / total);\r\n\t\t\t} else {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/controllers/controller.doughnut.js\n ** module id = 134\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.line = {\r\n\t\tshowLines: true,\r\n\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\tid: 'x-axis-0'\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tid: 'y-axis-0'\r\n\t\t\t}]\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.line = Chart.DatasetController.extend({\r\n\r\n\t\tdatasetElementType: Chart.elements.Line,\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.chart.options;\r\n\r\n\t\t\tChart.DatasetController.prototype.addElementAndReset.call(me, index);\r\n\r\n\t\t\t// Make sure bezier control points are updated\r\n\t\t\tif (options.showLines && options.elements.line.tension !== 0) {\r\n\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar line = meta.dataset;\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar options = me.chart.options;\r\n\t\t\tvar lineElementOptions = options.elements.line;\r\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar i, ilen, dataset, custom;\r\n\r\n\t\t\t// Update Line\r\n\t\t\tif (options.showLines) {\r\n\t\t\t\tdataset = me.getDataset();\r\n\t\t\t\tcustom = line.custom || {};\r\n\r\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Utility\r\n\t\t\t\tline._scale = scale;\r\n\t\t\t\tline._datasetIndex = me.index;\r\n\t\t\t\t// Data\r\n\t\t\t\tline._children = points;\r\n\t\t\t\t// Model\r\n\t\t\t\tline._model = {\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\t// Scale\r\n\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\tscaleZero: scale.getBasePixel()\r\n\t\t\t\t};\r\n\r\n\t\t\t\tline.pivot();\r\n\t\t\t}\r\n\r\n\t\t\t// Update Points\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tme.updateElement(points[i], i, reset);\r\n\t\t\t}\r\n\r\n\t\t\tif (options.showLines && lineElementOptions.tension !== 0) {\r\n\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetPointBackgroundColor: function(point, index) {\r\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.backgroundColor) {\r\n\t\t\t\tbackgroundColor = custom.backgroundColor;\r\n\t\t\t} else if (dataset.pointBackgroundColor) {\r\n\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n\t\t\t} else if (dataset.backgroundColor) {\r\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn backgroundColor;\r\n\t\t},\r\n\r\n\t\tgetPointBorderColor: function(point, index) {\r\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.borderColor) {\r\n\t\t\t\tborderColor = custom.borderColor;\r\n\t\t\t} else if (dataset.pointBorderColor) {\r\n\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n\t\t\t} else if (dataset.borderColor) {\r\n\t\t\t\tborderColor = dataset.borderColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn borderColor;\r\n\t\t},\r\n\r\n\t\tgetPointBorderWidth: function(point, index) {\r\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.borderWidth) {\r\n\t\t\t\tborderWidth = custom.borderWidth;\r\n\t\t\t} else if (dataset.pointBorderWidth) {\r\n\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n\t\t\t} else if (dataset.borderWidth) {\r\n\t\t\t\tborderWidth = dataset.borderWidth;\r\n\t\t\t}\r\n\r\n\t\t\treturn borderWidth;\r\n\t\t},\r\n\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar datasetIndex = me.index;\r\n\t\t\tvar value = dataset.data[index];\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar pointOptions = me.chart.options.elements.point;\r\n\t\t\tvar x, y;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t}\r\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\r\n\t\t\t}\r\n\r\n\t\t\tx = xScale.getPixelForValue(value, index, datasetIndex, me.chart.isCombo);\r\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex, me.chart.isCombo);\r\n\r\n\t\t\t// Utility\r\n\t\t\tpoint._xScale = xScale;\r\n\t\t\tpoint._yScale = yScale;\r\n\t\t\tpoint._datasetIndex = datasetIndex;\r\n\t\t\tpoint._index = index;\r\n\r\n\t\t\t// Desired view properties\r\n\t\t\tpoint._model = {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\r\n\t\t\t\t// Appearance\r\n\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\r\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\r\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\r\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n\t\t\t\t// Tooltip\r\n\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculatePointY: function(value, index, datasetIndex, isCombo) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar sumPos = 0;\r\n\t\t\tvar sumNeg = 0;\r\n\t\t\tvar i, ds, dsMeta;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tds = chart.data.datasets[i];\r\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.type === 'line' && chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tupdateBezierControlPoints: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar area = this.chart.chartArea;\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar i, ilen, point, model, controlPoints;\r\n\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoint = points[i];\r\n\t\t\t\tmodel = point._model;\r\n\t\t\t\tcontrolPoints = helpers.splineCurve(\r\n\t\t\t\t\thelpers.previousItem(points, i)._model,\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\thelpers.nextItem(points, i)._model,\r\n\t\t\t\t\tmeta.dataset._model.tension\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\r\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, area.right), area.left);\r\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, area.bottom), area.top);\r\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, area.right), area.left);\r\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, area.bottom), area.top);\r\n\r\n\t\t\t\t// Now pivot the point for animation\r\n\t\t\t\tpoint.pivot();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\t// Transition Point Locations\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].transition(easingDecimal);\r\n\t\t\t}\r\n\r\n\t\t\t// Transition and Draw the line\r\n\t\t\tif (this.chart.options.showLines) {\r\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\t\t\t}\r\n\r\n\t\t\t// Draw the points\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].draw();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t}\r\n\r\n\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\r\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\r\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\r\n\t\t}\r\n\t});\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/controllers/controller.line.js\n ** module id = 135\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.polarArea = {\r\n\r\n\t\tscale: {\r\n\t\t\ttype: \"radialLinear\",\r\n\t\t\tlineArc: true // so that lines are circular\r\n\t\t},\r\n\r\n\t\t//Boolean - Whether to animate the rotation of the chart\r\n\t\tanimation: {\r\n\t\t\tanimateRotate: true,\r\n\t\t\tanimateScale: true\r\n\t\t},\r\n\r\n\t\taspectRatio: 1,\r\n\t\tlegendCallback: function(chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar labels = data.labels;\r\n\r\n\t\t\tif (datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\">');\r\n\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</span></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join(\"\");\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Need to override these to give a nice default\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Arc,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar chart = _this.chart;\r\n\t\t\tvar chartArea = chart.chartArea;\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar opts = chart.options;\r\n\t\t\tvar arcOpts = opts.elements.arc;\r\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\r\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\r\n\t\t\t_this.outerRadius = chart.outerRadius - (chart.radiusLength * _this.index);\r\n\t\t\t_this.innerRadius = _this.outerRadius - chart.radiusLength;\r\n\r\n\t\t\tmeta.count = _this.countVisibleElements();\r\n\r\n\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\t_this.updateElement(arc, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar chart = _this.chart;\r\n\t\t\tvar chartArea = chart.chartArea;\r\n\t\t\tvar dataset = _this.getDataset();\r\n\t\t\tvar opts = chart.options;\r\n\t\t\tvar animationOpts = opts.animation;\r\n\t\t\tvar arcOpts = opts.elements.arc;\r\n\t\t\tvar custom = arc.custom || {};\r\n\t\t\tvar scale = chart.scale;\r\n\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\tvar labels = chart.data.labels;\r\n\r\n\t\t\tvar circumference = _this.calculateCircumference(dataset.data[index]);\r\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\r\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\r\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\r\n\t\t\tvar visibleCount = 0;\r\n\t\t\tvar meta = _this.getMeta();\r\n\t\t\tfor (var i = 0; i < index; ++i) {\r\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\r\n\t\t\t\t\t++visibleCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar distance = arc.hidden? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\t\t\tvar startAngle = (-0.5 * Math.PI) + (circumference * visibleCount);\r\n\t\t\tvar endAngle = startAngle + (arc.hidden? 0 : circumference);\r\n\r\n\t\t\tvar resetModel = {\r\n\t\t\t\tx: centerX,\r\n\t\t\t\ty: centerY,\r\n\t\t\t\tinnerRadius: 0,\r\n\t\t\t\touterRadius: animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]),\r\n\t\t\t\tstartAngle: animationOpts.animateRotate ? Math.PI * -0.5 : startAngle,\r\n\t\t\t\tendAngle: animationOpts.animateRotate ? Math.PI * -0.5 : endAngle,\r\n\r\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(dataset.backgroundColor, index, arcOpts.backgroundColor),\r\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(dataset.borderWidth, index, arcOpts.borderWidth),\r\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(dataset.borderColor, index, arcOpts.borderColor),\r\n\r\n\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\r\n\t\t\t};\r\n\r\n\t\t\thelpers.extend(arc, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: _this.index,\r\n\t\t\t\t_index: index,\r\n\t\t\t\t_scale: scale,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: reset ? resetModel : {\r\n\t\t\t\t\tx: centerX,\r\n\t\t\t\t\ty: centerY,\r\n\t\t\t\t\tinnerRadius: 0,\r\n\t\t\t\t\touterRadius: distance,\r\n\t\t\t\t\tstartAngle: startAngle,\r\n\t\t\t\t\tendAngle: endAngle,\r\n\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(dataset.backgroundColor, index, arcOpts.backgroundColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(dataset.borderWidth, index, arcOpts.borderWidth),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(dataset.borderColor, index, arcOpts.borderColor),\r\n\r\n\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tarc.pivot();\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(arc) {\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t},\r\n\r\n\t\tcountVisibleElements: function() {\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\tcalculateCircumference: function(value) {\r\n\t\t\tvar count = this.getMeta().count;\r\n\t\t\tif (count > 0 && !isNaN(value)) {\r\n\t\t\t\treturn (2 * Math.PI) / count;\r\n\t\t\t} else {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/controllers/controller.polarArea.js\n ** module id = 136\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.radar = {\r\n\t\tscale: {\r\n\t\t\ttype: \"radialLinear\"\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tline: {\r\n\t\t\t\ttension: 0 // no bezier in radar\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.radar = Chart.DatasetController.extend({\r\n\r\n\t\tdatasetElementType: Chart.elements.Line,\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tChart.DatasetController.prototype.addElementAndReset.call(this, index);\r\n\r\n\t\t\t// Make sure bezier control points are updated\r\n\t\t\tthis.updateBezierControlPoints();\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar line = meta.dataset;\r\n\t\t\tvar points = meta.data;\r\n\t\t\tvar custom = line.custom || {};\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar lineElementOptions = this.chart.options.elements.line;\r\n\t\t\tvar scale = this.chart.scale;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.extend(meta.dataset, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t// Data\r\n\t\t\t\t_children: points,\r\n\t\t\t\t_loop: true,\r\n\t\t\t\t// Model\r\n\t\t\t\t_model: {\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\r\n\t\t\t\t\t// Scale\r\n\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\tscaleZero: scale.getBasePosition()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tmeta.dataset.pivot();\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tthis.updateElement(point, index, reset);\r\n\t\t\t}, this);\r\n\r\n\r\n\t\t\t// Update bezier control points\r\n\t\t\tthis.updateBezierControlPoints();\r\n\t\t},\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar scale = this.chart.scale;\r\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\r\n\r\n\t\t\thelpers.extend(point, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index,\r\n\t\t\t\t_scale: scale,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\r\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.tension, this.chart.options.elements.line.tension),\r\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\r\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\r\n\t\t},\r\n\t\tupdateBezierControlPoints: function() {\r\n\t\t\tvar chartArea = this.chart.chartArea;\r\n\t\t\tvar meta = this.getMeta();\r\n\r\n\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\tvar model = point._model;\r\n\t\t\t\tvar controlPoints = helpers.splineCurve(\r\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\r\n\t\t\t\t\tmodel.tension\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\r\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\r\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\r\n\r\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\r\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\r\n\r\n\t\t\t\t// Now pivot the point for animation\r\n\t\t\t\tpoint.pivot();\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\r\n\t\t\t// Transition Point Locations\r\n\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\tpoint.transition(easingDecimal);\r\n\t\t\t});\r\n\r\n\t\t\t// Transition and Draw the line\r\n\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\r\n\t\t\t// Draw the points\r\n\t\t\thelpers.each(meta.data, function(point) {\r\n\t\t\t\tpoint.draw();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar model = point._model;\r\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\r\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\r\n\t\t}\r\n\t});\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/controllers/controller.radar.js\n ** module id = 137\n ** module chunks = 1 2\n **/","/*global window: false */\r\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.animation = {\r\n\t\tduration: 1000,\r\n\t\teasing: \"easeOutQuart\",\r\n\t\tonProgress: helpers.noop,\r\n\t\tonComplete: helpers.noop\r\n\t};\r\n\r\n\tChart.Animation = Chart.Element.extend({\r\n\t\tcurrentStep: null, // the current animation step\r\n\t\tnumSteps: 60, // default number of steps\r\n\t\teasing: \"\", // the easing to use for this animation\r\n\t\trender: null, // render function used by the animation service\r\n\r\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\r\n\t});\r\n\r\n\tChart.animationService = {\r\n\t\tframeDuration: 17,\r\n\t\tanimations: [],\r\n\t\tdropFrames: 0,\r\n\t\trequest: null,\r\n\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\r\n\r\n\t\t\tif (!lazy) {\r\n\t\t\t\tchartInstance.animating = true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var index = 0; index < this.animations.length; ++index) {\r\n\t\t\t\tif (this.animations[index].chartInstance === chartInstance) {\r\n\t\t\t\t\t// replacing an in progress animation\r\n\t\t\t\t\tthis.animations[index].animationObject = animationObject;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.animations.push({\r\n\t\t\t\tchartInstance: chartInstance,\r\n\t\t\t\tanimationObject: animationObject\r\n\t\t\t});\r\n\r\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n\t\t\tif (this.animations.length === 1) {\r\n\t\t\t\tthis.requestAnimationFrame();\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Cancel the animation for a given chart instance\r\n\t\tcancelAnimation: function(chartInstance) {\r\n\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\r\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\r\n\t\t\t});\r\n\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tthis.animations.splice(index, 1);\r\n\t\t\t\tchartInstance.animating = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\trequestAnimationFrame: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.request === null) {\r\n\t\t\t\t// Skip animation frame requests until the active one is executed.\r\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\r\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\r\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\r\n\t\t\t\t\tme.request = null;\r\n\t\t\t\t\tme.startDigest();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tstartDigest: function() {\r\n\r\n\t\t\tvar startTime = Date.now();\r\n\t\t\tvar framesToDrop = 0;\r\n\r\n\t\t\tif (this.dropFrames > 1) {\r\n\t\t\t\tframesToDrop = Math.floor(this.dropFrames);\r\n\t\t\t\tthis.dropFrames = this.dropFrames % 1;\r\n\t\t\t}\r\n\r\n\t\t\tvar i = 0;\r\n\t\t\twhile (i < this.animations.length) {\r\n\t\t\t\tif (this.animations[i].animationObject.currentStep === null) {\r\n\t\t\t\t\tthis.animations[i].animationObject.currentStep = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.animations[i].animationObject.currentStep += 1 + framesToDrop;\r\n\r\n\t\t\t\tif (this.animations[i].animationObject.currentStep > this.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\tthis.animations[i].animationObject.currentStep = this.animations[i].animationObject.numSteps;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.animations[i].animationObject.render(this.animations[i].chartInstance, this.animations[i].animationObject);\r\n\t\t\t\tif (this.animations[i].animationObject.onAnimationProgress && this.animations[i].animationObject.onAnimationProgress.call) {\r\n\t\t\t\t\tthis.animations[i].animationObject.onAnimationProgress.call(this.animations[i].chartInstance, this.animations[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.animations[i].animationObject.currentStep === this.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\tif (this.animations[i].animationObject.onAnimationComplete && this.animations[i].animationObject.onAnimationComplete.call) {\r\n\t\t\t\t\t\tthis.animations[i].animationObject.onAnimationComplete.call(this.animations[i].chartInstance, this.animations[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// executed the last frame. Remove the animation.\r\n\t\t\t\t\tthis.animations[i].chartInstance.animating = false;\r\n\r\n\t\t\t\t\tthis.animations.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t++i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar endTime = Date.now();\r\n\t\t\tvar dropFrames = (endTime - startTime) / this.frameDuration;\r\n\r\n\t\t\tthis.dropFrames += dropFrames;\r\n\r\n\t\t\t// Do we have more stuff to animate?\r\n\t\t\tif (this.animations.length > 0) {\r\n\t\t\t\tthis.requestAnimationFrame();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.animation.js\n ** module id = 138\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\t//Create a dictionary of chart types, to allow for extension of existing types\r\n\tChart.types = {};\r\n\r\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\r\n\tChart.instances = {};\r\n\r\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n\tChart.controllers = {};\r\n\r\n\t// The main controller of a chart\r\n\tChart.Controller = function(instance) {\r\n\r\n\t\tthis.chart = instance;\r\n\t\tthis.config = instance.config;\r\n\t\tthis.options = this.config.options = helpers.configMerge(Chart.defaults.global, Chart.defaults[this.config.type], this.config.options || {});\r\n\t\tthis.id = helpers.uid();\r\n\r\n\t\tObject.defineProperty(this, 'data', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this.config.data;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//Add the chart instance to the global namespace\r\n\t\tChart.instances[this.id] = this;\r\n\r\n\t\tif (this.options.responsive) {\r\n\t\t\t// Silent resize before chart draws\r\n\t\t\tthis.resize(true);\r\n\t\t}\r\n\r\n\t\tthis.initialize();\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\thelpers.extend(Chart.Controller.prototype, {\r\n\r\n\t\tinitialize: function initialize() {\r\n\t\t\t// Before init plugin notification\r\n\t\t\tChart.pluginService.notifyPlugins('beforeInit', [this]);\r\n\r\n\t\t\tthis.bindEvents();\r\n\r\n\t\t\t// Make sure controllers are built first so that each dataset is bound to an axis before the scales\r\n\t\t\t// are built\r\n\t\t\tthis.ensureScalesHaveIDs();\r\n\t\t\tthis.buildOrUpdateControllers();\r\n\t\t\tthis.buildScales();\r\n\t\t\tthis.buildSurroundingItems();\r\n\t\t\tthis.updateLayout();\r\n\t\t\tthis.resetElements();\r\n\t\t\tthis.initToolTip();\r\n\t\t\tthis.update();\r\n\r\n\t\t\t// After init plugin notification\r\n\t\t\tChart.pluginService.notifyPlugins('afterInit', [this]);\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tclear: function clear() {\r\n\t\t\thelpers.clear(this.chart);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tstop: function stop() {\r\n\t\t\t// Stops any current animation loop occuring\r\n\t\t\tChart.animationService.cancelAnimation(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tresize: function resize(silent) {\r\n\t\t\tvar canvas = this.chart.canvas;\r\n\t\t\tvar newWidth = helpers.getMaximumWidth(this.chart.canvas);\r\n\t\t\tvar newHeight = (this.options.maintainAspectRatio && isNaN(this.chart.aspectRatio) === false && isFinite(this.chart.aspectRatio) && this.chart.aspectRatio !== 0) ? newWidth / this.chart.aspectRatio : helpers.getMaximumHeight(this.chart.canvas);\r\n\r\n\t\t\tvar sizeChanged = this.chart.width !== newWidth || this.chart.height !== newHeight;\r\n\r\n\t\t\tif (!sizeChanged)\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tcanvas.width = this.chart.width = newWidth;\r\n\t\t\tcanvas.height = this.chart.height = newHeight;\r\n\r\n\t\t\thelpers.retinaScale(this.chart);\r\n\r\n\t\t\tif (!silent) {\r\n\t\t\t\tthis.stop();\r\n\t\t\t\tthis.update(this.options.responsiveAnimationDuration);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tensureScalesHaveIDs: function ensureScalesHaveIDs() {\r\n\t\t\tvar options = this.options;\r\n\t\t\tvar scalesOptions = options.scales || {};\r\n\t\t\tvar scaleOptions = options.scale;\r\n\r\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n\t\t\t});\r\n\r\n\t\t\tif (scaleOptions) {\r\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Builds a map of scale ID to scale object for future lookup.\r\n\t\t */\r\n\t\tbuildScales: function buildScales() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.options;\r\n\t\t\tvar scales = me.scales = {};\r\n\t\t\tvar items = [];\r\n\r\n\t\t\tif (options.scales) {\r\n\t\t\t\titems = items.concat(\r\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\r\n\t\t\t\t\t\treturn { options: xAxisOptions, dtype: 'category' }; }),\r\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\r\n\t\t\t\t\t\treturn { options: yAxisOptions, dtype: 'linear' }; }));\r\n\t\t\t}\r\n\r\n\t\t\tif (options.scale) {\r\n\t\t\t\titems.push({ options: options.scale, dtype: 'radialLinear', isDefault: true });\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(items, function(item, index) {\r\n\t\t\t\tvar scaleOptions = item.options;\r\n\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\r\n\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n\t\t\t\tif (!scaleClass) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scale = new scaleClass({\r\n\t\t\t\t\tid: scaleOptions.id,\r\n\t\t\t\t\toptions: scaleOptions,\r\n\t\t\t\t\tctx: me.chart.ctx,\r\n\t\t\t\t\tchart: me\r\n\t\t\t\t});\r\n\r\n\t\t\t\tscales[scale.id] = scale;\r\n\r\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n\t\t\t\t// make the logic easier and remove some useless? custom code.\r\n\t\t\t\tif (item.isDefault) {\r\n\t\t\t\t\tme.scale = scale;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tChart.scaleService.addScalesToLayout(this);\r\n\t\t},\r\n\r\n\t\tbuildSurroundingItems: function() {\r\n\t\t\tif (this.options.title) {\r\n\t\t\t\tthis.titleBlock = new Chart.Title({\r\n\t\t\t\t\tctx: this.chart.ctx,\r\n\t\t\t\t\toptions: this.options.title,\r\n\t\t\t\t\tchart: this\r\n\t\t\t\t});\r\n\r\n\t\t\t\tChart.layoutService.addBox(this, this.titleBlock);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.legend) {\r\n\t\t\t\tthis.legend = new Chart.Legend({\r\n\t\t\t\t\tctx: this.chart.ctx,\r\n\t\t\t\t\toptions: this.options.legend,\r\n\t\t\t\t\tchart: this\r\n\t\t\t\t});\r\n\r\n\t\t\t\tChart.layoutService.addBox(this, this.legend);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateLayout: function() {\r\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\r\n\t\t},\r\n\r\n\t\tbuildOrUpdateControllers: function buildOrUpdateControllers() {\r\n\t\t\tvar types = [];\r\n\t\t\tvar newControllers = [];\r\n\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\t\t\t\tif (!meta.type) {\r\n\t\t\t\t\tmeta.type = dataset.type || this.config.type;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttypes.push(meta.type);\r\n\r\n\t\t\t\tif (meta.controller) {\r\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](this, datasetIndex);\r\n\t\t\t\t\tnewControllers.push(meta.controller);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\tif (types.length > 1) {\r\n\t\t\t\tfor (var i = 1; i < types.length; i++) {\r\n\t\t\t\t\tif (types[i] !== types[i - 1]) {\r\n\t\t\t\t\t\tthis.isCombo = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn newControllers;\r\n\t\t},\r\n\r\n\t\tresetElements: function resetElements() {\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tthis.getDatasetMeta(datasetIndex).controller.reset();\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tupdate: function update(animationDuration, lazy) {\r\n\t\t\tChart.pluginService.notifyPlugins('beforeUpdate', [this]);\r\n\r\n\t\t\t// In case the entire data object changed\r\n\t\t\tthis.tooltip._data = this.data;\r\n\r\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\r\n\t\t\tvar newControllers = this.buildOrUpdateControllers();\r\n\r\n\t\t\t// Make sure all dataset controllers have correct meta data counts\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tthis.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n\t\t\t}, this);\r\n\r\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\r\n\r\n\t\t\t// Apply changes to the dataets that require the scales to have been calculated i.e BorderColor chages\r\n\t\t\tChart.pluginService.notifyPlugins('afterScaleUpdate', [this]);\r\n\r\n\t\t\t// Can only reset the new controllers after the scales have been updated\r\n\t\t\thelpers.each(newControllers, function(controller) {\r\n\t\t\t\tcontroller.reset();\r\n\t\t\t});\r\n\r\n\t\t\t// This will loop through any data and do the appropriate element update for the type\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tthis.getDatasetMeta(datasetIndex).controller.update();\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\r\n\t\t\tChart.pluginService.notifyPlugins('afterUpdate', [this]);\r\n\r\n\t\t\tthis.render(animationDuration, lazy);\r\n\t\t},\r\n\r\n\t\trender: function render(duration, lazy) {\r\n\t\t\tChart.pluginService.notifyPlugins('beforeRender', [this]);\r\n\r\n\t\t\tvar animationOptions = this.options.animation;\r\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n\t\t\t\tvar animation = new Chart.Animation();\r\n\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; //60 fps\r\n\t\t\t\tanimation.easing = animationOptions.easing;\r\n\r\n\t\t\t\t// render function\r\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\r\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\r\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\r\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\r\n\r\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// user events\r\n\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\r\n\t\t\t\tanimation.onAnimationComplete = animationOptions.onComplete;\r\n\r\n\t\t\t\tChart.animationService.addAnimation(this, animation, duration, lazy);\r\n\t\t\t} else {\r\n\t\t\t\tthis.draw();\r\n\t\t\t\tif (animationOptions && animationOptions.onComplete && animationOptions.onComplete.call) {\r\n\t\t\t\t\tanimationOptions.onComplete.call(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\tthis.clear();\r\n\r\n\t\t\tChart.pluginService.notifyPlugins('beforeDraw', [this, easingDecimal]);\r\n\r\n\t\t\t// Draw all the scales\r\n\t\t\thelpers.each(this.boxes, function(box) {\r\n\t\t\t\tbox.draw(this.chartArea);\r\n\t\t\t}, this);\r\n\t\t\tif (this.scale) {\r\n\t\t\t\tthis.scale.draw();\r\n\t\t\t}\r\n\r\n\t\t\t// Clip out the chart area so that anything outside does not draw. This is necessary for zoom and pan to function\r\n\t\t\tvar context = this.chart.ctx;\r\n\t\t\tcontext.save();\r\n\t\t\tcontext.beginPath();\r\n\t\t\tcontext.rect(this.chartArea.left, this.chartArea.top, this.chartArea.right - this.chartArea.left, this.chartArea.bottom - this.chartArea.top);\r\n\t\t\tcontext.clip();\r\n\r\n\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (this.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tthis.getDatasetMeta(datasetIndex).controller.draw(ease);\r\n\t\t\t\t}\r\n\t\t\t}, this, true);\r\n\r\n\t\t\t// Restore from the clipping operation\r\n\t\t\tcontext.restore();\r\n\r\n\t\t\t// Finally draw the tooltip\r\n\t\t\tthis.tooltip.transition(easingDecimal).draw();\r\n\r\n\t\t\tChart.pluginService.notifyPlugins('afterDraw', [this, easingDecimal]);\r\n\t\t},\r\n\r\n\t\t// Get the single element that was clicked on\r\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n\t\tgetElementAtEvent: function(e) {\r\n\t\t\tvar eventPosition = helpers.getRelativePosition(e, this.chart);\r\n\t\t\tvar elementsArray = [];\r\n\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (this.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\t\t\tif (element.inRange(eventPosition.x, eventPosition.y)) {\r\n\t\t\t\t\t\t\telementsArray.push(element);\r\n\t\t\t\t\t\t\treturn elementsArray;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn elementsArray;\r\n\t\t},\r\n\r\n\t\tgetElementsAtEvent: function(e) {\r\n\t\t\tvar eventPosition = helpers.getRelativePosition(e, this.chart);\r\n\t\t\tvar elementsArray = [];\r\n\r\n\t\t\tvar found = (function() {\r\n\t\t\t\tif (this.data.datasets) {\r\n\t\t\t\t\tfor (var i = 0; i < this.data.datasets.length; i++) {\r\n\t\t\t\t\t\tvar meta = this.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (this.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tfor (var j = 0; j < meta.data.length; j++) {\r\n\t\t\t\t\t\t\t\tif (meta.data[j].inRange(eventPosition.x, eventPosition.y)) {\r\n\t\t\t\t\t\t\t\t\treturn meta.data[j];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).call(this);\r\n\r\n\t\t\tif (!found) {\r\n\t\t\t\treturn elementsArray;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (this.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\telementsArray.push(meta.data[found._index]);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn elementsArray;\r\n\t\t},\r\n\r\n\t\tgetElementsAtEventForMode: function(e, mode) {\r\n\t\t\tvar me = this;\r\n\t\t\tswitch (mode) {\r\n\t\t\tcase 'single':\r\n\t\t\t\treturn me.getElementAtEvent(e);\r\n\t\t\tcase 'label':\r\n\t\t\t\treturn me.getElementsAtEvent(e);\r\n\t\t\tcase 'dataset':\r\n\t\t\t\treturn me.getDatasetAtEvent(e);\r\n\t\t\tdefault:\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDatasetAtEvent: function(e) {\r\n\t\t\tvar elementsArray = this.getElementAtEvent(e);\r\n\r\n\t\t\tif (elementsArray.length > 0) {\r\n\t\t\t\telementsArray = this.getDatasetMeta(elementsArray[0]._datasetIndex).data;\r\n\t\t\t}\r\n\r\n\t\t\treturn elementsArray;\r\n\t\t},\r\n\r\n\t\tgetDatasetMeta: function(datasetIndex) {\r\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\r\n\t\t\tif (!dataset._meta) {\r\n\t\t\t\tdataset._meta = {};\r\n\t\t\t}\r\n\r\n\t\t\tvar meta = dataset._meta[this.id];\r\n\t\t\tif (!meta) {\r\n\t\t\t\tmeta = dataset._meta[this.id] = {\r\n\t\t\t\ttype: null,\r\n\t\t\t\tdata: [],\r\n\t\t\t\tdataset: null,\r\n\t\t\t\tcontroller: null,\r\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\r\n\t\t\t\txAxisID: null,\r\n\t\t\t\tyAxisID: null\r\n\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn meta;\r\n\t\t},\r\n\r\n\t\tgetVisibleDatasetCount: function() {\r\n\t\t\tvar count = 0;\r\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\r\n\t\t\t\t if (this.isDatasetVisible(i)) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\tisDatasetVisible: function(datasetIndex) {\r\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\r\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n\t\t},\r\n\r\n\t\tgenerateLegend: function generateLegend() {\r\n\t\t\treturn this.options.legendCallback(this);\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy() {\r\n\t\t\tthis.clear();\r\n\t\t\thelpers.unbindEvents(this, this.events);\r\n\t\t\thelpers.removeResizeListener(this.chart.canvas.parentNode);\r\n\r\n\t\t\t// Reset canvas height/width attributes\r\n\t\t\tvar canvas = this.chart.canvas;\r\n\t\t\tcanvas.width = this.chart.width;\r\n\t\t\tcanvas.height = this.chart.height;\r\n\r\n\t\t\t// if we scaled the canvas in response to a devicePixelRatio !== 1, we need to undo that transform here\r\n\t\t\tif (this.chart.originalDevicePixelRatio !== undefined) {\r\n\t\t\t\tthis.chart.ctx.scale(1 / this.chart.originalDevicePixelRatio, 1 / this.chart.originalDevicePixelRatio);\r\n\t\t\t}\r\n\r\n\t\t\t// Reset to the old style since it may have been changed by the device pixel ratio changes\r\n\t\t\tcanvas.style.width = this.chart.originalCanvasStyleWidth;\r\n\t\t\tcanvas.style.height = this.chart.originalCanvasStyleHeight;\r\n\r\n\t\t\tChart.pluginService.notifyPlugins('destroy', [this]);\r\n\r\n\t\t\tdelete Chart.instances[this.id];\r\n\t\t},\r\n\r\n\t\ttoBase64Image: function toBase64Image() {\r\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\r\n\t\t},\r\n\r\n\t\tinitToolTip: function initToolTip() {\r\n\t\t\tthis.tooltip = new Chart.Tooltip({\r\n\t\t\t\t_chart: this.chart,\r\n\t\t\t\t_chartInstance: this,\r\n\t\t\t\t_data: this.data,\r\n\t\t\t\t_options: this.options\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tbindEvents: function bindEvents() {\r\n\t\t\thelpers.bindEvents(this, this.options.events, function(evt) {\r\n\t\t\t\tthis.eventHandler(evt);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\r\n\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\r\n\t\t\tvar element, i, ilen;\r\n\r\n\t\t\tswitch (mode) {\r\n\t\t\tcase 'single':\r\n\t\t\t\telements = [ elements[0] ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'label':\r\n\t\t\tcase 'dataset':\r\n\t\t\t\t// elements = elements;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t// unsupported mode\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\r\n\t\t\t\telement = elements[i];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\teventHandler: function eventHandler(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar tooltip = me.tooltip;\r\n\t\t\tvar options = me.options || {};\r\n\t\t\tvar hoverOptions = options.hover;\r\n\t\t\tvar tooltipsOptions = options.tooltips;\r\n\r\n\t\t\tme.lastActive = me.lastActive || [];\r\n\t\t\tme.lastTooltipActive = me.lastTooltipActive || [];\r\n\r\n\t\t\t// Find Active Elements for hover and tooltips\r\n\t\t\tif (e.type === 'mouseout') {\r\n\t\t\t\tme.active = [];\r\n\t\t\t\tme.tooltipActive = [];\r\n\t\t\t} else {\r\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode);\r\n\t\t\t\tme.tooltipActive =  me.getElementsAtEventForMode(e, tooltipsOptions.mode);\r\n\t\t\t}\r\n\r\n\t\t\t// On Hover hook\r\n\t\t\tif (hoverOptions.onHover) {\r\n\t\t\t\thoverOptions.onHover.call(me, me.active);\r\n\t\t\t}\r\n\r\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\r\n\t\t\t\tif (options.onClick) {\r\n\t\t\t\t\toptions.onClick.call(me, e, me.active);\r\n\t\t\t\t}\r\n\t\t\t\tif (me.legend && me.legend.handleEvent) {\r\n\t\t\t\t\tme.legend.handleEvent(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove styling for last active (even if it may still be active)\r\n\t\t\tif (me.lastActive.length) {\r\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n\t\t\t}\r\n\r\n\t\t\t// Built in hover styling\r\n\t\t\tif (me.active.length && hoverOptions.mode) {\r\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n\t\t\t}\r\n\r\n\t\t\t// Built in Tooltips\r\n\t\t\tif (tooltipsOptions.enabled || tooltipsOptions.custom) {\r\n\t\t\t\ttooltip.initialize();\r\n\t\t\t\ttooltip._active = me.tooltipActive;\r\n\t\t\t\ttooltip.update(true);\r\n\t\t\t}\r\n\r\n\t\t\t// Hover animations\r\n\t\t\ttooltip.pivot();\r\n\r\n\t\t\tif (!me.animating) {\r\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\r\n\t\t\t\tif (!helpers.arrayEquals(me.active, me.lastActive) ||\r\n\t\t\t\t\t!helpers.arrayEquals(me.tooltipActive, me.lastTooltipActive)) {\r\n\r\n\t\t\t\t\tme.stop();\r\n\r\n\t\t\t\t\tif (tooltipsOptions.enabled || tooltipsOptions.custom) {\r\n\t\t\t\t\t\ttooltip.update(true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// We only need to render at this point. Updating will cause scales to be\r\n\t\t\t\t\t// recomputed generating flicker & using more memory than necessary.\r\n\t\t\t\t\tme.render(hoverOptions.animationDuration, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remember Last Actives\r\n\t\t\tme.lastActive = me.active;\r\n\t\t\tme.lastTooltipActive = me.tooltipActive;\r\n\t\t\treturn me;\r\n\t\t}\r\n\t});\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.controller.js\n ** module id = 139\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar noop = helpers.noop;\r\n\r\n\t// Base class for all dataset controllers (line, bar, etc)\r\n\tChart.DatasetController = function(chart, datasetIndex) {\r\n\t\tthis.initialize.call(this, chart, datasetIndex);\r\n\t};\r\n\r\n\thelpers.extend(Chart.DatasetController.prototype, {\r\n\r\n\t\t/**\r\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n\t\t * @type {Chart.core.element}\r\n\t\t */\r\n\t\tdatasetElementType: null,\r\n\r\n\t\t/**\r\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n\t\t * @type {Chart.core.element}\r\n\t\t */\r\n\t\tdataElementType: null,\r\n\r\n\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\tthis.chart = chart;\r\n\t\t\tthis.index = datasetIndex;\r\n\t\t\tthis.linkScales();\r\n\t\t\tthis.addElements();\r\n\t\t},\r\n\r\n\t\tupdateIndex: function(datasetIndex) {\r\n\t\t\tthis.index = datasetIndex;\r\n\t\t},\r\n\r\n\t\tlinkScales: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar dataset = this.getDataset();\r\n\r\n\t\t\tif (meta.xAxisID === null) {\r\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || this.chart.options.scales.xAxes[0].id;\r\n\t\t\t}\r\n\t\t\tif (meta.yAxisID === null) {\r\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || this.chart.options.scales.yAxes[0].id;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDataset: function() {\r\n\t\t\treturn this.chart.data.datasets[this.index];\r\n\t\t},\r\n\r\n\t\tgetMeta: function() {\r\n\t\t\treturn this.chart.getDatasetMeta(this.index);\r\n\t\t},\r\n\r\n\t\tgetScaleForId: function(scaleID) {\r\n\t\t\treturn this.chart.scales[scaleID];\r\n\t\t},\r\n\r\n\t\treset: function() {\r\n\t\t\tthis.update(true);\r\n\t\t},\r\n\r\n\t\tcreateMetaDataset: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar type = me.datasetElementType;\r\n\t\t\treturn type && new type({\r\n\t\t\t\t_chart: me.chart.chart,\r\n\t\t\t\t_datasetIndex: me.index\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tcreateMetaData: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar type = me.dataElementType;\r\n\t\t\treturn type && new type({\r\n\t\t\t\t_chart: me.chart.chart,\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\taddElements: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar data = me.getDataset().data || [];\r\n\t\t\tvar metaData = meta.data;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\r\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(meta, i);\r\n\t\t\t}\r\n\r\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\r\n\t\t},\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar element = me.createMetaData(index);\r\n\t\t\tme.getMeta().data.splice(index, 0, element);\r\n\t\t\tme.updateElement(element, index, true);\r\n\t\t},\r\n\r\n\t\tbuildOrUpdateElements: function buildOrUpdateElements() {\r\n\t\t\t// Handle the number of data points changing\r\n\t\t\tvar meta = this.getMeta(),\r\n\t\t\t\tmd = meta.data,\r\n\t\t\t\tnumData = this.getDataset().data.length,\r\n\t\t\t\tnumMetaData = md.length;\r\n\r\n\t\t\t// Make sure that we handle number of datapoints changing\r\n\t\t\tif (numData < numMetaData) {\r\n\t\t\t\t// Remove excess bars for data points that have been removed\r\n\t\t\t\tmd.splice(numData, numMetaData - numData);\r\n\t\t\t} else if (numData > numMetaData) {\r\n\t\t\t\t// Add new elements\r\n\t\t\t\tfor (var index = numMetaData; index < numData; ++index) {\r\n\t\t\t\t\tthis.addElementAndReset(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdate: noop,\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\thelpers.each(this.getMeta().data, function(element, index) {\r\n\t\t\t\telement.transition(easingDecimal).draw();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(element, elementOpts) {\r\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\tindex = element._index,\r\n\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\tcolor = helpers.color,\r\n\t\t\t\tmodel = element._model;\r\n\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(element) {\r\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\tindex = element._index,\r\n\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\tcolor = helpers.color,\r\n\t\t\t\tgetHoverColor = helpers.getHoverColor,\r\n\t\t\t\tmodel = element._model;\r\n\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t}\r\n\t});\r\n\r\n\tChart.DatasetController.extend = helpers.inherits;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.datasetController.js\n ** module id = 140\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n  var helpers = Chart.helpers;\r\n\r\n  Chart.elements = {};\r\n\r\n  Chart.Element = function(configuration) {\r\n    helpers.extend(this, configuration);\r\n    this.initialize.apply(this, arguments);\r\n  };\r\n  helpers.extend(Chart.Element.prototype, {\r\n    initialize: function() {\r\n      this.hidden = false;\r\n    },\r\n    pivot: function() {\r\n      if (!this._view) {\r\n        this._view = helpers.clone(this._model);\r\n      }\r\n      this._start = helpers.clone(this._view);\r\n      return this;\r\n    },\r\n    transition: function(ease) {\r\n      if (!this._view) {\r\n        this._view = helpers.clone(this._model);\r\n      }\r\n\r\n      // No animation -> No Transition\r\n      if (ease === 1) {\r\n        this._view = this._model;\r\n        this._start = null;\r\n        return this;\r\n      }\r\n\r\n      if (!this._start) {\r\n        this.pivot();\r\n      }\r\n\r\n      helpers.each(this._model, function(value, key) {\r\n\r\n        if (key[0] === '_') {\r\n          // Only non-underscored properties\r\n        }\r\n\r\n        // Init if doesn't exist\r\n        else if (!this._view.hasOwnProperty(key)) {\r\n          if (typeof value === 'number' && !isNaN(this._view[key])) {\r\n            this._view[key] = value * ease;\r\n          } else {\r\n            this._view[key] = value;\r\n          }\r\n        }\r\n\r\n        // No unnecessary computations\r\n        else if (value === this._view[key]) {\r\n          // It's the same! Woohoo!\r\n        }\r\n\r\n        // Color transitions if possible\r\n        else if (typeof value === 'string') {\r\n          try {\r\n            var color = helpers.color(this._model[key]).mix(helpers.color(this._start[key]), ease);\r\n            this._view[key] = color.rgbString();\r\n          } catch (err) {\r\n            this._view[key] = value;\r\n          }\r\n        }\r\n        // Number transitions\r\n        else if (typeof value === 'number') {\r\n          var startVal = this._start[key] !== undefined && isNaN(this._start[key]) === false ? this._start[key] : 0;\r\n          this._view[key] = ((this._model[key] - startVal) * ease) + startVal;\r\n        }\r\n        // Everything else\r\n        else {\r\n          this._view[key] = value;\r\n        }\r\n      }, this);\r\n\r\n      return this;\r\n    },\r\n    tooltipPosition: function() {\r\n      return {\r\n        x: this._model.x,\r\n        y: this._model.y\r\n      };\r\n    },\r\n    hasValue: function() {\r\n      return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n    }\r\n  });\r\n\r\n  Chart.Element.extend = helpers.inherits;\r\n\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.element.js\n ** module id = 141\n ** module chunks = 1 2\n **/","/*global window: false */\r\n/*global document: false */\r\n\"use strict\";\r\n\r\nvar color = require('chartjs-color');\r\n\r\nmodule.exports = function(Chart) {\r\n\t//Global Chart helpers object for utility methods and classes\r\n\tvar helpers = Chart.helpers = {};\r\n\r\n\t//-- Basic js utility methods\r\n\thelpers.each = function(loopable, callback, self, reverse) {\r\n\t\t// Check to see if null or undefined firstly.\r\n\t\tvar i, len;\r\n\t\tif (helpers.isArray(loopable)) {\r\n\t\t\tlen = loopable.length;\r\n\t\t\tif (reverse) {\r\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\r\n\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (typeof loopable === 'object') {\r\n\t\t\tvar keys = Object.keys(loopable);\r\n\t\t\tlen = keys.length;\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.clone = function(obj) {\r\n\t\tvar objClone = {};\r\n\t\thelpers.each(obj, function(value, key) {\r\n\t\t\tif (helpers.isArray(value)) {\r\n\t\t\t\tobjClone[key] = value.slice(0);\r\n\t\t\t} else if (typeof value === 'object' && value !== null) {\r\n\t\t\t\tobjClone[key] = helpers.clone(value);\r\n\t\t\t} else {\r\n\t\t\t\tobjClone[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn objClone;\r\n\t};\r\n\thelpers.extend = function(base) {\r\n\t\tvar len = arguments.length;\r\n\t\tvar additionalArgs = [];\r\n\t\tfor (var i = 1; i < len; i++) {\r\n\t\t\tadditionalArgs.push(arguments[i]);\r\n\t\t}\r\n\t\thelpers.each(additionalArgs, function(extensionObject) {\r\n\t\t\thelpers.each(extensionObject, function(value, key) {\r\n\t\t\t\tbase[key] = value;\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn base;\r\n\t};\r\n\t// Need a special merge function to chart configs since they are now grouped\r\n\thelpers.configMerge = function(_base) {\r\n\t\tvar base = helpers.clone(_base);\r\n\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\r\n\t\t\thelpers.each(extension, function(value, key) {\r\n\t\t\t\tif (key === 'scales') {\r\n\t\t\t\t\t// Scale config merging is complex. Add out own function here for that\r\n\t\t\t\t\tbase[key] = helpers.scaleMerge(base.hasOwnProperty(key) ? base[key] : {}, value);\r\n\r\n\t\t\t\t} else if (key === 'scale') {\r\n\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\r\n\t\t\t\t\tbase[key] = helpers.configMerge(base.hasOwnProperty(key) ? base[key] : {}, Chart.scaleService.getScaleDefaults(value.type), value);\r\n\t\t\t\t} else if (base.hasOwnProperty(key) && helpers.isArray(base[key]) && helpers.isArray(value)) {\r\n\t\t\t\t\t// In this case we have an array of objects replacing another array. Rather than doing a strict replace,\r\n\t\t\t\t\t// merge. This allows easy scale option merging\r\n\t\t\t\t\tvar baseArray = base[key];\r\n\r\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\r\n\t\t\t\t\t\tif (index < baseArray.length) {\r\n\t\t\t\t\t\t\tif (typeof baseArray[index] === 'object' && baseArray[index] !== null && typeof valueObj === 'object' && valueObj !== null) {\r\n\t\t\t\t\t\t\t\t// Two objects are coming together. Do a merge of them.\r\n\t\t\t\t\t\t\t\tbaseArray[index] = helpers.configMerge(baseArray[index], valueObj);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Just overwrite in this case since there is nothing to merge\r\n\t\t\t\t\t\t\t\tbaseArray[index] = valueObj;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbaseArray.push(valueObj); // nothing to merge\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === \"object\" && base[key] !== null && typeof value === \"object\") {\r\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn base;\r\n\t};\r\n\thelpers.extendDeep = function(_base) {\r\n\t\treturn _extendDeep.apply(this, arguments);\r\n\r\n\t\tfunction _extendDeep(dst) {\r\n\t\t\thelpers.each(arguments, function(obj) {\r\n\t\t\t\tif (obj !== dst) {\r\n\t\t\t\t\thelpers.each(obj, function(value, key) {\r\n\t\t\t\t\t\tif (dst[key] && dst[key].constructor && dst[key].constructor === Object) {\r\n\t\t\t\t\t\t\t_extendDeep(dst[key], value);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdst[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn dst;\r\n\t\t}\r\n\t};\r\n\thelpers.scaleMerge = function(_base, extension) {\r\n\t\tvar base = helpers.clone(_base);\r\n\r\n\t\thelpers.each(extension, function(value, key) {\r\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\r\n\t\t\t\t// These properties are arrays of items\r\n\t\t\t\tif (base.hasOwnProperty(key)) {\r\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\r\n\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\r\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\r\n\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\r\n\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\r\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Type is the same\r\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbase[key] = [];\r\n\t\t\t\t\thelpers.each(value, function(valueObj) {\r\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === \"object\" && base[key] !== null && typeof value === \"object\") {\r\n\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\tbase[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn base;\r\n\t};\r\n\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\r\n\t\tif (value === undefined || value === null) {\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\r\n\t\tif (helpers.isArray(value)) {\r\n\t\t\treturn index < value.length ? value[index] : defaultValue;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\thelpers.getValueOrDefault = function(value, defaultValue) {\r\n\t\treturn value === undefined ? defaultValue : value;\r\n\t};\r\n\thelpers.indexOf = function(arrayToSearch, item) {\r\n\t\tif (Array.prototype.indexOf) {\r\n\t\t\treturn arrayToSearch.indexOf(item);\r\n\t\t} else {\r\n\t\t\tfor (var i = 0; i < arrayToSearch.length; i++) {\r\n\t\t\t\tif (arrayToSearch[i] === item)\r\n\t\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t};\r\n\thelpers.where = function(collection, filterCallback) {\r\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\r\n\t\t\treturn collection.filter(filterCallback);\r\n\t\t} else {\r\n\t\t\tvar filtered = [];\r\n\r\n\t\t\thelpers.each(collection, function(item) {\r\n\t\t\t\tif (filterCallback(item)) {\r\n\t\t\t\t\tfiltered.push(item);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn filtered;\r\n\t\t}\r\n\t};\r\n\thelpers.findIndex = function(arrayToSearch, callback, thisArg) {\r\n\t\tvar index = -1;\r\n\t\tif (Array.prototype.findIndex) {\r\n\t\t\tindex = arrayToSearch.findIndex(callback, thisArg);\r\n\t\t} else {\r\n\t\t\tfor (var i = 0; i < arrayToSearch.length; ++i) {\r\n\t\t\t\tthisArg = thisArg !== undefined ? thisArg : arrayToSearch;\r\n\r\n\t\t\t\tif (callback.call(thisArg, arrayToSearch[i], i, arrayToSearch)) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t};\r\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t// Default to start of the array\r\n\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\tstartIndex = -1;\r\n\t\t}\r\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t// Default to end of the array\r\n\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\tstartIndex = arrayToSearch.length;\r\n\t\t}\r\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\r\n\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.inherits = function(extensions) {\r\n\t\t//Basic javascript inheritance based on the model created in Backbone.js\r\n\t\tvar parent = this;\r\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function() {\r\n\t\t\treturn parent.apply(this, arguments);\r\n\t\t};\r\n\r\n\t\tvar Surrogate = function() {\r\n\t\t\tthis.constructor = ChartElement;\r\n\t\t};\r\n\t\tSurrogate.prototype = parent.prototype;\r\n\t\tChartElement.prototype = new Surrogate();\r\n\r\n\t\tChartElement.extend = helpers.inherits;\r\n\r\n\t\tif (extensions) {\r\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\r\n\t\t}\r\n\r\n\t\tChartElement.__super__ = parent.prototype;\r\n\r\n\t\treturn ChartElement;\r\n\t};\r\n\thelpers.noop = function() {};\r\n\thelpers.uid = (function() {\r\n\t\tvar id = 0;\r\n\t\treturn function() {\r\n\t\t\treturn id++;\r\n\t\t};\r\n\t})();\r\n\thelpers.warn = function(str) {\r\n\t\t//Method for warning of errors\r\n\t\tif (console && typeof console.warn === \"function\") {\r\n\t\t\tconsole.warn(str);\r\n\t\t}\r\n\t};\r\n\t//-- Math methods\r\n\thelpers.isNumber = function(n) {\r\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\r\n\t};\r\n\thelpers.almostEquals = function(x, y, epsilon) {\r\n\t\treturn Math.abs(x - y) < epsilon;\r\n\t};\r\n\thelpers.max = function(array) {\r\n\t\treturn array.reduce(function(max, value) {\r\n\t\t\tif (!isNaN(value)) {\r\n\t\t\t\treturn Math.max(max, value);\r\n\t\t\t} else {\r\n\t\t\t\treturn max;\r\n\t\t\t}\r\n\t\t}, Number.NEGATIVE_INFINITY);\r\n\t};\r\n\thelpers.min = function(array) {\r\n\t\treturn array.reduce(function(min, value) {\r\n\t\t\tif (!isNaN(value)) {\r\n\t\t\t\treturn Math.min(min, value);\r\n\t\t\t} else {\r\n\t\t\t\treturn min;\r\n\t\t\t}\r\n\t\t}, Number.POSITIVE_INFINITY);\r\n\t};\r\n\thelpers.sign = function(x) {\r\n\t\tif (Math.sign) {\r\n\t\t\treturn Math.sign(x);\r\n\t\t} else {\r\n\t\t\tx = +x; // convert to a number\r\n\t\t\tif (x === 0 || isNaN(x)) {\r\n\t\t\t\treturn x;\r\n\t\t\t}\r\n\t\t\treturn x > 0 ? 1 : -1;\r\n\t\t}\r\n\t};\r\n\thelpers.log10 = function(x) {\r\n\t\tif (Math.log10) {\r\n\t\t\treturn Math.log10(x);\r\n\t\t} else {\r\n\t\t\treturn Math.log(x) / Math.LN10;\r\n\t\t}\r\n\t};\r\n\thelpers.toRadians = function(degrees) {\r\n\t\treturn degrees * (Math.PI / 180);\r\n\t};\r\n\thelpers.toDegrees = function(radians) {\r\n\t\treturn radians * (180 / Math.PI);\r\n\t};\r\n\t// Gets the angle from vertical upright to the point about a centre.\r\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\r\n\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\r\n\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n\t\tif (angle < (-0.5 * Math.PI)) {\r\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tangle: angle,\r\n\t\t\tdistance: radialDistanceFromCenter\r\n\t\t};\r\n\t};\r\n\thelpers.aliasPixel = function(pixelWidth) {\r\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n\t};\r\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\r\n\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n\t\t// This function must also respect \"skipped\" points\r\n\r\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\r\n\t\t\tcurrent = middlePoint,\r\n\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n\t\tvar s01 = d01 / (d01 + d12);\r\n\t\tvar s12 = d12 / (d01 + d12);\r\n\r\n\t\t// If all points are the same, s01 & s02 will be inf\r\n\t\ts01 = isNaN(s01) ? 0 : s01;\r\n\t\ts12 = isNaN(s12) ? 0 : s12;\r\n\r\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\r\n\t\tvar fb = t * s12;\r\n\r\n\t\treturn {\r\n\t\t\tprevious: {\r\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\r\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\r\n\t\t\t},\r\n\t\t\tnext: {\r\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\r\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\thelpers.nextItem = function(collection, index, loop) {\r\n\t\tif (loop) {\r\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n\t\t}\r\n\r\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n\t};\r\n\thelpers.previousItem = function(collection, index, loop) {\r\n\t\tif (loop) {\r\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n\t\t}\r\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\r\n\t};\r\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\r\n\thelpers.niceNum = function(range, round) {\r\n\t\tvar exponent = Math.floor(helpers.log10(range));\r\n\t\tvar fraction = range / Math.pow(10, exponent);\r\n\t\tvar niceFraction;\r\n\r\n\t\tif (round) {\r\n\t\t\tif (fraction < 1.5) {\r\n\t\t\t\tniceFraction = 1;\r\n\t\t\t} else if (fraction < 3) {\r\n\t\t\t\tniceFraction = 2;\r\n\t\t\t} else if (fraction < 7) {\r\n\t\t\t\tniceFraction = 5;\r\n\t\t\t} else {\r\n\t\t\t\tniceFraction = 10;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (fraction <= 1.0) {\r\n\t\t\t\tniceFraction = 1;\r\n\t\t\t} else if (fraction <= 2) {\r\n\t\t\t\tniceFraction = 2;\r\n\t\t\t} else if (fraction <= 5) {\r\n\t\t\t\tniceFraction = 5;\r\n\t\t\t} else {\r\n\t\t\t\tniceFraction = 10;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn niceFraction * Math.pow(10, exponent);\r\n\t};\r\n\t//Easing functions adapted from Robert Penner's easing equations\r\n\t//http://www.robertpenner.com/easing/\r\n\tvar easingEffects = helpers.easingEffects = {\r\n\t\tlinear: function(t) {\r\n\t\t\treturn t;\r\n\t\t},\r\n\t\teaseInQuad: function(t) {\r\n\t\t\treturn t * t;\r\n\t\t},\r\n\t\teaseOutQuad: function(t) {\r\n\t\t\treturn -1 * t * (t - 2);\r\n\t\t},\r\n\t\teaseInOutQuad: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t;\r\n\t\t\t}\r\n\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\r\n\t\t},\r\n\t\teaseInCubic: function(t) {\r\n\t\t\treturn t * t * t;\r\n\t\t},\r\n\t\teaseOutCubic: function(t) {\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\r\n\t\t},\r\n\t\teaseInOutCubic: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\r\n\t\t},\r\n\t\teaseInQuart: function(t) {\r\n\t\t\treturn t * t * t * t;\r\n\t\t},\r\n\t\teaseOutQuart: function(t) {\r\n\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\r\n\t\t},\r\n\t\teaseInOutQuart: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\r\n\t\t},\r\n\t\teaseInQuint: function(t) {\r\n\t\t\treturn 1 * (t /= 1) * t * t * t * t;\r\n\t\t},\r\n\t\teaseOutQuint: function(t) {\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\r\n\t\t},\r\n\t\teaseInOutQuint: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\r\n\t\t},\r\n\t\teaseInSine: function(t) {\r\n\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\r\n\t\t},\r\n\t\teaseOutSine: function(t) {\r\n\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\r\n\t\t},\r\n\t\teaseInOutSine: function(t) {\r\n\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\r\n\t\t},\r\n\t\teaseInExpo: function(t) {\r\n\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\r\n\t\t},\r\n\t\teaseOutExpo: function(t) {\r\n\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\r\n\t\t},\r\n\t\teaseInOutExpo: function(t) {\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif (t === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\r\n\t\t},\r\n\t\teaseInCirc: function(t) {\r\n\t\t\tif (t >= 1) {\r\n\t\t\t\treturn t;\r\n\t\t\t}\r\n\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\r\n\t\t},\r\n\t\teaseOutCirc: function(t) {\r\n\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\r\n\t\t},\r\n\t\teaseInOutCirc: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n\t\t},\r\n\t\teaseInElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * 0.3;\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t},\r\n\t\teaseOutElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * 0.3;\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\r\n\t\t},\r\n\t\teaseInOutElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1 / 2) === 2) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * (0.3 * 1.5);\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\tif (t < 1) {\r\n\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t\t}\r\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\t\t},\r\n\t\teaseInBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\r\n\t\t},\r\n\t\teaseOutBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\r\n\t\t},\r\n\t\teaseInOutBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n\t\t},\r\n\t\teaseInBounce: function(t) {\r\n\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\r\n\t\t},\r\n\t\teaseOutBounce: function(t) {\r\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * t * t);\r\n\t\t\t} else if (t < (2 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\r\n\t\t\t} else if (t < (2.5 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\r\n\t\t\t} else {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\r\n\t\t\t}\r\n\t\t},\r\n\t\teaseInOutBounce: function(t) {\r\n\t\t\tif (t < 1 / 2) {\r\n\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\r\n\t\t\t}\r\n\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\r\n\t\t}\r\n\t};\r\n\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n\thelpers.requestAnimFrame = (function() {\r\n\t\treturn window.requestAnimationFrame ||\r\n\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\twindow.mozRequestAnimationFrame ||\r\n\t\t\twindow.oRequestAnimationFrame ||\r\n\t\t\twindow.msRequestAnimationFrame ||\r\n\t\t\tfunction(callback) {\r\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\r\n\t\t\t};\r\n\t})();\r\n\thelpers.cancelAnimFrame = (function() {\r\n\t\treturn window.cancelAnimationFrame ||\r\n\t\t\twindow.webkitCancelAnimationFrame ||\r\n\t\t\twindow.mozCancelAnimationFrame ||\r\n\t\t\twindow.oCancelAnimationFrame ||\r\n\t\t\twindow.msCancelAnimationFrame ||\r\n\t\t\tfunction(callback) {\r\n\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\r\n\t\t\t};\r\n\t})();\r\n\t//-- DOM methods\r\n\thelpers.getRelativePosition = function(evt, chart) {\r\n\t\tvar mouseX, mouseY;\r\n\t\tvar e = evt.originalEvent || evt,\r\n\t\t\tcanvas = evt.currentTarget || evt.srcElement,\r\n\t\t\tboundingRect = canvas.getBoundingClientRect();\r\n\r\n\t\tvar touches = e.touches;\r\n\t\tif (touches && touches.length > 0) {\r\n\t\t\tmouseX = touches[0].clientX;\r\n\t\t\tmouseY = touches[0].clientY;\r\n\r\n\t\t} else {\r\n\t\t\tmouseX = e.clientX;\r\n\t\t\tmouseY = e.clientY;\r\n\t\t}\r\n\r\n\t\t// Scale mouse coordinates into canvas coordinates\r\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\r\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n\t\treturn {\r\n\t\t\tx: mouseX,\r\n\t\t\ty: mouseY\r\n\t\t};\r\n\r\n\t};\r\n\thelpers.addEvent = function(node, eventType, method) {\r\n\t\tif (node.addEventListener) {\r\n\t\t\tnode.addEventListener(eventType, method);\r\n\t\t} else if (node.attachEvent) {\r\n\t\t\tnode.attachEvent(\"on\" + eventType, method);\r\n\t\t} else {\r\n\t\t\tnode[\"on\" + eventType] = method;\r\n\t\t}\r\n\t};\r\n\thelpers.removeEvent = function(node, eventType, handler) {\r\n\t\tif (node.removeEventListener) {\r\n\t\t\tnode.removeEventListener(eventType, handler, false);\r\n\t\t} else if (node.detachEvent) {\r\n\t\t\tnode.detachEvent(\"on\" + eventType, handler);\r\n\t\t} else {\r\n\t\t\tnode[\"on\" + eventType] = helpers.noop;\r\n\t\t}\r\n\t};\r\n\thelpers.bindEvents = function(chartInstance, arrayOfEvents, handler) {\r\n\t\t// Create the events object if it's not already present\r\n\t\tvar events = chartInstance.events = chartInstance.events || {};\r\n\r\n\t\thelpers.each(arrayOfEvents, function(eventName) {\r\n\t\t\tevents[eventName] = function() {\r\n\t\t\t\thandler.apply(chartInstance, arguments);\r\n\t\t\t};\r\n\t\t\thelpers.addEvent(chartInstance.chart.canvas, eventName, events[eventName]);\r\n\t\t});\r\n\t};\r\n\thelpers.unbindEvents = function(chartInstance, arrayOfEvents) {\r\n\t\tvar canvas = chartInstance.chart.canvas;\r\n\t\thelpers.each(arrayOfEvents, function(handler, eventName) {\r\n\t\t\thelpers.removeEvent(canvas, eventName, handler);\r\n\t\t});\r\n\t};\r\n\r\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\r\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\r\n\t\tvar valueInPixels;\r\n\t\tif (typeof(styleValue) === 'string') {\r\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\r\n\r\n\t\t\tif (styleValue.indexOf('%') != -1) {\r\n\t\t\t\t// percentage * size in dimension\r\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvalueInPixels = styleValue;\r\n\t\t}\r\n\r\n\t\treturn valueInPixels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if the given value contains an effective constraint.\r\n\t * @private\r\n\t */\r\n\tfunction isConstrainedValue(value) {\r\n\t\treturn value !== undefined &&  value !== null && value !== 'none';\r\n\t}\r\n\r\n\t// Private helper to get a constraint dimension\r\n\t// @param domNode : the node to check the constraint on\r\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\r\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n\t\tvar view = document.defaultView;\r\n\t\tvar parentNode = domNode.parentNode;\r\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\r\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\r\n\t\tvar infinity = Number.POSITIVE_INFINITY;\r\n\r\n\t\tif (hasCNode || hasCContainer) {\r\n\t\t\treturn Math.min(\r\n\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n\t\t}\r\n\r\n\t\treturn 'none';\r\n\t}\r\n\t// returns Number or undefined if no constraint\r\n\thelpers.getConstraintWidth = function(domNode) {\r\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n\t};\r\n\t// returns Number or undefined if no constraint\r\n\thelpers.getConstraintHeight = function(domNode) {\r\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n\t};\r\n\thelpers.getMaximumWidth = function(domNode) {\r\n\t\tvar container = domNode.parentNode;\r\n\t\tvar padding = parseInt(helpers.getStyle(container, 'padding-left')) + parseInt(helpers.getStyle(container, 'padding-right'));\r\n\t\tvar w = container.clientWidth - padding;\r\n\t\tvar cw = helpers.getConstraintWidth(domNode);\r\n\t\treturn isNaN(cw)? w : Math.min(w, cw);\r\n\t};\r\n\thelpers.getMaximumHeight = function(domNode) {\r\n\t\tvar container = domNode.parentNode;\r\n\t\tvar padding = parseInt(helpers.getStyle(container, 'padding-top')) + parseInt(helpers.getStyle(container, 'padding-bottom'));\r\n\t\tvar h = container.clientHeight - padding;\r\n\t\tvar ch = helpers.getConstraintHeight(domNode);\r\n\t\treturn isNaN(ch)? h : Math.min(h, ch);\r\n\t};\r\n\thelpers.getStyle = function(el, property) {\r\n\t\treturn el.currentStyle ?\r\n\t\t\tel.currentStyle[property] :\r\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n\t};\r\n\thelpers.retinaScale = function(chart) {\r\n\t\tvar ctx = chart.ctx;\r\n\t\tvar canvas = chart.canvas;\r\n\t\tvar width = canvas.width;\r\n\t\tvar height = canvas.height;\r\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n\t\tif (pixelRatio !== 1) {\r\n\t\t\tcanvas.height = height * pixelRatio;\r\n\t\t\tcanvas.width = width * pixelRatio;\r\n\t\t\tctx.scale(pixelRatio, pixelRatio);\r\n\r\n\t\t\t// Store the device pixel ratio so that we can go backwards in `destroy`.\r\n\t\t\t// The devicePixelRatio changes with zoom, so there are no guarantees that it is the same\r\n\t\t\t// when destroy is called\r\n\t\t\tchart.originalDevicePixelRatio = chart.originalDevicePixelRatio || pixelRatio;\r\n\t\t}\r\n\r\n\t\tcanvas.style.width = width + 'px';\r\n\t\tcanvas.style.height = height + 'px';\r\n\t};\r\n\t//-- Canvas methods\r\n\thelpers.clear = function(chart) {\r\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n\t};\r\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n\t\treturn fontStyle + \" \" + pixelSize + \"px \" + fontFamily;\r\n\t};\r\n\thelpers.longestText = function(ctx, font, arrayOfStrings, cache) {\r\n\t\tcache = cache || {};\r\n\t\tvar data = cache.data = cache.data || {};\r\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n\t\tif (cache.font !== font) {\r\n\t\t\tdata = cache.data = {};\r\n\t\t\tgc = cache.garbageCollect = [];\r\n\t\t\tcache.font = font;\r\n\t\t}\r\n\r\n\t\tctx.font = font;\r\n\t\tvar longest = 0;\r\n\t\thelpers.each(arrayOfStrings, function(string) {\r\n\t\t\t// Undefined strings should not be measured\r\n\t\t\tif (string !== undefined && string !== null) {\r\n\t\t\t\tvar textWidth = data[string];\r\n\t\t\t\tif (!textWidth) {\r\n\t\t\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\r\n\t\t\t\t\tgc.push(string);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (textWidth > longest) {\r\n\t\t\t\t\tlongest = textWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar gcLen = gc.length / 2;\r\n\t\tif (gcLen > arrayOfStrings.length) {\r\n\t\t\tfor (var i = 0; i < gcLen; i++) {\r\n\t\t\t\tdelete data[gc[i]];\r\n\t\t\t}\r\n\t\t\tgc.splice(0, gcLen);\r\n\t\t}\r\n\r\n\t\treturn longest;\r\n\t};\r\n\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(x + radius, y);\r\n\t\tctx.lineTo(x + width - radius, y);\r\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n\t\tctx.lineTo(x + width, y + height - radius);\r\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n\t\tctx.lineTo(x + radius, y + height);\r\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n\t\tctx.lineTo(x, y + radius);\r\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\r\n\t\tctx.closePath();\r\n\t};\r\n\thelpers.color = function(c) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.log('Color.js not found!');\r\n\t\t\treturn c;\r\n\t\t}\r\n\r\n\t\t/* global CanvasGradient */\r\n\t\tif (c instanceof CanvasGradient) {\r\n\t\t\treturn color(Chart.defaults.global.defaultColor);\r\n\t\t}\r\n\r\n\t\treturn color(c);\r\n\t};\r\n\thelpers.addResizeListener = function(node, callback) {\r\n\t\t// Hide an iframe before the node\r\n\t\tvar hiddenIframe = document.createElement('iframe');\r\n\t\tvar hiddenIframeClass = 'chartjs-hidden-iframe';\r\n\r\n\t\tif (hiddenIframe.classlist) {\r\n\t\t\t// can use classlist\r\n\t\t\thiddenIframe.classlist.add(hiddenIframeClass);\r\n\t\t} else {\r\n\t\t\thiddenIframe.setAttribute('class', hiddenIframeClass);\r\n\t\t}\r\n\r\n\t\t// Set the style\r\n\t\tvar style = hiddenIframe.style;\r\n\t\tstyle.width = '100%';\r\n\t\tstyle.display = 'block';\r\n\t\tstyle.border = 0;\r\n\t\tstyle.height = 0;\r\n\t\tstyle.margin = 0;\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.left = 0;\r\n\t\tstyle.right = 0;\r\n\t\tstyle.top = 0;\r\n\t\tstyle.bottom = 0;\r\n\r\n\t\t// Insert the iframe so that contentWindow is available\r\n\t\tnode.insertBefore(hiddenIframe, node.firstChild);\r\n\r\n\t\t(hiddenIframe.contentWindow || hiddenIframe).onresize = function() {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\thelpers.removeResizeListener = function(node) {\r\n\t\tvar hiddenIframe = node.querySelector('.chartjs-hidden-iframe');\r\n\r\n\t\t// Remove the resize detect iframe\r\n\t\tif (hiddenIframe) {\r\n\t\t\thiddenIframe.parentNode.removeChild(hiddenIframe);\r\n\t\t}\r\n\t};\r\n\thelpers.isArray = function(obj) {\r\n\t\tif (!Array.isArray) {\r\n\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\r\n\t\t}\r\n\t\treturn Array.isArray(obj);\r\n\t};\r\n\t//! @see http://stackoverflow.com/a/14853974\r\n\thelpers.arrayEquals = function(a0, a1) {\r\n\t\tvar i, ilen, v0, v1;\r\n\r\n\t\tif (!a0 || !a1 || a0.length != a1.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\r\n\t\t\tv0 = a0[i];\r\n\t\t\tv1 = a1[i];\r\n\r\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\r\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else if (v0 != v1) {\r\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\thelpers.pushAllIfDefined = function(element, array) {\r\n\t\tif (typeof element === \"undefined\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (helpers.isArray(element)) {\r\n\t\t\tarray.push.apply(array, element);\r\n\t\t} else {\r\n\t\t\tarray.push(element);\r\n\t\t}\r\n\t};\r\n\thelpers.callCallback = function(fn, args, _tArg) {\r\n\t\tif (fn && typeof fn.call === 'function') {\r\n\t\t\tfn.apply(_tArg, args);\r\n\t\t}\r\n\t};\r\n\thelpers.getHoverColor = function(color) {\r\n\t\t/* global CanvasPattern */\r\n\t\treturn (color instanceof CanvasPattern) ?\r\n\t\t\tcolor :\r\n\t\t\thelpers.color(color).saturate(0.5).darken(0.1).rgbString();\r\n\t};\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.helpers.js\n ** module id = 142\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function() {\r\n\r\n\t//Occupy the global variable of Chart, and create a simple base class\r\n\tvar Chart = function(context, config) {\r\n\t\tthis.config = config;\r\n\r\n\t\t// Support a jQuery'd canvas element\r\n\t\tif (context.length && context[0].getContext) {\r\n\t\t\tcontext = context[0];\r\n\t\t}\r\n\r\n\t\t// Support a canvas domnode\r\n\t\tif (context.getContext) {\r\n\t\t\tcontext = context.getContext(\"2d\");\r\n\t\t}\r\n\r\n\t\tthis.ctx = context;\r\n\t\tthis.canvas = context.canvas;\r\n\r\n\t\t// Figure out what the size of the chart will be.\r\n\t\t// If the canvas has a specified width and height, we use those else\r\n\t\t// we look to see if the canvas node has a CSS width and height.\r\n\t\t// If there is still no height, fill the parent container\r\n\t\tthis.width = context.canvas.width || parseInt(Chart.helpers.getStyle(context.canvas, 'width')) || Chart.helpers.getMaximumWidth(context.canvas);\r\n\t\tthis.height = context.canvas.height || parseInt(Chart.helpers.getStyle(context.canvas, 'height')) || Chart.helpers.getMaximumHeight(context.canvas);\r\n\r\n\t\tthis.aspectRatio = this.width / this.height;\r\n\r\n\t\tif (isNaN(this.aspectRatio) || isFinite(this.aspectRatio) === false) {\r\n\t\t\t// If the canvas has no size, try and figure out what the aspect ratio will be.\r\n\t\t\t// Some charts prefer square canvases (pie, radar, etc). If that is specified, use that\r\n\t\t\t// else use the canvas default ratio of 2\r\n\t\t\tthis.aspectRatio = config.aspectRatio !== undefined ? config.aspectRatio : 2;\r\n\t\t}\r\n\r\n\t\t// Store the original style of the element so we can set it back\r\n\t\tthis.originalCanvasStyleWidth = context.canvas.style.width;\r\n\t\tthis.originalCanvasStyleHeight = context.canvas.style.height;\r\n\r\n\t\t// High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\r\n\t\tChart.helpers.retinaScale(this);\r\n\r\n\t\tif (config) {\r\n\t\t\tthis.controller = new Chart.Controller(this);\r\n\t\t}\r\n\r\n\t\t// Always bind this so that if the responsive state changes we still work\r\n\t\tvar _this = this;\r\n\t\tChart.helpers.addResizeListener(context.canvas.parentNode, function() {\r\n\t\t\tif (_this.controller && _this.controller.config.options.responsive) {\r\n\t\t\t\t_this.controller.resize();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn this.controller ? this.controller : this;\r\n\r\n\t};\r\n\r\n\t//Globally expose the defaults to allow for user updating/changing\r\n\tChart.defaults = {\r\n\t\tglobal: {\r\n\t\t\tresponsive: true,\r\n\t\t\tresponsiveAnimationDuration: 0,\r\n\t\t\tmaintainAspectRatio: true,\r\n\t\t\tevents: [\"mousemove\", \"mouseout\", \"click\", \"touchstart\", \"touchmove\"],\r\n\t\t\thover: {\r\n\t\t\t\tonHover: null,\r\n\t\t\t\tmode: 'single',\r\n\t\t\t\tanimationDuration: 400\r\n\t\t\t},\r\n\t\t\tonClick: null,\r\n\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\r\n\t\t\tdefaultFontColor: '#666',\r\n\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n\t\t\tdefaultFontSize: 12,\r\n\t\t\tdefaultFontStyle: 'normal',\r\n\t\t\tshowLines: true,\r\n\r\n\t\t\t// Element defaults defined in element extensions\r\n\t\t\telements: {},\r\n\r\n\t\t\t// Legend callback string\r\n\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\tvar text = [];\r\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n\t\t\t\t\tif (chart.data.datasets[i].label) {\r\n\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t\ttext.push('</ul>');\r\n\r\n\t\t\t\treturn text.join(\"\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn Chart;\r\n\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.js\n ** module id = 143\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n\t// It is this service's responsibility of carrying out that layout.\r\n\tChart.layoutService = {\r\n\t\tdefaults: {},\r\n\r\n\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\r\n\t\taddBox: function(chartInstance, box) {\r\n\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\tchartInstance.boxes = [];\r\n\t\t\t}\r\n\t\t\tchartInstance.boxes.push(box);\r\n\t\t},\r\n\r\n\t\tremoveBox: function(chartInstance, box) {\r\n\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\r\n\t\t},\r\n\r\n\t\t// The most important function\r\n\t\tupdate: function(chartInstance, width, height) {\r\n\r\n\t\t\tif (!chartInstance) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar xPadding = 0;\r\n\t\t\tvar yPadding = 0;\r\n\r\n\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"left\";\r\n\t\t\t});\r\n\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"right\";\r\n\t\t\t});\r\n\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"top\";\r\n\t\t\t});\r\n\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"bottom\";\r\n\t\t\t});\r\n\r\n\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\r\n\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"chartArea\";\r\n\t\t\t});\r\n\r\n\t\t\t// Ensure that full width boxes are at the very top / bottom\r\n\t\t\ttopBoxes.sort(function(a, b) {\r\n\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\r\n\t\t\t});\r\n\t\t\tbottomBoxes.sort(function(a, b) {\r\n\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\r\n\t\t\t});\r\n\r\n\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\r\n\t\t\t// Our canvas looks like the following.\r\n\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n\t\t\t// B1 is the bottom axis\r\n\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n\t\t\t// an error will be thrown.\r\n\t\t\t//\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |                  T1 (Full Width)                   |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |    |    |                 T2                  |    |\r\n\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t// |    |    | C1 |                           | C2 |    |\r\n\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t// |    |    |                                     |    |\r\n\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\r\n\t\t\t// |    |    |                                     |    |\r\n\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t// |    |    | C3 |                           | C4 |    |\r\n\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t// |    |    |                 B1                  |    |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |                  B2 (Full Width)                   |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t//\r\n\t\t\t// What we do to find the best sizing, we do the following\r\n\t\t\t// 1. Determine the minimum size of the chart area.\r\n\t\t\t// 2. Split the remaining width equally between each vertical axis\r\n\t\t\t// 3. Split the remaining height equally between each horizontal axis\r\n\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n\t\t\t// 6. Refit each axis\r\n\t\t\t// 7. Position each axis in the final location\r\n\t\t\t// 8. Tell the chart the final location of the chart area\r\n\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n\t\t\t// Step 1\r\n\t\t\tvar chartWidth = width - (2 * xPadding);\r\n\t\t\tvar chartHeight = height - (2 * yPadding);\r\n\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\r\n\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n\t\t\t// Step 2\r\n\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n\t\t\t// Step 3\r\n\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n\t\t\t// Step 4\r\n\t\t\tvar maxChartAreaWidth = chartWidth;\r\n\t\t\tvar maxChartAreaHeight = chartHeight;\r\n\t\t\tvar minBoxSizes = [];\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n\t\t\tfunction getMinimumBoxSize(box) {\r\n\t\t\t\tvar minSize;\r\n\t\t\t\tvar isHorizontal = box.isHorizontal();\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\r\n\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tminBoxSizes.push({\r\n\t\t\t\t\thorizontal: isHorizontal,\r\n\t\t\t\t\tminSize: minSize,\r\n\t\t\t\t\tbox: box\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n\t\t\t// be if the axes are drawn at their minimum sizes.\r\n\r\n\t\t\t// Steps 5 & 6\r\n\t\t\tvar totalLeftBoxesWidth = xPadding;\r\n\t\t\tvar totalRightBoxesWidth = xPadding;\r\n\t\t\tvar totalTopBoxesHeight = yPadding;\r\n\t\t\tvar totalBottomBoxesHeight = yPadding;\r\n\r\n\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\t// Set the Left and Right margins for the horizontal boxes\r\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n\t\t\t// Function to fit a box\r\n\t\t\tfunction fitBox(box) {\r\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBoxSize) {\r\n\t\t\t\t\treturn minBoxSize.box === box;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\t\t\t\tright: totalRightBoxesWidth,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\tbottom: 0\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\r\n\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\r\n\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\t// Let the left layout know the final margin\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n\t\t\tfunction finalFitVerticalBox(box) {\r\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBoxSize) {\r\n\t\t\t\t\treturn minBoxSize.box === box;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\t\tbottom: totalBottomBoxesHeight\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n\t\t\ttotalLeftBoxesWidth = xPadding;\r\n\t\t\ttotalRightBoxesWidth = xPadding;\r\n\t\t\ttotalTopBoxesHeight = yPadding;\r\n\t\t\ttotalBottomBoxesHeight = yPadding;\r\n\r\n\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t});\r\n\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n\t\t\t// without calling `fit` again\r\n\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n\t\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\r\n\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\r\n\t\t\t}\r\n\r\n\t\t\t// Step 7 - Position the boxes\r\n\t\t\tvar left = xPadding;\r\n\t\t\tvar top = yPadding;\r\n\t\t\tvar right = 0;\r\n\t\t\tvar bottom = 0;\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n\t\t\t// Account for chart width and height\r\n\t\t\tleft += maxChartAreaWidth;\r\n\t\t\ttop += maxChartAreaHeight;\r\n\r\n\t\t\thelpers.each(rightBoxes, placeBox);\r\n\t\t\thelpers.each(bottomBoxes, placeBox);\r\n\r\n\t\t\tfunction placeBox(box) {\r\n\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\tbox.left = box.options.fullWidth ? xPadding : totalLeftBoxesWidth;\r\n\t\t\t\t\tbox.right = box.options.fullWidth ? width - xPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n\t\t\t\t\tbox.top = top;\r\n\t\t\t\t\tbox.bottom = top + box.height;\r\n\r\n\t\t\t\t\t// Move to next point\r\n\t\t\t\t\ttop = box.bottom;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbox.left = left;\r\n\t\t\t\t\tbox.right = left + box.width;\r\n\t\t\t\t\tbox.top = totalTopBoxesHeight;\r\n\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n\t\t\t\t\t// Move to next point\r\n\t\t\t\t\tleft = box.right;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Step 8\r\n\t\t\tchartInstance.chartArea = {\r\n\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\r\n\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\r\n\t\t\t};\r\n\r\n\t\t\t// Step 9\r\n\t\t\thelpers.each(chartAreaBoxes, function(box) {\r\n\t\t\t\tbox.left = chartInstance.chartArea.left;\r\n\t\t\t\tbox.top = chartInstance.chartArea.top;\r\n\t\t\t\tbox.right = chartInstance.chartArea.right;\r\n\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\r\n\r\n\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.layoutService.js\n ** module id = 144\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar noop = helpers.noop;\r\n\r\n\tChart.defaults.global.legend = {\r\n\r\n\t\tdisplay: true,\r\n\t\tposition: 'top',\r\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\t\treverse: false,\r\n\r\n\t\t// a callback that will handle\r\n\t\tonClick: function(e, legendItem) {\r\n\t\t\tvar index = legendItem.datasetIndex;\r\n\t\t\tvar ci = this.chart;\r\n\t\t\tvar meta = ci.getDatasetMeta(index);\r\n\r\n\t\t\t// See controller.isDatasetVisible comment\r\n\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\r\n\r\n\t\t\t// We hid a dataset ... rerender the chart\r\n\t\t\tci.update();\r\n\t\t},\r\n\r\n\t\tlabels: {\r\n\t\t\tboxWidth: 40,\r\n\t\t\tpadding: 10,\r\n\t\t\t// Generates labels shown in the legend\r\n\t\t\t// Valid properties to return:\r\n\t\t\t// text : text to display\r\n\t\t\t// fillStyle : fill of coloured box\r\n\t\t\t// strokeStyle: stroke of coloured box\r\n\t\t\t// hidden : if this legend item refers to a hidden item\r\n\t\t\t// lineCap : cap style for line\r\n\t\t\t// lineDash\r\n\t\t\t// lineDashOffset :\r\n\t\t\t// lineJoin :\r\n\t\t\t// lineWidth :\r\n\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttext: dataset.label,\r\n\t\t\t\t\t\tfillStyle: dataset.backgroundColor,\r\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\r\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\r\n\t\t\t\t\t\tlineDash: dataset.borderDash,\r\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\r\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\r\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\r\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\r\n\r\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\r\n\t\t\t\t\t\tdatasetIndex: i\r\n\t\t\t\t\t};\r\n\t\t\t\t}, this) : [];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.Legend = Chart.Element.extend({\r\n\r\n\t\tinitialize: function(config) {\r\n\t\t\thelpers.extend(this, config);\r\n\r\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\tthis.legendHitBoxes = [];\r\n\r\n\t\t\t// Are we in doughnut mode which has a different data type\r\n\t\t\tthis.doughnutMode = false;\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t// Any function defined here is inherited by all legend types.\r\n\t\t// Any function can be extended by the legend type\r\n\r\n\t\tbeforeUpdate: noop,\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tthis.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tthis.maxWidth = maxWidth;\r\n\t\t\tthis.maxHeight = maxHeight;\r\n\t\t\tthis.margins = margins;\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tthis.beforeSetDimensions();\r\n\t\t\tthis.setDimensions();\r\n\t\t\tthis.afterSetDimensions();\r\n\t\t\t// Labels\r\n\t\t\tthis.beforeBuildLabels();\r\n\t\t\tthis.buildLabels();\r\n\t\t\tthis.afterBuildLabels();\r\n\r\n\t\t\t// Fit\r\n\t\t\tthis.beforeFit();\r\n\t\t\tthis.fit();\r\n\t\t\tthis.afterFit();\r\n\t\t\t//\r\n\t\t\tthis.afterUpdate();\r\n\r\n\t\t\treturn this.minSize;\r\n\t\t},\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: noop,\r\n\t\tsetDimensions: function() {\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tthis.width = this.maxWidth;\r\n\t\t\t\tthis.left = 0;\r\n\t\t\t\tthis.right = this.width;\r\n\t\t\t} else {\r\n\t\t\t\tthis.height = this.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tthis.top = 0;\r\n\t\t\t\tthis.bottom = this.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tthis.paddingLeft = 0;\r\n\t\t\tthis.paddingTop = 0;\r\n\t\t\tthis.paddingRight = 0;\r\n\t\t\tthis.paddingBottom = 0;\r\n\r\n\t\t\t// Reset minSize\r\n\t\t\tthis.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t},\r\n\t\tafterSetDimensions: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeBuildLabels: noop,\r\n\t\tbuildLabels: function() {\r\n\t\t\tthis.legendItems = this.options.labels.generateLabels.call(this, this.chart);\r\n\t\t\tif(this.options.reverse){\r\n\t\t\t\tthis.legendItems.reverse();\r\n\t\t\t}\r\n\t\t},\r\n\t\tafterBuildLabels: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: noop,\r\n\t\tfit: function() {\r\n\t\t\tvar opts = this.options;\r\n\t\t\tvar labelOpts = opts.labels;\r\n\t\t\tvar display = opts.display;\r\n\r\n\t\t\tvar ctx = this.ctx;\r\n\r\n\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\t\t// Reset hit boxes\r\n\t\t\tvar hitboxes = this.legendHitBoxes = [];\r\n\r\n\t\t\tvar minSize = this.minSize;\r\n\t\t\tvar isHorizontal = this.isHorizontal();\r\n\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tminSize.width = this.maxWidth; // fill all the width\r\n\t\t\t\tminSize.height = display ? 10 : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? 10 : 0;\r\n\t\t\t\tminSize.height = this.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t// Increase sizes here\r\n\t\t\tif (display) {\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// Labels\r\n\r\n\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n\t\t\t\t\tvar lineWidths = this.lineWidths = [0];\r\n\t\t\t\t\tvar totalHeight = this.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n\t\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\tctx.font = labelFont;\r\n\r\n\t\t\t\t\thelpers.each(this.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar width = labelOpts.boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= this.width) {\r\n\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\tlineWidths[lineWidths.length] = this.left;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\tminSize.height += totalHeight;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// TODO vertical\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.width = minSize.width;\r\n\t\t\tthis.height = minSize.height;\r\n\t\t},\r\n\t\tafterFit: noop,\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\treturn this.options.position === \"top\" || this.options.position === \"bottom\";\r\n\t\t},\r\n\r\n\t\t// Actualy draw the legend on the canvas\r\n\t\tdraw: function() {\r\n\t\t\tvar opts = this.options;\r\n\t\t\tvar labelOpts = opts.labels;\r\n\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\tlineDefault = globalDefault.elements.line,\r\n\t\t\t\tlegendWidth = this.width,\r\n\t\t\t\tlineWidths = this.lineWidths;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar ctx = this.ctx,\r\n\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\tx: this.left + ((legendWidth - lineWidths[0]) / 2),\r\n\t\t\t\t\t\ty: this.top + labelOpts.padding,\r\n\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\r\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\t\t\t// Horizontal\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\t// Labels\r\n\t\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\tctx.lineWidth = 0.5;\r\n\t\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\r\n\t\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\r\n\t\t\t\t\tctx.font = labelFont;\r\n\r\n\t\t\t\t\tvar boxWidth = labelOpts.boxWidth,\r\n\t\t\t\t\t\thitboxes = this.legendHitBoxes;\r\n\r\n\t\t\t\t\thelpers.each(this.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\r\n\t\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\r\n\t\t\t\t\t\t\tx = cursor.x,\r\n\t\t\t\t\t\t\ty = cursor.y;\r\n\r\n\t\t\t\t\t\tif (x + width >= legendWidth) {\r\n\t\t\t\t\t\t\ty = cursor.y += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t\t\tx = cursor.x = this.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Set the ctx for the box\r\n\t\t\t\t\t\tctx.save();\r\n\r\n\t\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n\t\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n\t\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n\t\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n\t\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n\t\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n\r\n\t\t\t\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\t\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Draw the box\r\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\r\n\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\r\n\r\n\t\t\t\t\t\tctx.restore();\r\n\r\n\t\t\t\t\t\thitboxes[i].left = x;\r\n\t\t\t\t\t\thitboxes[i].top = y;\r\n\r\n\t\t\t\t\t\t// Fill the actual label\r\n\t\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\r\n\r\n\t\t\t\t\t\tif (legendItem.hidden) {\r\n\t\t\t\t\t\t\t// Strikethrough the text if hidden\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\tctx.lineWidth = 2;\r\n\t\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\r\n\t\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\r\n\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Handle an event\r\n\t\thandleEvent: function(e) {\r\n\t\t\tvar position = helpers.getRelativePosition(e, this.chart.chart),\r\n\t\t\t\tx = position.x,\r\n\t\t\t\ty = position.y,\r\n\t\t\t\topts = this.options;\r\n\r\n\t\t\tif (x >= this.left && x <= this.right && y >= this.top && y <= this.bottom) {\r\n\t\t\t\t// See if we are touching one of the dataset boxes\r\n\t\t\t\tvar lh = this.legendHitBoxes;\r\n\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\r\n\t\t\t\t\tvar hitBox = lh[i];\r\n\r\n\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n\t\t\t\t\t\t// Touching an element\r\n\t\t\t\t\t\tif (opts.onClick) {\r\n\t\t\t\t\t\t\topts.onClick.call(this, e, this.legendItems[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.legend.js\n ** module id = 145\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t// Plugins are stored here\r\n\tChart.plugins = [];\r\n\tChart.pluginService = {\r\n\t\t// Register a new plugin\r\n\t\tregister: function(plugin) {\r\n\t\t\tvar p = Chart.plugins;\r\n\t\t\tif (p.indexOf(plugin) === -1) {\r\n\t\t\t\tp.push(plugin);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Remove a registered plugin\r\n\t\tremove: function(plugin) {\r\n\t\t\tvar p = Chart.plugins;\r\n\t\t\tvar idx = p.indexOf(plugin);\r\n\t\t\tif (idx !== -1) {\r\n\t\t\t\tp.splice(idx, 1);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Iterate over all plugins\r\n\t\tnotifyPlugins: function(method, args, scope) {\r\n\t\t\thelpers.each(Chart.plugins, function(plugin) {\r\n\t\t\t\tif (plugin[method] && typeof plugin[method] === 'function') {\r\n\t\t\t\t\tplugin[method].apply(scope, args);\r\n\t\t\t\t}\r\n\t\t\t}, scope);\r\n\t\t}\r\n\t};\r\n\r\n\tvar noop = helpers.noop;\r\n\tChart.PluginBase = Chart.Element.extend({\r\n\t\t// Plugin methods. All functions are passed the chart instance\r\n\r\n\t\t// Called at start of chart init\r\n\t\tbeforeInit: noop,\r\n\r\n\t\t// Called at end of chart init\r\n\t\tafterInit: noop,\r\n\r\n\t\t// Called at start of update\r\n\t\tbeforeUpdate: noop,\r\n\r\n\t\t// Called at end of update\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t// Called at start of draw\r\n\t\tbeforeDraw: noop,\r\n\r\n\t\t// Called at end of draw\r\n\t\tafterDraw: noop,\r\n\r\n\t\t// Called during destroy\r\n\t\tdestroy: noop\r\n\t});\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.plugin.js\n ** module id = 146\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.scale = {\r\n\t\tdisplay: true,\r\n\t\tposition: \"left\",\r\n\r\n\t\t// grid line settings\r\n\t\tgridLines: {\r\n\t\t\tdisplay: true,\r\n\t\t\tcolor: \"rgba(0, 0, 0, 0.1)\",\r\n\t\t\tlineWidth: 1,\r\n\t\t\tdrawBorder: true,\r\n\t\t\tdrawOnChartArea: true,\r\n\t\t\tdrawTicks: true,\r\n\t\t\ttickMarkLength: 10,\r\n\t\t\tzeroLineWidth: 1,\r\n\t\t\tzeroLineColor: \"rgba(0,0,0,0.25)\",\r\n\t\t\toffsetGridLines: false\r\n\t\t},\r\n\r\n\t\t// scale label\r\n\t\tscaleLabel: {\r\n\t\t\t// actual label\r\n\t\t\tlabelString: '',\r\n\r\n\t\t\t// display property\r\n\t\t\tdisplay: false\r\n\t\t},\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\tbeginAtZero: false,\r\n\t\t\tminRotation: 0,\r\n\t\t\tmaxRotation: 50,\r\n\t\t\tmirror: false,\r\n\t\t\tpadding: 10,\r\n\t\t\treverse: false,\r\n\t\t\tdisplay: true,\r\n\t\t\tautoSkip: true,\r\n\t\t\tautoSkipPadding: 0,\r\n\t\t\tlabelOffset: 0,\r\n\t\t\tcallback: function(value) {\r\n\t\t\t\treturn '' + value;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.Scale = Chart.Element.extend({\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t// Any function defined here is inherited by all scale types.\r\n\t\t// Any function can be extended by the scale type\r\n\r\n\t\tbeforeUpdate: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\r\n\t\t},\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tthis.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tthis.maxWidth = maxWidth;\r\n\t\t\tthis.maxHeight = maxHeight;\r\n\t\t\tthis.margins = helpers.extend({\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}, margins);\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tthis.beforeSetDimensions();\r\n\t\t\tthis.setDimensions();\r\n\t\t\tthis.afterSetDimensions();\r\n\r\n\t\t\t// Data min/max\r\n\t\t\tthis.beforeDataLimits();\r\n\t\t\tthis.determineDataLimits();\r\n\t\t\tthis.afterDataLimits();\r\n\r\n\t\t\t// Ticks\r\n\t\t\tthis.beforeBuildTicks();\r\n\t\t\tthis.buildTicks();\r\n\t\t\tthis.afterBuildTicks();\r\n\r\n\t\t\tthis.beforeTickToLabelConversion();\r\n\t\t\tthis.convertTicksToLabels();\r\n\t\t\tthis.afterTickToLabelConversion();\r\n\r\n\t\t\t// Tick Rotation\r\n\t\t\tthis.beforeCalculateTickRotation();\r\n\t\t\tthis.calculateTickRotation();\r\n\t\t\tthis.afterCalculateTickRotation();\r\n\t\t\t// Fit\r\n\t\t\tthis.beforeFit();\r\n\t\t\tthis.fit();\r\n\t\t\tthis.afterFit();\r\n\t\t\t//\r\n\t\t\tthis.afterUpdate();\r\n\r\n\t\t\treturn this.minSize;\r\n\r\n\t\t},\r\n\t\tafterUpdate: function() {\r\n\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\r\n\t\t},\r\n\t\tsetDimensions: function() {\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tthis.width = this.maxWidth;\r\n\t\t\t\tthis.left = 0;\r\n\t\t\t\tthis.right = this.width;\r\n\t\t\t} else {\r\n\t\t\t\tthis.height = this.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tthis.top = 0;\r\n\t\t\t\tthis.bottom = this.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tthis.paddingLeft = 0;\r\n\t\t\tthis.paddingTop = 0;\r\n\t\t\tthis.paddingRight = 0;\r\n\t\t\tthis.paddingBottom = 0;\r\n\t\t},\r\n\t\tafterSetDimensions: function() {\r\n\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\r\n\t\t},\r\n\r\n\t\t// Data limits\r\n\t\tbeforeDataLimits: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\r\n\t\t},\r\n\t\tdetermineDataLimits: helpers.noop,\r\n\t\tafterDataLimits: function() {\r\n\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\t\tbeforeBuildTicks: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\r\n\t\t},\r\n\t\tbuildTicks: helpers.noop,\r\n\t\tafterBuildTicks: function() {\r\n\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\r\n\t\t},\r\n\r\n\t\tbeforeTickToLabelConversion: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\t// Convert ticks to strings\r\n\t\t\tthis.ticks = this.ticks.map(function(numericalTick, index, ticks) {\r\n\t\t\t\t\tif (this.options.ticks.userCallback) {\r\n\t\t\t\t\t\treturn this.options.ticks.userCallback(numericalTick, index, ticks);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.options.ticks.callback(numericalTick, index, ticks);\r\n\t\t\t\t},\r\n\t\t\t\tthis);\r\n\t\t},\r\n\t\tafterTickToLabelConversion: function() {\r\n\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeCalculateTickRotation: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\r\n\t\t},\r\n\t\tcalculateTickRotation: function() {\r\n\t\t\tvar context = this.ctx;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar optionTicks = this.options.ticks;\r\n\r\n\t\t\t//Get the width of each grid by calculating the difference\r\n\t\t\t//between x offsets between 0 and 1.\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\tcontext.font = tickLabelFont;\r\n\r\n\t\t\tvar firstWidth = context.measureText(this.ticks[0]).width;\r\n\t\t\tvar lastWidth = context.measureText(this.ticks[this.ticks.length - 1]).width;\r\n\t\t\tvar firstRotated;\r\n\r\n\t\t\tthis.labelRotation = optionTicks.minRotation || 0;\r\n\t\t\tthis.paddingRight = 0;\r\n\t\t\tthis.paddingLeft = 0;\r\n\r\n\t\t\tif (this.options.display) {\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\tthis.paddingRight = lastWidth / 2 + 3;\r\n\t\t\t\t\tthis.paddingLeft = firstWidth / 2 + 3;\r\n\r\n\t\t\t\t\tif (!this.longestTextCache) {\r\n\t\t\t\t\t\tthis.longestTextCache = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickLabelFont, this.ticks, this.longestTextCache);\r\n\t\t\t\t\tvar labelWidth = originalLabelWidth;\r\n\t\t\t\t\tvar cosRotation;\r\n\t\t\t\t\tvar sinRotation;\r\n\r\n\t\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\r\n\t\t\t\t\t// only the index matters for a dataset scale, but we want a consistent interface between scales\r\n\t\t\t\t\tvar tickWidth = this.getPixelForTick(1) - this.getPixelForTick(0) - 6;\r\n\r\n\t\t\t\t\t//Max label rotation can be set or default to 90 - also act as a loop counter\r\n\t\t\t\t\twhile (labelWidth > tickWidth && this.labelRotation < optionTicks.maxRotation) {\r\n\t\t\t\t\t\tcosRotation = Math.cos(helpers.toRadians(this.labelRotation));\r\n\t\t\t\t\t\tsinRotation = Math.sin(helpers.toRadians(this.labelRotation));\r\n\r\n\t\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\r\n\r\n\t\t\t\t\t\t// We're right aligning the text now.\r\n\t\t\t\t\t\tif (firstRotated + tickFontSize / 2 > this.yLabelWidth) {\r\n\t\t\t\t\t\t\tthis.paddingLeft = firstRotated + tickFontSize / 2;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.paddingRight = tickFontSize / 2;\r\n\r\n\t\t\t\t\t\tif (sinRotation * originalLabelWidth > this.maxHeight) {\r\n\t\t\t\t\t\t\t// go back one step\r\n\t\t\t\t\t\t\tthis.labelRotation--;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.labelRotation++;\r\n\t\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.margins) {\r\n\t\t\t\tthis.paddingLeft = Math.max(this.paddingLeft - this.margins.left, 0);\r\n\t\t\t\tthis.paddingRight = Math.max(this.paddingRight - this.margins.right, 0);\r\n\t\t\t}\r\n\t\t},\r\n\t\tafterCalculateTickRotation: function() {\r\n\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\r\n\t\t},\r\n\t\tfit: function() {\r\n\t\t\t// Reset\r\n\t\t\tvar minSize = this.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\r\n\t\t\tvar opts = this.options;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\r\n\t\t\tvar display = opts.display;\r\n\t\t\tvar isHorizontal = this.isHorizontal();\r\n\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\r\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabelOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabelOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabelOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\r\n\r\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n\t\t\t// Width\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\r\n\t\t\t\tminSize.width = this.isFullWidth() ? this.maxWidth - this.margins.left - this.margins.right : this.maxWidth;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? tickMarkLength : 0;\r\n\t\t\t}\r\n\r\n\t\t\t// height\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tminSize.height = display ? tickMarkLength : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.height = this.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t// Are we showing a title for the scale?\r\n\t\t\tif (scaleLabelOpts.display && display) {\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize.height += (scaleLabelFontSize * 1.5);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.width += (scaleLabelFontSize * 1.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.display && display) {\r\n\t\t\t\t// Don't bother fitting the ticks if we are not showing them\r\n\t\t\t\tif (!this.longestTextCache) {\r\n\t\t\t\t\tthis.longestTextCache = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar largestTextWidth = helpers.longestText(this.ctx, tickLabelFont, this.ticks, this.longestTextCache);\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\r\n\t\t\t\t\tthis.longestLabelWidth = largestTextWidth;\r\n\r\n\t\t\t\t\t// TODO - improve this calculation\r\n\t\t\t\t\tvar labelHeight = (Math.sin(helpers.toRadians(this.labelRotation)) * this.longestLabelWidth) + 1.5 * tickFontSize;\r\n\r\n\t\t\t\t\tminSize.height = Math.min(this.maxHeight, minSize.height + labelHeight);\r\n\t\t\t\t\tthis.ctx.font = tickLabelFont;\r\n\r\n\t\t\t\t\tvar firstLabelWidth = this.ctx.measureText(this.ticks[0]).width;\r\n\t\t\t\t\tvar lastLabelWidth = this.ctx.measureText(this.ticks[this.ticks.length - 1]).width;\r\n\r\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\r\n\t\t\t\t\t// by the font height\r\n\t\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(this.labelRotation));\r\n\t\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(this.labelRotation));\r\n\t\t\t\t\tthis.paddingLeft = this.labelRotation !== 0 ? (cosRotation * firstLabelWidth) + 3 : firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n\t\t\t\t\tthis.paddingRight = this.labelRotation !== 0 ? (sinRotation * (tickFontSize / 2)) + 3 : lastLabelWidth / 2 + 3; // when rotated\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\r\n\t\t\t\t\tvar maxLabelWidth = this.maxWidth - minSize.width;\r\n\r\n\t\t\t\t\t// Account for padding\r\n\t\t\t\t\tvar mirror = tickOpts.mirror;\r\n\t\t\t\t\tif (!mirror) {\r\n\t\t\t\t\t\tlargestTextWidth += this.options.ticks.padding;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// If mirrored text is on the inside so don't expand\r\n\t\t\t\t\t\tlargestTextWidth = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (largestTextWidth < maxLabelWidth) {\r\n\t\t\t\t\t\t// We don't need all the room\r\n\t\t\t\t\t\tminSize.width += largestTextWidth;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Expand to max size\r\n\t\t\t\t\t\tminSize.width = this.maxWidth;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.paddingTop = tickFontSize / 2;\r\n\t\t\t\t\tthis.paddingBottom = tickFontSize / 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.margins) {\r\n\t\t\t\tthis.paddingLeft = Math.max(this.paddingLeft - this.margins.left, 0);\r\n\t\t\t\tthis.paddingTop = Math.max(this.paddingTop - this.margins.top, 0);\r\n\t\t\t\tthis.paddingRight = Math.max(this.paddingRight - this.margins.right, 0);\r\n\t\t\t\tthis.paddingBottom = Math.max(this.paddingBottom - this.margins.bottom, 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.width = minSize.width;\r\n\t\t\tthis.height = minSize.height;\r\n\r\n\t\t},\r\n\t\tafterFit: function() {\r\n\t\t\thelpers.callCallback(this.options.afterFit, [this]);\r\n\t\t},\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\treturn this.options.position === \"top\" || this.options.position === \"bottom\";\r\n\t\t},\r\n\t\tisFullWidth: function() {\r\n\t\t\treturn (this.options.fullWidth);\r\n\t\t},\r\n\r\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n\t\tgetRightValue: function getRightValue(rawValue) {\r\n\t\t\t// Null and undefined values first\r\n\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number\r\n\t\t\tif (typeof(rawValue) === 'number' && isNaN(rawValue)) {\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\t\t\t// If it is in fact an object, dive in one more level\r\n\t\t\tif (typeof(rawValue) === \"object\") {\r\n\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\r\n\t\t\t\t\treturn rawValue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Value is good, return it\r\n\t\t\treturn rawValue;\r\n\t\t},\r\n\r\n\t\t// Used to get the value to display in the tooltip for the data at the given index\r\n\t\t// function getLabelForIndex(index, datasetIndex)\r\n\t\tgetLabelForIndex: helpers.noop,\r\n\r\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\tgetPixelForValue: helpers.noop,\r\n\r\n\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n\t\tgetValueForPixel: helpers.noop,\r\n\r\n\t\t// Used for tick location, should\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\tvar tickWidth = innerWidth / Math.max((this.ticks.length - ((this.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\t\tvar pixel = (tickWidth * index) + this.paddingLeft;\r\n\r\n\t\t\t\tif (includeOffset) {\r\n\t\t\t\t\tpixel += tickWidth / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar finalVal = this.left + Math.round(pixel);\r\n\t\t\t\tfinalVal += this.isFullWidth() ? this.margins.left : 0;\r\n\t\t\t\treturn finalVal;\r\n\t\t\t} else {\r\n\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\treturn this.top + (index * (innerHeight / (this.ticks.length - 1)));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Utility for getting the pixel location of a percentage of scale\r\n\t\tgetPixelForDecimal: function(decimal /*, includeOffset*/ ) {\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + this.paddingLeft;\r\n\r\n\t\t\t\tvar finalVal = this.left + Math.round(valueOffset);\r\n\t\t\t\tfinalVal += this.isFullWidth() ? this.margins.left : 0;\r\n\t\t\t\treturn finalVal;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.top + (decimal * this.height);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetBasePixel: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar min = me.min;\r\n\t\t\tvar max = me.max;\r\n\r\n\t\t\treturn me.getPixelForValue(\r\n\t\t\t\tme.beginAtZero? 0:\r\n\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t0);\r\n\t\t},\r\n\r\n\t\t// Actualy draw the scale on the canvas\r\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n\t\tdraw: function(chartArea) {\r\n\t\t\tvar options = this.options;\r\n\t\t\tif (!options.display) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar context = this.ctx;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar optionTicks = options.ticks;\r\n\t\t\tvar gridLines = options.gridLines;\r\n\t\t\tvar scaleLabel = options.scaleLabel;\r\n\r\n\t\t\tvar setContextLineSettings;\r\n\t\t\tvar isRotated = this.labelRotation !== 0;\r\n\t\t\tvar skipRatio;\r\n\t\t\tvar scaleLabelX;\r\n\t\t\tvar scaleLabelY;\r\n\t\t\tvar useAutoskipper = optionTicks.autoSkip;\r\n\r\n\t\t\t// figure out the maximum number of gridlines to show\r\n\t\t\tvar maxTicks;\r\n\t\t\tif (optionTicks.maxTicksLimit) {\r\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\r\n\t\t\t}\r\n\r\n\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\tvar tl = gridLines.tickMarkLength;\r\n\r\n\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabel.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabel.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabel.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\r\n\r\n\t\t\tvar labelRotationRadians = helpers.toRadians(this.labelRotation);\r\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\r\n\t\t\tvar sinRotation = Math.sin(labelRotationRadians);\r\n\t\t\tvar longestRotatedLabel = this.longestLabelWidth * cosRotation;\r\n\t\t\tvar rotatedLabelHeight = tickFontSize * sinRotation;\r\n\r\n\t\t\t// Make sure we draw text in the correct color and font\r\n\t\t\tcontext.fillStyle = tickFontColor;\r\n\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\tsetContextLineSettings = true;\r\n\t\t\t\tvar yTickStart = options.position === \"bottom\" ? this.top : this.bottom - tl;\r\n\t\t\t\tvar yTickEnd = options.position === \"bottom\" ? this.top + tl : this.bottom;\r\n\t\t\t\tskipRatio = false;\r\n\r\n                // Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\r\n                // See #2584\r\n                if (isRotated) {\r\n                    longestRotatedLabel /= 2;\r\n                }\r\n\r\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * this.ticks.length > (this.width - (this.paddingLeft + this.paddingRight))) {\r\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * this.ticks.length) / (this.width - (this.paddingLeft + this.paddingRight)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if they defined a max number of optionTicks,\r\n\t\t\t\t// increase skipRatio until that number is met\r\n\t\t\t\tif (maxTicks && this.ticks.length > maxTicks) {\r\n\t\t\t\t\twhile (!skipRatio || this.ticks.length / (skipRatio || 1) > maxTicks) {\r\n\t\t\t\t\t\tif (!skipRatio) {\r\n\t\t\t\t\t\t\tskipRatio = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tskipRatio += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!useAutoskipper) {\r\n\t\t\t\t\tskipRatio = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\thelpers.each(this.ticks, function (label, index) {\r\n\t\t\t\t\t// Blank optionTicks\r\n\t\t\t\t\tvar isLastTick = this.ticks.length === index + 1;\r\n\r\n\t\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\r\n\t\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= this.ticks.length);\r\n\t\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar xLineValue = this.getPixelForTick(index); // xvalues for grid lines\r\n\t\t\t\t\tvar xLabelValue = this.getPixelForTick(index, gridLines.offsetGridLines); // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n\t\t\t\t\tif (gridLines.display) {\r\n\t\t\t\t\t\tif (index === (typeof this.zeroLineIndex !== 'undefined' ? this.zeroLineIndex : 0)) {\r\n\t\t\t\t\t\t\t// Draw the first index specially\r\n\t\t\t\t\t\t\tcontext.lineWidth = gridLines.zeroLineWidth;\r\n\t\t\t\t\t\t\tcontext.strokeStyle = gridLines.zeroLineColor;\r\n\t\t\t\t\t\t\tsetContextLineSettings = true; // reset next time\r\n\t\t\t\t\t\t} else if (setContextLineSettings) {\r\n\t\t\t\t\t\t\tcontext.lineWidth = gridLines.lineWidth;\r\n\t\t\t\t\t\t\tcontext.strokeStyle = gridLines.color;\r\n\t\t\t\t\t\t\tsetContextLineSettings = false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\txLineValue += helpers.aliasPixel(context.lineWidth);\r\n\r\n\t\t\t\t\t\t// Draw the label area\r\n\t\t\t\t\t\tcontext.beginPath();\r\n\r\n\t\t\t\t\t\tif (gridLines.drawTicks) {\r\n\t\t\t\t\t\t\tcontext.moveTo(xLineValue, yTickStart);\r\n\t\t\t\t\t\t\tcontext.lineTo(xLineValue, yTickEnd);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Draw the chart area\r\n\t\t\t\t\t\tif (gridLines.drawOnChartArea) {\r\n\t\t\t\t\t\t\tcontext.moveTo(xLineValue, chartArea.top);\r\n\t\t\t\t\t\t\tcontext.lineTo(xLineValue, chartArea.bottom);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Need to stroke in the loop because we are potentially changing line widths & colours\r\n\t\t\t\t\t\tcontext.stroke();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (optionTicks.display) {\r\n\t\t\t\t\t\tcontext.save();\r\n\t\t\t\t\t\tcontext.translate(xLabelValue + optionTicks.labelOffset, (isRotated) ? this.top + 12 : options.position === \"top\" ? this.bottom - tl : this.top + tl);\r\n\t\t\t\t\t\tcontext.rotate(labelRotationRadians * -1);\r\n\t\t\t\t\t\tcontext.font = tickLabelFont;\r\n\t\t\t\t\t\tcontext.textAlign = (isRotated) ? \"right\" : \"center\";\r\n\t\t\t\t\t\tcontext.textBaseline = (isRotated) ? \"middle\" : options.position === \"top\" ? \"bottom\" : \"top\";\r\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\r\n\t\t\t\t\t\tcontext.restore();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\tif (scaleLabel.display) {\r\n\t\t\t\t\t// Draw the scale label\r\n\t\t\t\t\tcontext.textAlign = \"center\";\r\n\t\t\t\t\tcontext.textBaseline = 'middle';\r\n\t\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\r\n\t\t\t\t\tcontext.font = scaleLabelFont;\r\n\r\n\t\t\t\t\tscaleLabelX = this.left + ((this.right - this.left) / 2); // midpoint of the width\r\n\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? this.bottom - (scaleLabelFontSize / 2) : this.top + (scaleLabelFontSize / 2);\r\n\r\n\t\t\t\t\tcontext.fillText(scaleLabel.labelString, scaleLabelX, scaleLabelY);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tsetContextLineSettings = true;\r\n\t\t\t\tvar xTickStart = options.position === \"right\" ? this.left : this.right - 5;\r\n\t\t\t\tvar xTickEnd = options.position === \"right\" ? this.left + 5 : this.right;\r\n\r\n\t\t\t\thelpers.each(this.ticks, function (label, index) {\r\n\t\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\r\n\t\t\t\t\tif (label === undefined || label === null) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar yLineValue = this.getPixelForTick(index); // xvalues for grid lines\r\n\r\n\t\t\t\t\tif (gridLines.display) {\r\n\t\t\t\t\t\tif (index === (typeof this.zeroLineIndex !== 'undefined' ? this.zeroLineIndex : 0)) {\r\n\t\t\t\t\t\t\t// Draw the first index specially\r\n\t\t\t\t\t\t\tcontext.lineWidth = gridLines.zeroLineWidth;\r\n\t\t\t\t\t\t\tcontext.strokeStyle = gridLines.zeroLineColor;\r\n\t\t\t\t\t\t\tsetContextLineSettings = true; // reset next time\r\n\t\t\t\t\t\t} else if (setContextLineSettings) {\r\n\t\t\t\t\t\t\tcontext.lineWidth = gridLines.lineWidth;\r\n\t\t\t\t\t\t\tcontext.strokeStyle = gridLines.color;\r\n\t\t\t\t\t\t\tsetContextLineSettings = false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tyLineValue += helpers.aliasPixel(context.lineWidth);\r\n\r\n\t\t\t\t\t\t// Draw the label area\r\n\t\t\t\t\t\tcontext.beginPath();\r\n\r\n\t\t\t\t\t\tif (gridLines.drawTicks) {\r\n\t\t\t\t\t\t\tcontext.moveTo(xTickStart, yLineValue);\r\n\t\t\t\t\t\t\tcontext.lineTo(xTickEnd, yLineValue);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Draw the chart area\r\n\t\t\t\t\t\tif (gridLines.drawOnChartArea) {\r\n\t\t\t\t\t\t\tcontext.moveTo(chartArea.left, yLineValue);\r\n\t\t\t\t\t\t\tcontext.lineTo(chartArea.right, yLineValue);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Need to stroke in the loop because we are potentially changing line widths & colours\r\n\t\t\t\t\t\tcontext.stroke();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (optionTicks.display) {\r\n\t\t\t\t\t\tvar xLabelValue;\r\n\t\t\t\t\t\tvar yLabelValue = this.getPixelForTick(index, gridLines.offsetGridLines); // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n\t\t\t\t\t\tcontext.save();\r\n\r\n\t\t\t\t\t\tif (options.position === \"left\") {\r\n\t\t\t\t\t\t\tif (optionTicks.mirror) {\r\n\t\t\t\t\t\t\t\txLabelValue = this.right + optionTicks.padding;\r\n\t\t\t\t\t\t\t\tcontext.textAlign = \"left\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\txLabelValue = this.right - optionTicks.padding;\r\n\t\t\t\t\t\t\t\tcontext.textAlign = \"right\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// right side\r\n\t\t\t\t\t\t\tif (optionTicks.mirror) {\r\n\t\t\t\t\t\t\t\txLabelValue = this.left - optionTicks.padding;\r\n\t\t\t\t\t\t\t\tcontext.textAlign = \"right\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\txLabelValue = this.left + optionTicks.padding;\r\n\t\t\t\t\t\t\t\tcontext.textAlign = \"left\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontext.translate(xLabelValue, yLabelValue + optionTicks.labelOffset);\r\n\t\t\t\t\t\tcontext.rotate(labelRotationRadians * -1);\r\n\t\t\t\t\t\tcontext.font = tickLabelFont;\r\n\t\t\t\t\t\tcontext.textBaseline = \"middle\";\r\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\r\n\t\t\t\t\t\tcontext.restore();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\tif (scaleLabel.display) {\r\n\t\t\t\t\t// Draw the scale label\r\n\t\t\t\t\tscaleLabelX = options.position === 'left' ? this.left + (scaleLabelFontSize / 2) : this.right - (scaleLabelFontSize / 2);\r\n\t\t\t\t\tscaleLabelY = this.top + ((this.bottom - this.top) / 2);\r\n\t\t\t\t\tvar rotation = options.position === 'left' ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n\r\n\t\t\t\t\tcontext.save();\r\n\t\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\r\n\t\t\t\t\tcontext.rotate(rotation);\r\n\t\t\t\t\tcontext.textAlign = \"center\";\r\n\t\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\r\n\t\t\t\t\tcontext.font = scaleLabelFont;\r\n\t\t\t\t\tcontext.textBaseline = 'middle';\r\n\t\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\r\n\t\t\t\t\tcontext.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (gridLines.drawBorder) {\r\n\t\t\t\t// Draw the line at the edge of the axis\r\n\t\t\t\tcontext.lineWidth = gridLines.lineWidth;\r\n\t\t\t\tcontext.strokeStyle = gridLines.color;\r\n\t\t\t\tvar x1 = this.left,\r\n\t\t\t\t\tx2 = this.right,\r\n\t\t\t\t\ty1 = this.top,\r\n\t\t\t\t\ty2 = this.bottom;\r\n\r\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? this.bottom : this.top;\r\n\t\t\t\t\ty1 += aliasPixel;\r\n\t\t\t\t\ty2 += aliasPixel;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? this.right : this.left;\r\n\t\t\t\t\tx1 += aliasPixel;\r\n\t\t\t\t\tx2 += aliasPixel;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.moveTo(x1, y1);\r\n\t\t\t\tcontext.lineTo(x2, y2);\r\n\t\t\t\tcontext.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.scale.js\n ** module id = 147\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.scaleService = {\r\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n\t\t// use the new chart options to grab the correct scale\r\n\t\tconstructors: {},\r\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n\t\t// old browsers\r\n\r\n\t\t// Scale config defaults\r\n\t\tdefaults: {},\r\n\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\r\n\t\t\tthis.constructors[type] = scaleConstructor;\r\n\t\t\tthis.defaults[type] = helpers.clone(defaults);\r\n\t\t},\r\n\t\tgetScaleConstructor: function(type) {\r\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n\t\t},\r\n\t\tgetScaleDefaults: function(type) {\r\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\r\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\r\n\t\t},\r\n\t\tupdateScaleDefaults: function(type, additions) {\r\n\t\t\tvar defaults = this.defaults;\r\n\t\t\tif (defaults.hasOwnProperty(type)) {\r\n\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\r\n\t\t\t}\r\n\t\t},\r\n\t\taddScalesToLayout: function(chartInstance) {\r\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\r\n\t\t\thelpers.each(chartInstance.scales, function(scale) {\r\n\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.scaleService.js\n ** module id = 148\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.title = {\r\n\t\tdisplay: false,\r\n\t\tposition: 'top',\r\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\r\n\t\tfontStyle: 'bold',\r\n\t\tpadding: 10,\r\n\r\n\t\t// actual title\r\n\t\ttext: ''\r\n\t};\r\n\r\n\tvar noop = helpers.noop;\r\n\tChart.Title = Chart.Element.extend({\r\n\r\n\t\tinitialize: function(config) {\r\n\t\t\thelpers.extend(this, config);\r\n\t\t\tthis.options = helpers.configMerge(Chart.defaults.global.title, config.options);\r\n\r\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\tthis.legendHitBoxes = [];\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\r\n\t\tbeforeUpdate: noop,\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tthis.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tthis.maxWidth = maxWidth;\r\n\t\t\tthis.maxHeight = maxHeight;\r\n\t\t\tthis.margins = margins;\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tthis.beforeSetDimensions();\r\n\t\t\tthis.setDimensions();\r\n\t\t\tthis.afterSetDimensions();\r\n\t\t\t// Labels\r\n\t\t\tthis.beforeBuildLabels();\r\n\t\t\tthis.buildLabels();\r\n\t\t\tthis.afterBuildLabels();\r\n\r\n\t\t\t// Fit\r\n\t\t\tthis.beforeFit();\r\n\t\t\tthis.fit();\r\n\t\t\tthis.afterFit();\r\n\t\t\t//\r\n\t\t\tthis.afterUpdate();\r\n\r\n\t\t\treturn this.minSize;\r\n\r\n\t\t},\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: noop,\r\n\t\tsetDimensions: function() {\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tthis.width = this.maxWidth;\r\n\t\t\t\tthis.left = 0;\r\n\t\t\t\tthis.right = this.width;\r\n\t\t\t} else {\r\n\t\t\t\tthis.height = this.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tthis.top = 0;\r\n\t\t\t\tthis.bottom = this.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tthis.paddingLeft = 0;\r\n\t\t\tthis.paddingTop = 0;\r\n\t\t\tthis.paddingRight = 0;\r\n\t\t\tthis.paddingBottom = 0;\r\n\r\n\t\t\t// Reset minSize\r\n\t\t\tthis.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t},\r\n\t\tafterSetDimensions: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeBuildLabels: noop,\r\n\t\tbuildLabels: noop,\r\n\t\tafterBuildLabels: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: noop,\r\n\t\tfit: function() {\r\n\r\n\t\t\tvar _this = this,\r\n\t\t\t\tctx = _this.ctx,\r\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\topts = _this.options,\r\n\t\t\t\tglobalDefaults = Chart.defaults.global,\r\n\t\t\t\tdisplay = opts.display,\r\n\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\tminSize = _this.minSize;\r\n\r\n\t\t\tif (_this.isHorizontal()) {\r\n\t\t\t\tminSize.width = _this.maxWidth; // fill all the width\r\n\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t\tminSize.height = _this.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t_this.width = minSize.width;\r\n\t\t\t_this.height = minSize.height;\r\n\r\n\t\t},\r\n\t\tafterFit: noop,\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\tvar pos = this.options.position;\r\n\t\t\treturn pos === \"top\" || pos === \"bottom\";\r\n\t\t},\r\n\r\n\t\t// Actualy draw the title block on the canvas\r\n\t\tdraw: function() {\r\n\t\t\tvar _this = this,\r\n\t\t\t\tctx = _this.ctx,\r\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\topts = _this.options,\r\n\t\t\t\tglobalDefaults = Chart.defaults.global;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\r\n\t\t\t\t\trotation = 0,\r\n\t\t\t\t\ttitleX, \r\n\t\t\t\t\ttitleY,\r\n\t\t\t\t\ttop = _this.top,\r\n\t\t\t\t\tleft = _this.left,\r\n\t\t\t\t\tbottom = _this.bottom,\r\n\t\t\t\t\tright = _this.right;\r\n\r\n\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n\t\t\t\tctx.font = titleFont;\r\n\r\n\t\t\t\t// Horizontal\r\n\t\t\t\tif (_this.isHorizontal()) {\r\n\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\r\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\r\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\r\n\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.save();\r\n\t\t\t\tctx.translate(titleX, titleY);\r\n\t\t\t\tctx.rotate(rotation);\r\n\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\tctx.fillText(opts.text, 0, 0);\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.title.js\n ** module id = 149\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.tooltips = {\r\n\t\tenabled: true,\r\n\t\tcustom: null,\r\n\t\tmode: 'single',\r\n\t\tbackgroundColor: \"rgba(0,0,0,0.8)\",\r\n\t\ttitleFontStyle: \"bold\",\r\n\t\ttitleSpacing: 2,\r\n\t\ttitleMarginBottom: 6,\r\n\t\ttitleColor: \"#fff\",\r\n\t\ttitleAlign: \"left\",\r\n\t\tbodySpacing: 2,\r\n\t\tbodyColor: \"#fff\",\r\n\t\tbodyAlign: \"left\",\r\n\t\tfooterFontStyle: \"bold\",\r\n\t\tfooterSpacing: 2,\r\n\t\tfooterMarginTop: 6,\r\n\t\tfooterColor: \"#fff\",\r\n\t\tfooterAlign: \"left\",\r\n\t\tyPadding: 6,\r\n\t\txPadding: 6,\r\n\t\tyAlign : 'center',\r\n\t\txAlign : 'center',\r\n\t\tcaretSize: 5,\r\n\t\tcornerRadius: 6,\r\n\t\tmultiKeyBackground: '#fff',\r\n\t\tcallbacks: {\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeTitle: helpers.noop,\r\n\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\tvar title = '';\r\n\r\n\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\tif (tooltipItems[0].xLabel) {\r\n\t\t\t\t\t\ttitle = tooltipItems[0].xLabel;\r\n\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn title;\r\n\t\t\t},\r\n\t\t\tafterTitle: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeBody: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tbeforeLabel: helpers.noop,\r\n\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\r\n\t\t\t},\r\n\t\t\tafterLabel: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tafterBody: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeFooter: helpers.noop,\r\n\t\t\tfooter: helpers.noop,\r\n\t\t\tafterFooter: helpers.noop\r\n\t\t}\r\n\t};\r\n\r\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\r\n\tfunction pushOrConcat(base, toPush) {\r\n\t\tif (toPush) {\r\n\t\t\tif (helpers.isArray(toPush)) {\r\n\t\t\t\tbase = base.concat(toPush);\r\n\t\t\t} else {\r\n\t\t\t\tbase.push(toPush);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn base;\r\n\t}\r\n\r\n\tChart.Tooltip = Chart.Element.extend({\r\n\t\tinitialize: function() {\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar options = this._options;\r\n\t\t\tvar tooltips = options.tooltips;\r\n\r\n\t\t\thelpers.extend(this, {\r\n\t\t\t\t_model: {\r\n\t\t\t\t\t// Positioning\r\n\t\t\t\t\txPadding: tooltips.xPadding,\r\n\t\t\t\t\tyPadding: tooltips.yPadding,\r\n\t\t\t\t\txAlign : tooltips.yAlign,\r\n\t\t\t\t\tyAlign : tooltips.xAlign,\r\n\r\n\t\t\t\t\t// Body\r\n\t\t\t\t\tbodyColor: tooltips.bodyColor,\r\n\t\t\t\t\t_bodyFontFamily: helpers.getValueOrDefault(tooltips.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t_bodyFontStyle: helpers.getValueOrDefault(tooltips.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\t_bodyAlign: tooltips.bodyAlign,\r\n\t\t\t\t\tbodyFontSize: helpers.getValueOrDefault(tooltips.bodyFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\tbodySpacing: tooltips.bodySpacing,\r\n\r\n\t\t\t\t\t// Title\r\n\t\t\t\t\ttitleColor: tooltips.titleColor,\r\n\t\t\t\t\t_titleFontFamily: helpers.getValueOrDefault(tooltips.titleFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t_titleFontStyle: helpers.getValueOrDefault(tooltips.titleFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\ttitleFontSize: helpers.getValueOrDefault(tooltips.titleFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t_titleAlign: tooltips.titleAlign,\r\n\t\t\t\t\ttitleSpacing: tooltips.titleSpacing,\r\n\t\t\t\t\ttitleMarginBottom: tooltips.titleMarginBottom,\r\n\r\n\t\t\t\t\t// Footer\r\n\t\t\t\t\tfooterColor: tooltips.footerColor,\r\n\t\t\t\t\t_footerFontFamily: helpers.getValueOrDefault(tooltips.footerFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t_footerFontStyle: helpers.getValueOrDefault(tooltips.footerFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\tfooterFontSize: helpers.getValueOrDefault(tooltips.footerFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t_footerAlign: tooltips.footerAlign,\r\n\t\t\t\t\tfooterSpacing: tooltips.footerSpacing,\r\n\t\t\t\t\tfooterMarginTop: tooltips.footerMarginTop,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tcaretSize: tooltips.caretSize,\r\n\t\t\t\t\tcornerRadius: tooltips.cornerRadius,\r\n\t\t\t\t\tbackgroundColor: tooltips.backgroundColor,\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tlegendColorBackground: tooltips.multiKeyBackground\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// Get the title\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetTitle: function() {\r\n\t\t\tvar beforeTitle = this._options.tooltips.callbacks.beforeTitle.apply(this, arguments),\r\n\t\t\t\ttitle = this._options.tooltips.callbacks.title.apply(this, arguments),\r\n\t\t\t\tafterTitle = this._options.tooltips.callbacks.afterTitle.apply(this, arguments);\r\n\r\n\t\t\tvar lines = [];\r\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\r\n\t\t\tlines = pushOrConcat(lines, title);\r\n\t\t\tlines = pushOrConcat(lines, afterTitle);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetBeforeBody: function() {\r\n\t\t\tvar lines = this._options.tooltips.callbacks.beforeBody.apply(this, arguments);\r\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetBody: function(tooltipItems, data) {\r\n\t\t\tvar lines = [];\r\n\r\n\t\t\thelpers.each(tooltipItems, function(bodyItem) {\r\n\t\t\t\thelpers.pushAllIfDefined(this._options.tooltips.callbacks.beforeLabel.call(this, bodyItem, data), lines);\r\n\t\t\t\thelpers.pushAllIfDefined(this._options.tooltips.callbacks.label.call(this, bodyItem, data), lines);\r\n\t\t\t\thelpers.pushAllIfDefined(this._options.tooltips.callbacks.afterLabel.call(this, bodyItem, data), lines);\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetAfterBody: function() {\r\n\t\t\tvar lines = this._options.tooltips.callbacks.afterBody.apply(this, arguments);\r\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t},\r\n\r\n\t\t// Get the footer and beforeFooter and afterFooter lines\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetFooter: function() {\r\n\t\t\tvar beforeFooter = this._options.tooltips.callbacks.beforeFooter.apply(this, arguments);\r\n\t\t\tvar footer = this._options.tooltips.callbacks.footer.apply(this, arguments);\r\n\t\t\tvar afterFooter = this._options.tooltips.callbacks.afterFooter.apply(this, arguments);\r\n\r\n\t\t\tvar lines = [];\r\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\r\n\t\t\tlines = pushOrConcat(lines, footer);\r\n\t\t\tlines = pushOrConcat(lines, afterFooter);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\tgetAveragePosition: function(elements) {\r\n\r\n\t\t\tif (!elements.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar xPositions = [];\r\n\t\t\tvar yPositions = [];\r\n\r\n\t\t\thelpers.each(elements, function(el) {\r\n\t\t\t\tif (el && el.hasValue()){\r\n\t\t\t\t\tvar pos = el.tooltipPosition();\r\n\t\t\t\t\txPositions.push(pos.x);\r\n\t\t\t\t\tyPositions.push(pos.y);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar x = 0,\r\n\t\t\t\ty = 0;\r\n\t\t\tfor (var i = 0; i < xPositions.length; i++) {\r\n\t\t\t\tx += xPositions[i];\r\n\t\t\t\ty += yPositions[i];\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: Math.round(x / xPositions.length),\r\n\t\t\t\ty: Math.round(y / xPositions.length)\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\tupdate: function(changed) {\r\n\t\t\tif (this._active.length) {\r\n\t\t\t\tthis._model.opacity = 1;\r\n\r\n\t\t\t\tvar element = this._active[0],\r\n\t\t\t\t\tlabelColors = [],\r\n\t\t\t\t\ttooltipPosition;\r\n\r\n\t\t\t\tvar tooltipItems = [];\r\n\r\n\t\t\t\tif (this._options.tooltips.mode === 'single') {\r\n\t\t\t\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n\t\t\t\t\ttooltipItems.push({\r\n\t\t\t\t\t\txLabel: element._xScale ? element._xScale.getLabelForIndex(element._index, element._datasetIndex) : '',\r\n\t\t\t\t\t\tyLabel: yScale ? yScale.getLabelForIndex(element._index, element._datasetIndex) : '',\r\n\t\t\t\t\t\tindex: element._index,\r\n\t\t\t\t\t\tdatasetIndex: element._datasetIndex\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttooltipPosition = this.getAveragePosition(this._active);\r\n\t\t\t\t} else {\r\n\t\t\t\t\thelpers.each(this._data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\t\tif (!this._chartInstance.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar meta = this._chartInstance.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\tvar currentElement = meta.data[element._index];\r\n\t\t\t\t\t\tif (currentElement) {\r\n\t\t\t\t\t\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n\r\n\t\t\t\t\t\t\ttooltipItems.push({\r\n\t\t\t\t\t\t\t\txLabel: currentElement._xScale ? currentElement._xScale.getLabelForIndex(currentElement._index, currentElement._datasetIndex) : '',\r\n\t\t\t\t\t\t\t\tyLabel: yScale ? yScale.getLabelForIndex(currentElement._index, currentElement._datasetIndex) : '',\r\n\t\t\t\t\t\t\t\tindex: element._index,\r\n\t\t\t\t\t\t\t\tdatasetIndex: datasetIndex\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\thelpers.each(this._active, function(active) {\r\n\t\t\t\t\t\tif (active) {\r\n\t\t\t\t\t\t\tlabelColors.push({\r\n\t\t\t\t\t\t\t\tborderColor: active._view.borderColor,\r\n\t\t\t\t\t\t\t\tbackgroundColor: active._view.backgroundColor\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, null);\r\n\r\n\t\t\t\t\ttooltipPosition = this.getAveragePosition(this._active);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build the Text Lines\r\n\t\t\t\thelpers.extend(this._model, {\r\n\t\t\t\t\ttitle: this.getTitle(tooltipItems, this._data),\r\n\t\t\t\t\tbeforeBody: this.getBeforeBody(tooltipItems, this._data),\r\n\t\t\t\t\tbody: this.getBody(tooltipItems, this._data),\r\n\t\t\t\t\tafterBody: this.getAfterBody(tooltipItems, this._data),\r\n\t\t\t\t\tfooter: this.getFooter(tooltipItems, this._data)\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.extend(this._model, {\r\n\t\t\t\t\tx: Math.round(tooltipPosition.x),\r\n\t\t\t\t\ty: Math.round(tooltipPosition.y),\r\n\t\t\t\t\tcaretPadding: helpers.getValueOrDefault(tooltipPosition.padding, 2),\r\n\t\t\t\t\tlabelColors: labelColors\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// We need to determine alignment of\r\n\t\t\t\tvar tooltipSize = this.getTooltipSize(this._model);\r\n\t\t\t\tthis.determineAlignment(tooltipSize); // Smart Tooltip placement to stay on the canvas\r\n\r\n\t\t\t\thelpers.extend(this._model, this.getBackgroundPoint(this._model, tooltipSize));\r\n\t\t\t} else {\r\n\t\t\t\tthis._model.opacity = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (changed && this._options.tooltips.custom) {\r\n\t\t\t\tthis._options.tooltips.custom.call(this, this._model);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tgetTooltipSize: function getTooltipSize(vm) {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\r\n\t\t\tvar size = {\r\n\t\t\t\theight: vm.yPadding * 2, // Tooltip Padding\r\n\t\t\t\twidth: 0\r\n\t\t\t};\r\n\t\t\tvar combinedBodyLength = vm.body.length + vm.beforeBody.length + vm.afterBody.length;\r\n\r\n\t\t\tsize.height += vm.title.length * vm.titleFontSize; // Title Lines\r\n\t\t\tsize.height += (vm.title.length - 1) * vm.titleSpacing; // Title Line Spacing\r\n\t\t\tsize.height += vm.title.length ? vm.titleMarginBottom : 0; // Title's bottom Margin\r\n\t\t\tsize.height += combinedBodyLength * vm.bodyFontSize; // Body Lines\r\n\t\t\tsize.height += combinedBodyLength ? (combinedBodyLength - 1) * vm.bodySpacing : 0; // Body Line Spacing\r\n\t\t\tsize.height += vm.footer.length ? vm.footerMarginTop : 0; // Footer Margin\r\n\t\t\tsize.height += vm.footer.length * (vm.footerFontSize); // Footer Lines\r\n\t\t\tsize.height += vm.footer.length ? (vm.footer.length - 1) * vm.footerSpacing : 0; // Footer Line Spacing\r\n\r\n\t\t\t// Width\r\n\t\t\tctx.font = helpers.fontString(vm.titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\t\t\thelpers.each(vm.title, function(line) {\r\n\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width);\r\n\t\t\t});\r\n\r\n\t\t\tctx.font = helpers.fontString(vm.bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\t\t\thelpers.each(vm.beforeBody.concat(vm.afterBody), function(line) {\r\n\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width);\r\n\t\t\t});\r\n\t\t\thelpers.each(vm.body, function(line) {\r\n\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width + (this._options.tooltips.mode !== 'single' ? (vm.bodyFontSize + 2) : 0));\r\n\t\t\t}, this);\r\n\r\n\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\t\t\thelpers.each(vm.footer, function(line) {\r\n\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width);\r\n\t\t\t});\r\n\t\t\tsize.width += 2 * vm.xPadding;\r\n\r\n\t\t\treturn size;\r\n\t\t},\r\n\t\tdetermineAlignment: function determineAlignment(size) {\r\n\t\t\tif (this._model.y < size.height) {\r\n\t\t\t\tthis._model.yAlign = 'top';\r\n\t\t\t} else if (this._model.y > (this._chart.height - size.height)) {\r\n\t\t\t\tthis._model.yAlign = 'bottom';\r\n\t\t\t}\r\n\r\n\t\t\tvar lf, rf; // functions to determine left, right alignment\r\n\t\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n\t\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n\t\t\tvar _this = this;\r\n\t\t\tvar midX = (this._chartInstance.chartArea.left + this._chartInstance.chartArea.right) / 2;\r\n\t\t\tvar midY = (this._chartInstance.chartArea.top + this._chartInstance.chartArea.bottom) / 2;\r\n\r\n\t\t\tif (this._model.yAlign === 'center') {\r\n\t\t\t\tlf = function(x) {\r\n\t\t\t\t\treturn x <= midX;\r\n\t\t\t\t};\r\n\t\t\t\trf = function(x) {\r\n\t\t\t\t\treturn x > midX;\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tlf = function(x) {\r\n\t\t\t\t\treturn x <= (size.width / 2);\r\n\t\t\t\t};\r\n\t\t\t\trf = function(x) {\r\n\t\t\t\t\treturn x >= (_this._chart.width - (size.width / 2));\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tolf = function(x) {\r\n\t\t\t\treturn x + size.width > _this._chart.width;\r\n\t\t\t};\r\n\t\t\torf = function(x) {\r\n\t\t\t\treturn x - size.width < 0;\r\n\t\t\t};\r\n\t\t\tyf = function(y) {\r\n\t\t\t\treturn y <= midY ? 'top' : 'bottom';\r\n\t\t\t};\r\n\r\n\t\t\tif (lf(this._model.x)) {\r\n\t\t\t\tthis._model.xAlign = 'left';\r\n\r\n\t\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\r\n\t\t\t\tif (olf(this._model.x)) {\r\n\t\t\t\t\tthis._model.xAlign = 'center';\r\n\t\t\t\t\tthis._model.yAlign = yf(this._model.y);\r\n\t\t\t\t}\r\n\t\t\t} else if (rf(this._model.x)) {\r\n\t\t\t\tthis._model.xAlign = 'right';\r\n\r\n\t\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\r\n\t\t\t\tif (orf(this._model.x)) {\r\n\t\t\t\t\tthis._model.xAlign = 'center';\r\n\t\t\t\t\tthis._model.yAlign = yf(this._model.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetBackgroundPoint: function getBackgroundPoint(vm, size) {\r\n\t\t\t// Background Position\r\n\t\t\tvar pt = {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\r\n\t\t\tif (vm.xAlign === 'right') {\r\n\t\t\t\tpt.x -= size.width;\r\n\t\t\t} else if (vm.xAlign === 'center') {\r\n\t\t\t\tpt.x -= (size.width / 2);\r\n\t\t\t}\r\n\r\n\t\t\tif (vm.yAlign === 'top') {\r\n\t\t\t\tpt.y += vm.caretPadding + vm.caretSize;\r\n\t\t\t} else if (vm.yAlign === 'bottom') {\r\n\t\t\t\tpt.y -= size.height + vm.caretPadding + vm.caretSize;\r\n\t\t\t} else {\r\n\t\t\t\tpt.y -= (size.height / 2);\r\n\t\t\t}\r\n\r\n\t\t\tif (vm.yAlign === 'center') {\r\n\t\t\t\tif (vm.xAlign === 'left') {\r\n\t\t\t\t\tpt.x += vm.caretPadding + vm.caretSize;\r\n\t\t\t\t} else if (vm.xAlign === 'right') {\r\n\t\t\t\t\tpt.x -= vm.caretPadding + vm.caretSize;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (vm.xAlign === 'left') {\r\n\t\t\t\t\tpt.x -= vm.cornerRadius + vm.caretPadding;\r\n\t\t\t\t} else if (vm.xAlign === 'right') {\r\n\t\t\t\t\tpt.x += vm.cornerRadius + vm.caretPadding;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn pt;\r\n\t\t},\r\n\t\tdrawCaret: function drawCaret(tooltipPoint, size, opacity, caretPadding) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar x1, x2, x3;\r\n\t\t\tvar y1, y2, y3;\r\n\r\n\t\t\tif (vm.yAlign === 'center') {\r\n\t\t\t\t// Left or right side\r\n\t\t\t\tif (vm.xAlign === 'left') {\r\n\t\t\t\t\tx1 = tooltipPoint.x;\r\n\t\t\t\t\tx2 = x1 - vm.caretSize;\r\n\t\t\t\t\tx3 = x1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx1 = tooltipPoint.x + size.width;\r\n\t\t\t\t\tx2 = x1 + vm.caretSize;\r\n\t\t\t\t\tx3 = x1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ty2 = tooltipPoint.y + (size.height / 2);\r\n\t\t\t\ty1 = y2 - vm.caretSize;\r\n\t\t\t\ty3 = y2 + vm.caretSize;\r\n\t\t\t} else {\r\n\t\t\t\tif (vm.xAlign === 'left') {\r\n\t\t\t\t\tx1 = tooltipPoint.x + vm.cornerRadius;\r\n\t\t\t\t\tx2 = x1 + vm.caretSize;\r\n\t\t\t\t\tx3 = x2 + vm.caretSize;\r\n\t\t\t\t} else if (vm.xAlign === 'right') {\r\n\t\t\t\t\tx1 = tooltipPoint.x + size.width - vm.cornerRadius;\r\n\t\t\t\t\tx2 = x1 - vm.caretSize;\r\n\t\t\t\t\tx3 = x2 - vm.caretSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx2 = tooltipPoint.x + (size.width / 2);\r\n\t\t\t\t\tx1 = x2 - vm.caretSize;\r\n\t\t\t\t\tx3 = x2 + vm.caretSize;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vm.yAlign === 'top') {\r\n\t\t\t\t\ty1 = tooltipPoint.y;\r\n\t\t\t\t\ty2 = y1 - vm.caretSize;\r\n\t\t\t\t\ty3 = y1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ty1 = tooltipPoint.y + size.height;\r\n\t\t\t\t\ty2 = y1 + vm.caretSize;\r\n\t\t\t\t\ty3 = y1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\r\n\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x1, y1);\r\n\t\t\tctx.lineTo(x2, y2);\r\n\t\t\tctx.lineTo(x3, y3);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t},\r\n\t\tdrawTitle: function drawTitle(pt, vm, ctx, opacity) {\r\n\t\t\tif (vm.title.length) {\r\n\t\t\t\tctx.textAlign = vm._titleAlign;\r\n\t\t\t\tctx.textBaseline = \"top\";\r\n\r\n\t\t\t\tvar titleColor = helpers.color(vm.titleColor);\r\n\t\t\t\tctx.fillStyle = titleColor.alpha(opacity * titleColor.alpha()).rgbString();\r\n\t\t\t\tctx.font = helpers.fontString(vm.titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n\t\t\t\thelpers.each(vm.title, function(title, i) {\r\n\t\t\t\t\tctx.fillText(title, pt.x, pt.y);\r\n\t\t\t\t\tpt.y += vm.titleFontSize + vm.titleSpacing; // Line Height and spacing\r\n\r\n\t\t\t\t\tif (i + 1 === vm.title.length) {\r\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - vm.titleSpacing; // If Last, add margin, remove spacing\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrawBody: function drawBody(pt, vm, ctx, opacity) {\r\n\t\t\tctx.textAlign = vm._bodyAlign;\r\n\t\t\tctx.textBaseline = \"top\";\r\n\r\n\t\t\tvar bodyColor = helpers.color(vm.bodyColor);\r\n\t\t\tctx.fillStyle = bodyColor.alpha(opacity * bodyColor.alpha()).rgbString();\r\n\t\t\tctx.font = helpers.fontString(vm.bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n\t\t\t// Before Body\r\n\t\t\thelpers.each(vm.beforeBody, function(beforeBody) {\r\n\t\t\t\tctx.fillText(beforeBody, pt.x, pt.y);\r\n\t\t\t\tpt.y += vm.bodyFontSize + vm.bodySpacing;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(vm.body, function(body, i) {\r\n\t\t\t\t// Draw Legend-like boxes if needed\r\n\t\t\t\tif (this._options.tooltips.mode !== 'single') {\r\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\r\n\t\t\t\t\tctx.fillStyle = helpers.color(vm.legendColorBackground).alpha(opacity).rgbaString();\r\n\t\t\t\t\tctx.fillRect(pt.x, pt.y, vm.bodyFontSize, vm.bodyFontSize);\r\n\r\n\t\t\t\t\t// Border\r\n\t\t\t\t\tctx.strokeStyle = helpers.color(vm.labelColors[i].borderColor).alpha(opacity).rgbaString();\r\n\t\t\t\t\tctx.strokeRect(pt.x, pt.y, vm.bodyFontSize, vm.bodyFontSize);\r\n\r\n\t\t\t\t\t// Inner square\r\n\t\t\t\t\tctx.fillStyle = helpers.color(vm.labelColors[i].backgroundColor).alpha(opacity).rgbaString();\r\n\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, vm.bodyFontSize - 2, vm.bodyFontSize - 2);\r\n\r\n\t\t\t\t\tctx.fillStyle = helpers.color(vm.bodyColor).alpha(opacity).rgbaString(); // Return fill style for text\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Body Line\r\n\t\t\t\tctx.fillText(body, pt.x + (this._options.tooltips.mode !== 'single' ? (vm.bodyFontSize + 2) : 0), pt.y);\r\n\r\n\t\t\t\tpt.y += vm.bodyFontSize + vm.bodySpacing;\r\n\t\t\t}, this);\r\n\r\n\t\t\t// After Body\r\n\t\t\thelpers.each(vm.afterBody, function(afterBody) {\r\n\t\t\t\tctx.fillText(afterBody, pt.x, pt.y);\r\n\t\t\t\tpt.y += vm.bodyFontSize;\r\n\t\t\t});\r\n\r\n\t\t\tpt.y -= vm.bodySpacing; // Remove last body spacing\r\n\t\t},\r\n\t\tdrawFooter: function drawFooter(pt, vm, ctx, opacity) {\r\n\t\t\tif (vm.footer.length) {\r\n\t\t\t\tpt.y += vm.footerMarginTop;\r\n\r\n\t\t\t\tctx.textAlign = vm._footerAlign;\r\n\t\t\t\tctx.textBaseline = \"top\";\r\n\r\n\t\t\t\tvar footerColor = helpers.color(vm.footerColor);\r\n\t\t\t\tctx.fillStyle = footerColor.alpha(opacity * footerColor.alpha()).rgbString();\r\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n\t\t\t\thelpers.each(vm.footer, function(footer) {\r\n\t\t\t\t\tctx.fillText(footer, pt.x, pt.y);\r\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tdraw: function draw() {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tif (vm.opacity === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar caretPadding = vm.caretPadding;\r\n\t\t\tvar tooltipSize = this.getTooltipSize(vm);\r\n\t\t\tvar pt = {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\r\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\r\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n\t\t\tif (this._options.tooltips.enabled) {\r\n\t\t\t\t// Draw Background\r\n\t\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\r\n\t\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\r\n\t\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\r\n\t\t\t\tctx.fill();\r\n\r\n\t\t\t\t// Draw Caret\r\n\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity, caretPadding);\r\n\r\n\t\t\t\t// Draw Title, Body, and Footer\r\n\t\t\t\tpt.x += vm.xPadding;\r\n\t\t\t\tpt.y += vm.yPadding;\r\n\r\n\t\t\t\t// Titles\r\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\r\n\r\n\t\t\t\t// Body\r\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\r\n\r\n\t\t\t\t// Footer\r\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/core/core.tooltip.js\n ** module id = 150\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart, moment) {\r\n\r\n  var helpers = Chart.helpers,\r\n    globalOpts = Chart.defaults.global;\r\n\r\n  globalOpts.elements.arc = {\r\n    backgroundColor: globalOpts.defaultColor,\r\n    borderColor: \"#fff\",\r\n    borderWidth: 2\r\n  };\r\n\r\n  Chart.elements.Arc = Chart.Element.extend({\r\n    inLabelRange: function(mouseX) {\r\n      var vm = this._view;\r\n\r\n      if (vm) {\r\n        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    inRange: function(chartX, chartY) {\r\n      var vm = this._view;\r\n\r\n      if (vm) {\r\n        var pointRelativePosition = helpers.getAngleFromPoint(vm, {\r\n            x: chartX,\r\n            y: chartY\r\n          }),\r\n          angle = pointRelativePosition.angle,\r\n          distance = pointRelativePosition.distance;\r\n\r\n        //Sanitise angle range\r\n        var startAngle = vm.startAngle;\r\n        var endAngle = vm.endAngle;\r\n        while (endAngle < startAngle) {\r\n          endAngle += 2.0 * Math.PI;\r\n        }\r\n        while (angle > endAngle) {\r\n          angle -= 2.0 * Math.PI;\r\n        }\r\n        while (angle < startAngle) {\r\n          angle += 2.0 * Math.PI;\r\n        }\r\n\r\n        //Check if within the range of the open/close angle\r\n        var betweenAngles = (angle >= startAngle && angle <= endAngle),\r\n          withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n        return (betweenAngles && withinRadius);\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    tooltipPosition: function() {\r\n      var vm = this._view;\r\n\r\n      var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\r\n        rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n      return {\r\n        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n      };\r\n    },\r\n    draw: function() {\r\n\r\n      var ctx = this._chart.ctx,\r\n        vm = this._view,\r\n        sA = vm.startAngle,\r\n        eA = vm.endAngle;\r\n\r\n      ctx.beginPath();\r\n\r\n      ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n      ctx.closePath();\r\n      ctx.strokeStyle = vm.borderColor;\r\n      ctx.lineWidth = vm.borderWidth;\r\n\r\n      ctx.fillStyle = vm.backgroundColor;\r\n\r\n      ctx.fill();\r\n      ctx.lineJoin = 'bevel';\r\n\r\n      if (vm.borderWidth) {\r\n        ctx.stroke();\r\n      }\r\n    }\r\n  });\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/elements/element.arc.js\n ** module id = 151\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar globalDefaults = Chart.defaults.global;\r\n\r\n\tChart.defaults.global.elements.line = {\r\n\t\ttension: 0.4,\r\n\t\tbackgroundColor: globalDefaults.defaultColor,\r\n\t\tborderWidth: 3,\r\n\t\tborderColor: globalDefaults.defaultColor,\r\n\t\tborderCapStyle: 'butt',\r\n\t\tborderDash: [],\r\n\t\tborderDashOffset: 0.0,\r\n\t\tborderJoinStyle: 'miter',\r\n\t\tfill: true // do we fill in the area between the line and its base axis\r\n\t};\r\n\r\n\tChart.elements.Line = Chart.Element.extend({\r\n\t\tlineToNextPoint: function(previousPoint, point, nextPoint, skipHandler, previousSkipHandler) {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\r\n\t\t\tif (point._view.skip) {\r\n\t\t\t\tskipHandler.call(this, previousPoint, point, nextPoint);\r\n\t\t\t} else if (previousPoint._view.skip) {\r\n\t\t\t\tpreviousSkipHandler.call(this, previousPoint, point, nextPoint);\r\n\t\t\t} else if (point._view.tension === 0) {\r\n\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t} else {\r\n\t\t\t\t// Line between points\r\n\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\tpreviousPoint._view.controlPointNextX,\r\n\t\t\t\t\tpreviousPoint._view.controlPointNextY,\r\n\t\t\t\t\tpoint._view.controlPointPreviousX,\r\n\t\t\t\t\tpoint._view.controlPointPreviousY,\r\n\t\t\t\t\tpoint._view.x,\r\n\t\t\t\t\tpoint._view.y\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdraw: function() {\r\n\t\t\tvar _this = this;\r\n\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar first = this._children[0];\r\n\t\t\tvar last = this._children[this._children.length - 1];\r\n\r\n\t\t\tfunction loopBackToStart(drawLineToCenter) {\r\n\t\t\t\tif (!first._view.skip && !last._view.skip) {\r\n\t\t\t\t\t// Draw a bezier line from last to first\r\n\t\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\t\tlast._view.controlPointNextX,\r\n\t\t\t\t\t\tlast._view.controlPointNextY,\r\n\t\t\t\t\t\tfirst._view.controlPointPreviousX,\r\n\t\t\t\t\t\tfirst._view.controlPointPreviousY,\r\n\t\t\t\t\t\tfirst._view.x,\r\n\t\t\t\t\t\tfirst._view.y\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (drawLineToCenter) {\r\n\t\t\t\t\t// Go to center\r\n\t\t\t\t\tctx.lineTo(_this._view.scaleZero.x, _this._view.scaleZero.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.save();\r\n\r\n\t\t\t// If we had points and want to fill this line, do so.\r\n\t\t\tif (this._children.length > 0 && vm.fill) {\r\n\t\t\t\t// Draw the background first (so the border is always on top)\r\n\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\thelpers.each(this._children, function(point, index) {\r\n\t\t\t\t\tvar previous = helpers.previousItem(this._children, index);\r\n\t\t\t\t\tvar next = helpers.nextItem(this._children, index);\r\n\r\n\t\t\t\t\t// First point moves to it's starting position no matter what\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\tif (this._loop) {\r\n\t\t\t\t\t\t\tctx.moveTo(vm.scaleZero.x, vm.scaleZero.y);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.moveTo(point._view.x, vm.scaleZero);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (point._view.skip) {\r\n\t\t\t\t\t\t\tif (!this._loop) {\r\n\t\t\t\t\t\t\t\tctx.moveTo(next._view.x, this._view.scaleZero);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.lineToNextPoint(previous, point, next, function(previousPoint, point, nextPoint) {\r\n\t\t\t\t\t\t\tif (this._loop) {\r\n\t\t\t\t\t\t\t\t// Go to center\r\n\t\t\t\t\t\t\t\tctx.lineTo(this._view.scaleZero.x, this._view.scaleZero.y);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.lineTo(previousPoint._view.x, this._view.scaleZero);\r\n\t\t\t\t\t\t\t\tctx.moveTo(nextPoint._view.x, this._view.scaleZero);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, function(previousPoint, point) {\r\n\t\t\t\t\t\t\t// If we skipped the last point, draw a line to ourselves so that the fill is nice\r\n\t\t\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\t// For radial scales, loop back around to the first point\r\n\t\t\t\tif (this._loop) {\r\n\t\t\t\t\tloopBackToStart(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\r\n\t\t\t\t\tctx.lineTo(this._children[this._children.length - 1]._view.x, vm.scaleZero);\r\n\t\t\t\t\tctx.lineTo(this._children[0]._view.x, vm.scaleZero);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t}\r\n\r\n\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\r\n\t\t\t// Now draw the line between all the points with any borders\r\n\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n\t\t\t}\r\n\r\n\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\t\t\tctx.beginPath();\r\n\r\n\t\t\thelpers.each(this._children, function(point, index) {\r\n\t\t\t\tvar previous = helpers.previousItem(this._children, index);\r\n\t\t\t\tvar next = helpers.nextItem(this._children, index);\r\n\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tctx.moveTo(point._view.x, point._view.y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.lineToNextPoint(previous, point, next, function(previousPoint, point, nextPoint) {\r\n\t\t\t\t\t\tctx.moveTo(nextPoint._view.x, nextPoint._view.y);\r\n\t\t\t\t\t}, function(previousPoint, point) {\r\n\t\t\t\t\t\t// If we skipped the last point, move up to our point preventing a line from being drawn\r\n\t\t\t\t\t\tctx.moveTo(point._view.x, point._view.y);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\tif (this._loop && this._children.length > 0) {\r\n\t\t\t\tloopBackToStart();\r\n\t\t\t}\r\n\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t});\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/elements/element.line.js\n ** module id = 152\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tglobalOpts = Chart.defaults.global,\r\n\t\tdefaultColor = globalOpts.defaultColor;\r\n\r\n\tglobalOpts.elements.point = {\r\n\t\tradius: 3,\r\n\t\tpointStyle: 'circle',\r\n\t\tbackgroundColor: defaultColor,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: defaultColor,\r\n\t\t// Hover\r\n\t\thitRadius: 1,\r\n\t\thoverRadius: 4,\r\n\t\thoverBorderWidth: 1\r\n\t};\r\n\r\n\tChart.elements.Point = Chart.Element.extend({\r\n\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n\t\t},\r\n\t\tinLabelRange: function(mouseX) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y,\r\n\t\t\t\tpadding: vm.radius + vm.borderWidth\r\n\t\t\t};\r\n\t\t},\r\n\t\tdraw: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar pointStyle = vm.pointStyle;\r\n\t\t\tvar radius = vm.radius;\r\n\t\t\tvar x = vm.x;\r\n\t\t\tvar y = vm.y;\r\n\t\t\tvar type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n\t\t\tif (vm.skip) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof pointStyle === 'object') {\r\n\t\t\t\ttype = pointStyle.toString();\r\n\t\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n\t\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isNaN(radius) || radius <= 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\r\n\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\r\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n\t\t\tswitch (pointStyle) {\r\n\t\t\t// Default includes circle\r\n\t\t\tdefault:\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'triangle':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\r\n\t\t\t\theight = edgeLength * Math.sqrt(3) / 2;\r\n\t\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n\t\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n\t\t\t\tctx.lineTo(x, y - 2 * height / 3);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rect':\r\n\t\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\t\tctx.fillRect(x - size, y - size, 2 * size,  2 * size);\r\n\t\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rectRot':\r\n\t\t\t\tctx.translate(x, y);\r\n\t\t\t\tctx.rotate(Math.PI / 4);\r\n\t\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\t\tctx.fillRect(-size, -size, 2 * size, 2 * size);\r\n\t\t\t\tctx.strokeRect(-size, -size, 2 * size, 2 * size);\r\n\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'cross':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'crossRot':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'star':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'line':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dash':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x, y);\r\n\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t});\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/elements/element.point.js\n ** module id = 153\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tglobalOpts = Chart.defaults.global;\r\n\r\n\tglobalOpts.elements.rectangle = {\r\n\t\tbackgroundColor: globalOpts.defaultColor,\r\n\t\tborderWidth: 0,\r\n\t\tborderColor: globalOpts.defaultColor,\r\n\t\tborderSkipped: 'bottom'\r\n\t};\r\n\r\n\tChart.elements.Rectangle = Chart.Element.extend({\r\n\t\tdraw: function() {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tvar halfWidth = vm.width / 2,\r\n\t\t\t\tleftX = vm.x - halfWidth,\r\n\t\t\t\trightX = vm.x + halfWidth,\r\n\t\t\t\ttop = vm.base - (vm.base - vm.y),\r\n\t\t\t\thalfStroke = vm.borderWidth / 2;\r\n\r\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\tif (vm.borderWidth) {\r\n\t\t\t\tleftX += halfStroke;\r\n\t\t\t\trightX -= halfStroke;\r\n\t\t\t\ttop += halfStroke;\r\n\t\t\t}\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\tctx.lineWidth = vm.borderWidth;\r\n\r\n\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t// | 1 2 |\r\n\t\t\t// | 0 3 |\r\n\t\t\tvar corners = [\r\n\t\t\t\t[leftX, vm.base],\r\n\t\t\t\t[leftX, top],\r\n\t\t\t\t[rightX, top],\r\n\t\t\t\t[rightX, vm.base]\r\n\t\t\t];\r\n\r\n\t\t\t// Find first (starting) corner with fallback to 'bottom' \r\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\r\n\t\t\tif (startCorner === -1)\r\n\t\t\t\tstartCorner = 0;\r\n\r\n\t\t\tfunction cornerAt(index) {\r\n\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t}\r\n\r\n\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\r\n\t\t\tctx.fill();\r\n\t\t\tif (vm.borderWidth) {\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t},\r\n\t\theight: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm.base - vm.y;\r\n\t\t},\r\n\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? \r\n\t\t\t\t\t(vm.y < vm.base ? \r\n\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.y && mouseY <= vm.base) :\r\n\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.base && mouseY <= vm.y)) :\r\n\t\t\t\t\tfalse;\r\n\t\t},\r\n\t\tinLabelRange: function(mouseX) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? (mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) : false;\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/elements/element.rectangle.js\n ** module id = 154\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\t// Default config for a category scale\r\n\tvar defaultConfig = {\r\n\t\tposition: \"bottom\"\r\n\t};\r\n\r\n\tvar DatasetScale = Chart.Scale.extend({\r\n\t\t// Implement this so that \r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tthis.minIndex = 0;\r\n\t\t\tthis.maxIndex = this.chart.data.labels.length - 1;\r\n\t\t\tvar findIndex;\r\n\r\n\t\t\tif (this.options.ticks.min !== undefined) {\r\n\t\t\t\t// user specified min value\r\n\t\t\t\tfindIndex = helpers.indexOf(this.chart.data.labels, this.options.ticks.min);\r\n\t\t\t\tthis.minIndex = findIndex !== -1 ? findIndex : this.minIndex;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.ticks.max !== undefined) {\r\n\t\t\t\t// user specified max value\r\n\t\t\t\tfindIndex = helpers.indexOf(this.chart.data.labels, this.options.ticks.max);\r\n\t\t\t\tthis.maxIndex = findIndex !== -1 ? findIndex : this.maxIndex;\r\n\t\t\t}\r\n\r\n\t\t\tthis.min = this.chart.data.labels[this.minIndex];\r\n\t\t\tthis.max = this.chart.data.labels[this.maxIndex];\r\n\t\t},\r\n\r\n\t\tbuildTicks: function(index) {\r\n\t\t\t// If we are viewing some subset of labels, slice the original array\r\n\t\t\tthis.ticks = (this.minIndex === 0 && this.maxIndex === this.chart.data.labels.length - 1) ? this.chart.data.labels : this.chart.data.labels.slice(this.minIndex, this.maxIndex + 1);\r\n\t\t},\r\n\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn this.ticks[index];\r\n\t\t},\r\n\r\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t// 1 is added because we need the length but we have the indexes\r\n\t\t\tvar offsetAmt = Math.max((this.maxIndex + 1 - this.minIndex - ((this.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\tvar valueWidth = innerWidth / offsetAmt;\r\n\t\t\t\tvar widthOffset = (valueWidth * (index - this.minIndex)) + this.paddingLeft;\r\n\r\n\t\t\t\tif (this.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\t\twidthOffset += (valueWidth / 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.left + Math.round(widthOffset);\r\n\t\t\t} else {\r\n\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\tvar valueHeight = innerHeight / offsetAmt;\r\n\t\t\t\tvar heightOffset = (valueHeight * (index - this.minIndex)) + this.paddingTop;\r\n\r\n\t\t\t\tif (this.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\t\theightOffset += (valueHeight / 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.top + Math.round(heightOffset);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar value\r\n;\t\t\tvar offsetAmt = Math.max((this.ticks.length - ((this.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\tvar horz = this.isHorizontal();\r\n\t\t\tvar innerDimension = horz ? this.width - (this.paddingLeft + this.paddingRight) : this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\tvar valueDimension = innerDimension / offsetAmt;\r\n\r\n\t\t\tif (this.options.gridLines.offsetGridLines) {\r\n\t\t\t\tpixel -= (valueDimension / 2);\r\n\t\t\t}\r\n\t\t\tpixel -= horz ? this.paddingLeft : this.paddingTop;\r\n\r\n\t\t\tif (pixel <= 0) {\r\n\t\t\t\tvalue = 0;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t});\r\n\r\n\tChart.scaleService.registerScaleType(\"category\", DatasetScale, defaultConfig);\r\n\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/scales/scale.category.js\n ** module id = 155\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: \"left\",\r\n\t\tticks: {\r\n\t\t\tcallback: function(tickValue, index, ticks) {\r\n\t\t\t\t// If we have lots of ticks, don't use the ones\r\n\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n\t\t\t\tif (Math.abs(delta) > 1) {\r\n\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\r\n\t\t\t\t\t\t// not an integer\r\n\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\r\n\t\t\t\tvar tickString = '';\r\n\r\n\t\t\t\tif (tickValue !== 0) {\r\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\r\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttickString = '0'; // never show decimal places for 0\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tickString;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar LinearScale = Chart.Scale.extend({\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar opts = _this.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar chart = _this.chart;\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar isHorizontal = _this.isHorizontal();\r\n\r\n\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\treturn isHorizontal ? meta.xAxisID === _this.id : meta.yAxisID === _this.id;\r\n\t\t\t}\r\n\r\n\t\t\t// First Calculate the range\r\n\t\t\t_this.min = null;\r\n\t\t\t_this.max = null;\r\n\r\n\t\t\tif (opts.stacked) {\r\n\t\t\t\tvar valuesPerType = {};\r\n\t\t\t\tvar hasPositiveValues = false;\r\n\t\t\t\tvar hasNegativeValues = false;\r\n\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\r\n\t\t\t\t\t\tvaluesPerType[meta.type] = {\r\n\t\t\t\t\t\t\tpositiveValues: [],\r\n\t\t\t\t\t\t\tnegativeValues: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Store these per type\r\n\t\t\t\t\tvar positiveValues = valuesPerType[meta.type].positiveValues;\r\n\t\t\t\t\tvar negativeValues = valuesPerType[meta.type].negativeValues;\r\n\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +_this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\r\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\r\n\r\n\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\t\t\t\thasNegativeValues = true;\r\n\t\t\t\t\t\t\t\t\tnegativeValues[index] += value;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\thasPositiveValues = true;\r\n\t\t\t\t\t\t\t\t\tpositiveValues[index] += value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\r\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n\t\t\t\t\tvar minVal = helpers.min(values);\r\n\t\t\t\t\tvar maxVal = helpers.max(values);\r\n\t\t\t\t\t_this.min = _this.min === null ? minVal : Math.min(_this.min, minVal);\r\n\t\t\t\t\t_this.max = _this.max === null ? maxVal : Math.max(_this.max, maxVal);\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +_this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (_this.min === null) {\r\n\t\t\t\t\t\t\t\t_this.min = value;\r\n\t\t\t\t\t\t\t} else if (value < _this.min) {\r\n\t\t\t\t\t\t\t\t_this.min = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (_this.max === null) {\r\n\t\t\t\t\t\t\t\t_this.max = value;\r\n\t\t\t\t\t\t\t} else if (value > _this.max) {\r\n\t\t\t\t\t\t\t\t_this.max = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\r\n\t\t\t// axis, they can manually override it\r\n\t\t\tif (tickOpts.beginAtZero) {\r\n\t\t\t\tvar minSign = helpers.sign(_this.min);\r\n\t\t\t\tvar maxSign = helpers.sign(_this.max);\r\n\r\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\r\n\t\t\t\t\t// move the top up to 0\r\n\t\t\t\t\t_this.max = 0;\r\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\r\n\t\t\t\t\t// move the botttom down to 0\r\n\t\t\t\t\t_this.min = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.min !== undefined) {\r\n\t\t\t\t_this.min = tickOpts.min;\r\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\r\n\t\t\t\t_this.min = Math.min(_this.min, tickOpts.suggestedMin);\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.max !== undefined) {\r\n\t\t\t\t_this.max = tickOpts.max;\r\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\r\n\t\t\t\t_this.max = Math.max(_this.max, tickOpts.suggestedMax);\r\n\t\t\t}\r\n\r\n\t\t\tif (_this.min === _this.max) {\r\n\t\t\t\t_this.max++;\r\n\r\n\t\t\t\tif (!tickOpts.beginAtZero) {\r\n\t\t\t\t\t_this.min--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar opts = _this.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\t\tvar isHorizontal = _this.isHorizontal();\r\n\r\n\t\t\tvar ticks = _this.ticks = [];\r\n\r\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t// the graph\r\n\r\n\t\t\tvar maxTicks;\r\n\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(_this.width / 50));\r\n\t\t\t} else {\r\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\r\n\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(_this.height / (2 * tickFontSize)));\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure we always have at least 2 ticks\r\n\t\t\tmaxTicks = Math.max(2, maxTicks);\r\n\r\n\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n\t\t\t// for details.\r\n\r\n\t\t\tvar spacing;\r\n\t\t\tvar fixedStepSizeSet = (tickOpts.fixedStepSize && tickOpts.fixedStepSize > 0) || (tickOpts.stepSize && tickOpts.stepSize > 0);\r\n\t\t\tif (fixedStepSizeSet) {\r\n\t\t\t\tspacing = getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize);\r\n\t\t\t} else {\r\n\t\t\t\tvar niceRange = helpers.niceNum(_this.max - _this.min, false);\r\n\t\t\t\tspacing = helpers.niceNum(niceRange / (maxTicks - 1), true);\r\n\t\t\t}\r\n\t\t\tvar niceMin = Math.floor(_this.min / spacing) * spacing;\r\n\t\t\tvar niceMax = Math.ceil(_this.max / spacing) * spacing;\r\n\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\r\n\r\n\t\t\t// If very close to our rounded value, use it.\r\n\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n\t\t\t\tnumSpaces = Math.round(numSpaces);\r\n\t\t\t} else {\r\n\t\t\t\tnumSpaces = Math.ceil(numSpaces);\r\n\t\t\t}\r\n\r\n\t\t\t// Put the values into the ticks array\r\n\t\t\tticks.push(tickOpts.min !== undefined ? tickOpts.min : niceMin);\r\n\t\t\tfor (var j = 1; j < numSpaces; ++j) {\r\n\t\t\t\tticks.push(niceMin + (j * spacing));\r\n\t\t\t}\r\n\t\t\tticks.push(tickOpts.max !== undefined ? tickOpts.max : niceMax);\r\n\r\n\t\t\tif (!isHorizontal) {\r\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\tticks.reverse();\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\t_this.max = helpers.max(ticks);\r\n\t\t\t_this.min = helpers.min(ticks);\r\n\r\n\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\tticks.reverse();\r\n\r\n\t\t\t\t_this.start = _this.max;\r\n\t\t\t\t_this.end = _this.min;\r\n\t\t\t} else {\r\n\t\t\t\t_this.start = _this.min;\r\n\t\t\t\t_this.end = _this.max;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar _this = this;\r\n\t\t\t_this.ticksAsNumbers = _this.ticks.slice();\r\n\t\t\t_this.zeroLineIndex = _this.ticks.indexOf(0);\r\n\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(_this);\r\n\t\t},\r\n\t\t// Utils\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t// This must be called after fit has been run so that\r\n\t\t\t//      this.left, this.top, this.right, and this.bottom have been defined\r\n\t\t\tvar _this = this;\r\n\t\t\tvar paddingLeft = _this.paddingLeft;\r\n\t\t\tvar paddingBottom = _this.paddingBottom;\r\n\t\t\tvar start = _this.start;\r\n\r\n\t\t\tvar rightValue = +_this.getRightValue(value);\r\n\t\t\tvar pixel;\r\n\t\t\tvar innerDimension;\r\n\t\t\tvar range = _this.end - start;\r\n\r\n\t\t\tif (_this.isHorizontal()) {\r\n\t\t\t\tinnerDimension = _this.width - (paddingLeft + _this.paddingRight);\r\n\t\t\t\tpixel = _this.left + (innerDimension / range * (rightValue - start));\r\n\t\t\t\treturn Math.round(pixel + paddingLeft);\r\n\t\t\t} else {\r\n\t\t\t\tinnerDimension = _this.height - (_this.paddingTop + paddingBottom);\r\n\t\t\t\tpixel = (_this.bottom - paddingBottom) - (innerDimension / range * (rightValue - start));\r\n\t\t\t\treturn Math.round(pixel);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar isHorizontal = _this.isHorizontal();\r\n\t\t\tvar paddingLeft = _this.paddingLeft;\r\n\t\t\tvar paddingBottom = _this.paddingBottom;\r\n\t\t\tvar innerDimension = isHorizontal ? _this.width - (paddingLeft + _this.paddingRight) : _this.height - (_this.paddingTop + paddingBottom);\r\n\t\t\tvar offset = (isHorizontal ? pixel - _this.left - paddingLeft : _this.bottom - paddingBottom - pixel) / innerDimension;\r\n\t\t\treturn _this.start + ((_this.end - _this.start) * offset);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index], null, null, includeOffset);\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"linear\", LinearScale, defaultConfig);\r\n\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/scales/scale.linear.js\n ** module id = 156\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: \"left\",\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\tcallback: function(value, index, arr) {\r\n\t\t\t\tvar remain = value / (Math.pow(10, Math.floor(helpers.log10(value))));\r\n\r\n\t\t\t\tif (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === arr.length - 1) {\r\n\t\t\t\t\treturn value.toExponential();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar LogarithmicScale = Chart.Scale.extend({\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar opts = _this.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar chart = _this.chart;\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\t\tvar isHorizontal = _this.isHorizontal();\r\n\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\treturn isHorizontal ? meta.xAxisID === _this.id : meta.yAxisID === _this.id;\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate Range\r\n\t\t\t_this.min = null;\r\n\t\t\t_this.max = null;\r\n\r\n\t\t\tif (opts.stacked) {\r\n\t\t\t\tvar valuesPerType = {};\r\n\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\r\n\t\t\t\t\t\t\tvaluesPerType[meta.type] = [];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar values = valuesPerType[meta.type];\r\n\t\t\t\t\t\t\tvar value = +_this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\r\n\r\n\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\tvalues[index] = 100;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\r\n\t\t\t\t\t\t\t\tvalues[index] += value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\r\n\t\t\t\t\tvar minVal = helpers.min(valuesForType);\r\n\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\r\n\t\t\t\t\t_this.min = _this.min === null ? minVal : Math.min(_this.min, minVal);\r\n\t\t\t\t\t_this.max = _this.max === null ? maxVal : Math.max(_this.max, maxVal);\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +_this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (_this.min === null) {\r\n\t\t\t\t\t\t\t\t_this.min = value;\r\n\t\t\t\t\t\t\t} else if (value < _this.min) {\r\n\t\t\t\t\t\t\t\t_this.min = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (_this.max === null) {\r\n\t\t\t\t\t\t\t\t_this.max = value;\r\n\t\t\t\t\t\t\t} else if (value > _this.max) {\r\n\t\t\t\t\t\t\t\t_this.max = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t_this.min = getValueOrDefault(tickOpts.min, _this.min);\r\n\t\t\t_this.max = getValueOrDefault(tickOpts.max, _this.max);\r\n\r\n\t\t\tif (_this.min === _this.max) {\r\n\t\t\t\tif (_this.min !== 0 && _this.min !== null) {\r\n\t\t\t\t\t_this.min = Math.pow(10, Math.floor(helpers.log10(_this.min)) - 1);\r\n\t\t\t\t\t_this.max = Math.pow(10, Math.floor(helpers.log10(_this.max)) + 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_this.min = 1;\r\n\t\t\t\t\t_this.max = 10;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar opts = _this.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\t\t// Reset the ticks array. Later on, we will draw a grid line at these positions\r\n\t\t\t// The array simply contains the numerical value of the spots where ticks will be\r\n\t\t\tvar ticks = _this.ticks = [];\r\n\r\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t// the graph\r\n\r\n\t\t\tvar tickVal = getValueOrDefault(tickOpts.min, Math.pow(10, Math.floor(helpers.log10(_this.min))));\r\n\r\n\t\t\twhile (tickVal < _this.max) {\r\n\t\t\t\tticks.push(tickVal);\r\n\r\n\t\t\t\tvar exp = Math.floor(helpers.log10(tickVal));\r\n\t\t\t\tvar significand = Math.floor(tickVal / Math.pow(10, exp)) + 1;\r\n\r\n\t\t\t\tif (significand === 10) {\r\n\t\t\t\t\tsignificand = 1;\r\n\t\t\t\t\t++exp;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttickVal = significand * Math.pow(10, exp);\r\n\t\t\t}\r\n\r\n\t\t\tvar lastTick = getValueOrDefault(tickOpts.max, tickVal);\r\n\t\t\tticks.push(lastTick);\r\n\r\n\t\t\tif (!_this.isHorizontal()) {\r\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\tticks.reverse();\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\t_this.max = helpers.max(ticks);\r\n\t\t\t_this.min = helpers.min(ticks);\r\n\r\n\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\tticks.reverse();\r\n\r\n\t\t\t\t_this.start = _this.max;\r\n\t\t\t\t_this.end = _this.min;\r\n\t\t\t} else {\r\n\t\t\t\t_this.start = _this.min;\r\n\t\t\t\t_this.end = _this.max;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tthis.tickValues = this.ticks.slice();\r\n\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\r\n\t\t},\r\n\t\t// Get the correct tooltip label\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.tickValues[index], null, null, includeOffset);\r\n\t\t},\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar innerDimension;\r\n\t\t\tvar pixel;\r\n\r\n\t\t\tvar start = _this.start;\r\n\t\t\tvar newVal = +_this.getRightValue(value);\r\n\t\t\tvar range = helpers.log10(_this.end) - helpers.log10(start);\r\n\t\t\tvar paddingTop = _this.paddingTop;\r\n\t\t\tvar paddingBottom = _this.paddingBottom;\r\n\t\t\tvar paddingLeft = _this.paddingLeft;\r\n\r\n\t\t\tif (_this.isHorizontal()) {\r\n\r\n\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\tpixel = _this.left + paddingLeft;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinnerDimension = _this.width - (paddingLeft + _this.paddingRight);\r\n\t\t\t\t\tpixel = _this.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t\tpixel += paddingLeft;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Bottom - top since pixels increase downard on a screen\r\n\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\tpixel = _this.top + paddingTop;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinnerDimension = _this.height - (paddingTop + paddingBottom);\r\n\t\t\t\t\tpixel = (_this.bottom - paddingBottom) - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn pixel;\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar offset;\r\n\t\t\tvar range = helpers.log10(_this.end) - helpers.log10(_this.start);\r\n\t\t\tvar value;\r\n\t\t\tvar innerDimension;\r\n\r\n\t\t\tif (_this.isHorizontal()) {\r\n\t\t\t\tinnerDimension = _this.width - (_this.paddingLeft + _this.paddingRight);\r\n\t\t\t\tvalue = _this.start * Math.pow(10, (pixel - _this.left - _this.paddingLeft) * range / innerDimension);\r\n\t\t\t} else {\r\n\t\t\t\tinnerDimension = _this.height - (_this.paddingTop + _this.paddingBottom);\r\n\t\t\t\tvalue = Math.pow(10, (_this.bottom - _this.paddingBottom - pixel) * range / innerDimension) / _this.start;\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"logarithmic\", LogarithmicScale, defaultConfig);\r\n\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/scales/scale.logarithmic.js\n ** module id = 157\n ** module chunks = 1 2\n **/","\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar globalDefaults = Chart.defaults.global;\r\n\r\n\tvar defaultConfig = {\r\n\t\tdisplay: true,\r\n\r\n\t\t//Boolean - Whether to animate scaling the chart from the centre\r\n\t\tanimate: true,\r\n\t\tlineArc: false,\r\n\t\tposition: \"chartArea\",\r\n\r\n\t\tangleLines: {\r\n\t\t\tdisplay: true,\r\n\t\t\tcolor: \"rgba(0, 0, 0, 0.1)\",\r\n\t\t\tlineWidth: 1\r\n\t\t},\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\t//Boolean - Show a backdrop to the scale label\r\n\t\t\tshowLabelBackdrop: true,\r\n\r\n\t\t\t//String - The colour of the label backdrop\r\n\t\t\tbackdropColor: \"rgba(255,255,255,0.75)\",\r\n\r\n\t\t\t//Number - The backdrop padding above & below the label in pixels\r\n\t\t\tbackdropPaddingY: 2,\r\n\r\n\t\t\t//Number - The backdrop padding to the side of the label in pixels\r\n\t\t\tbackdropPaddingX: 2\r\n\t\t},\r\n\r\n\t\tpointLabels: {\r\n\t\t\t//Number - Point label font size in pixels\r\n\t\t\tfontSize: 10,\r\n\r\n\t\t\t//Function - Used to convert point labels\r\n\t\t\tcallback: function(label) {\r\n\t\t\t\treturn label;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar LinearRadialScale = Chart.Scale.extend({\r\n\t\tgetValueCount: function() {\r\n\t\t\treturn this.chart.data.labels.length;\r\n\t\t},\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar options = this.options;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tthis.width = this.maxWidth;\r\n\t\t\tthis.height = this.maxHeight;\r\n\t\t\tthis.xCenter = Math.round(this.width / 2);\r\n\t\t\tthis.yCenter = Math.round(this.height / 2);\r\n\r\n\t\t\tvar minSize = helpers.min([this.height, this.width]);\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(options.ticks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tthis.drawingArea = (options.display) ? (minSize / 2) - (tickFontSize / 2 + options.ticks.backdropPaddingY) : (minSize / 2);\r\n\t\t},\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tthis.min = null;\r\n\t\t\tthis.max = null;\r\n\r\n\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (this.chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = this.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\tvar value = +this.getRightValue(rawValue);\r\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.min === null) {\r\n\t\t\t\t\t\t\tthis.min = value;\r\n\t\t\t\t\t\t} else if (value < this.min) {\r\n\t\t\t\t\t\t\tthis.min = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.max === null) {\r\n\t\t\t\t\t\t\tthis.max = value;\r\n\t\t\t\t\t\t} else if (value > this.max) {\r\n\t\t\t\t\t\t\tthis.max = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\r\n\t\t\t// axis, they can manually override it\r\n\t\t\tif (this.options.ticks.beginAtZero) {\r\n\t\t\t\tvar minSign = helpers.sign(this.min);\r\n\t\t\t\tvar maxSign = helpers.sign(this.max);\r\n\r\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\r\n\t\t\t\t\t// move the top up to 0\r\n\t\t\t\t\tthis.max = 0;\r\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\r\n\t\t\t\t\t// move the botttom down to 0\r\n\t\t\t\t\tthis.min = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.ticks.min !== undefined) {\r\n\t\t\t\tthis.min = this.options.ticks.min;\r\n\t\t\t} else if (this.options.ticks.suggestedMin !== undefined) {\r\n\t\t\t\tthis.min = Math.min(this.min, this.options.ticks.suggestedMin);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.ticks.max !== undefined) {\r\n\t\t\t\tthis.max = this.options.ticks.max;\r\n\t\t\t} else if (this.options.ticks.suggestedMax !== undefined) {\r\n\t\t\t\tthis.max = Math.max(this.max, this.options.ticks.suggestedMax);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.min === this.max) {\r\n\t\t\t\tthis.min--;\r\n\t\t\t\tthis.max++;\r\n\t\t\t}\r\n\t\t},\r\n\t\tbuildTicks: function() {\r\n\r\n\r\n\t\t\tthis.ticks = [];\r\n\r\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t// the graph\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar maxTicks = Math.min(this.options.ticks.maxTicksLimit ? this.options.ticks.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\r\n\t\t\tmaxTicks = Math.max(2, maxTicks); // Make sure we always have at least 2 ticks\r\n\r\n\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n\t\t\t// for details.\r\n\r\n\t\t\tvar niceRange = helpers.niceNum(this.max - this.min, false);\r\n\t\t\tvar spacing = helpers.niceNum(niceRange / (maxTicks - 1), true);\r\n\t\t\tvar niceMin = Math.floor(this.min / spacing) * spacing;\r\n\t\t\tvar niceMax = Math.ceil(this.max / spacing) * spacing;\r\n\r\n\t\t\tvar numSpaces = Math.ceil((niceMax - niceMin) / spacing);\r\n\r\n\t\t\t// Put the values into the ticks array\r\n\t\t\tthis.ticks.push(this.options.ticks.min !== undefined ? this.options.ticks.min : niceMin);\r\n\t\t\tfor (var j = 1; j < numSpaces; ++j) {\r\n\t\t\t\tthis.ticks.push(niceMin + (j * spacing));\r\n\t\t\t}\r\n\t\t\tthis.ticks.push(this.options.ticks.max !== undefined ? this.options.ticks.max : niceMax);\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tthis.max = helpers.max(this.ticks);\r\n\t\t\tthis.min = helpers.min(this.ticks);\r\n\r\n\t\t\tif (this.options.ticks.reverse) {\r\n\t\t\t\tthis.ticks.reverse();\r\n\r\n\t\t\t\tthis.start = this.max;\r\n\t\t\t\tthis.end = this.min;\r\n\t\t\t} else {\r\n\t\t\t\tthis.start = this.min;\r\n\t\t\t\tthis.end = this.max;\r\n\t\t\t}\r\n\r\n\t\t\tthis.zeroLineIndex = this.ticks.indexOf(0);\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\r\n\r\n\t\t\t// Point labels\r\n\t\t\tthis.pointLabels = this.chart.data.labels.map(this.options.pointLabels.callback, this);\r\n\t\t},\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tfit: function() {\r\n\t\t\t/*\r\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\r\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\r\n\t\t\t *\r\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\r\n\t\t\t *\r\n\t\t\t * Solution:\r\n\t\t\t *\r\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\r\n\t\t\t * at each index we check if the text overlaps.\r\n\t\t\t *\r\n\t\t\t * Where it does, we store that angle and that index.\r\n\t\t\t *\r\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\r\n\t\t\t * from the shape radius to move the point inwards by that x.\r\n\t\t\t *\r\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\r\n\t\t\t * along with labels.\r\n\t\t\t *\r\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\r\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\r\n\t\t\t *\r\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\r\n\t\t\t * and position it in the most space efficient manner\r\n\t\t\t *\r\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\r\n\t\t\t */\r\n\r\n\t\t\tvar pointLabels = this.options.pointLabels;\r\n\t\t\tvar pointLabelFontSize = helpers.getValueOrDefault(pointLabels.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar pointLabeFontStyle = helpers.getValueOrDefault(pointLabels.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar pointLabeFontFamily = helpers.getValueOrDefault(pointLabels.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\r\n\r\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\r\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\r\n\t\t\tvar largestPossibleRadius = helpers.min([(this.height / 2 - pointLabelFontSize - 5), this.width / 2]),\r\n\t\t\t\tpointPosition,\r\n\t\t\t\ti,\r\n\t\t\t\ttextWidth,\r\n\t\t\t\thalfTextWidth,\r\n\t\t\t\tfurthestRight = this.width,\r\n\t\t\t\tfurthestRightIndex,\r\n\t\t\t\tfurthestRightAngle,\r\n\t\t\t\tfurthestLeft = 0,\r\n\t\t\t\tfurthestLeftIndex,\r\n\t\t\t\tfurthestLeftAngle,\r\n\t\t\t\txProtrusionLeft,\r\n\t\t\t\txProtrusionRight,\r\n\t\t\t\tradiusReductionRight,\r\n\t\t\t\tradiusReductionLeft,\r\n\t\t\t\tmaxWidthRadius;\r\n\t\t\tthis.ctx.font = pointLabeFont;\r\n\r\n\t\t\tfor (i = 0; i < this.getValueCount(); i++) {\r\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\r\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\r\n\t\t\t\ttextWidth = this.ctx.measureText(this.pointLabels[i] ? this.pointLabels[i] : '').width + 5;\r\n\t\t\t\tif (i === 0 || i === this.getValueCount() / 2) {\r\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\r\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\r\n\t\t\t\t\t// w/left and right text sizes\r\n\t\t\t\t\thalfTextWidth = textWidth / 2;\r\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\r\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\r\n\t\t\t\t\t\tfurthestRightIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\r\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\r\n\t\t\t\t\t\tfurthestLeftIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (i < this.getValueCount() / 2) {\r\n\t\t\t\t\t// Less than half the values means we'll left align the text\r\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\r\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\r\n\t\t\t\t\t\tfurthestRightIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (i > this.getValueCount() / 2) {\r\n\t\t\t\t\t// More than half the values means we'll right align the text\r\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\r\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\r\n\t\t\t\t\t\tfurthestLeftIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\txProtrusionLeft = furthestLeft;\r\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\r\n\r\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\r\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\r\n\r\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI / 2);\r\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI / 2);\r\n\r\n\t\t\t// Ensure we actually need to reduce the size of the chart\r\n\t\t\tradiusReductionRight = (helpers.isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\r\n\t\t\tradiusReductionLeft = (helpers.isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\r\n\r\n\t\t\tthis.drawingArea = Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2);\r\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\r\n\t\t},\r\n\t\tsetCenterPoint: function(leftMovement, rightMovement) {\r\n\r\n\t\t\tvar maxRight = this.width - rightMovement - this.drawingArea,\r\n\t\t\t\tmaxLeft = leftMovement + this.drawingArea;\r\n\r\n\t\t\tthis.xCenter = Math.round(((maxLeft + maxRight) / 2) + this.left);\r\n\t\t\t// Always vertically in the centre as the text height doesn't change\r\n\t\t\tthis.yCenter = Math.round((this.height / 2) + this.top);\r\n\t\t},\r\n\r\n\t\tgetIndexAngle: function(index) {\r\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.getValueCount();\r\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\r\n\r\n\t\t\treturn index * angleMultiplier - (Math.PI / 2);\r\n\t\t},\r\n\t\tgetDistanceFromCenterForValue: function(value) {\r\n\t\t\tif (value === null) {\r\n\t\t\t\treturn 0; // null always in center\r\n\t\t\t}\r\n\r\n\t\t\t// Take into account half font size + the yPadding of the top value\r\n\t\t\tvar scalingFactor = this.drawingArea / (this.max - this.min);\r\n\t\t\tif (this.options.reverse) {\r\n\t\t\t\treturn (this.max - value) * scalingFactor;\r\n\t\t\t} else {\r\n\t\t\t\treturn (value - this.min) * scalingFactor;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPointPosition: function(index, distanceFromCenter) {\r\n\t\t\tvar thisAngle = this.getIndexAngle(index);\r\n\t\t\treturn {\r\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\r\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\r\n\t\t\t};\r\n\t\t},\r\n\t\tgetPointPositionForValue: function(index, value) {\r\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n\t\t},\r\n\r\n\t\tgetBasePosition: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar min = me.min;\r\n\t\t\tvar max = me.max;\r\n\r\n\t\t\treturn me.getPointPositionForValue(0,\r\n\t\t\t\tme.beginAtZero? 0:\r\n\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t0);\r\n\t\t},\r\n\r\n\t\tdraw: function() {\r\n\t\t\tif (this.options.display) {\r\n\t\t\t\tvar ctx = this.ctx;\r\n\t\t\t\thelpers.each(this.ticks, function(label, index) {\r\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\r\n\t\t\t\t\tif (index > 0 || this.options.reverse) {\r\n\t\t\t\t\t\tvar yCenterOffset = this.getDistanceFromCenterForValue(this.ticks[index]);\r\n\t\t\t\t\t\tvar yHeight = this.yCenter - yCenterOffset;\r\n\r\n\t\t\t\t\t\t// Draw circular lines around the scale\r\n\t\t\t\t\t\tif (this.options.gridLines.display) {\r\n\t\t\t\t\t\t\tctx.strokeStyle = this.options.gridLines.color;\r\n\t\t\t\t\t\t\tctx.lineWidth = this.options.gridLines.lineWidth;\r\n\r\n\t\t\t\t\t\t\tif (this.options.lineArc) {\r\n\t\t\t\t\t\t\t\t// Draw circular arcs between the points\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI * 2);\r\n\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Draw straight lines connecting each index\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tfor (var i = 0; i < this.getValueCount(); i++) {\r\n\t\t\t\t\t\t\t\t\tvar pointPosition = this.getPointPosition(i, this.getDistanceFromCenterForValue(this.ticks[index]));\r\n\t\t\t\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.options.ticks.display) {\r\n\t\t\t\t\t\t\tvar tickFontColor = helpers.getValueOrDefault(this.options.ticks.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(this.options.ticks.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(this.options.ticks.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\r\n\r\n\t\t\t\t\t\t\tif (this.options.ticks.showLabelBackdrop) {\r\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\r\n\t\t\t\t\t\t\t\tctx.fillStyle = this.options.ticks.backdropColor;\r\n\t\t\t\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\t\t\t\tthis.xCenter - labelWidth / 2 - this.options.ticks.backdropPaddingX,\r\n\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - this.options.ticks.backdropPaddingY,\r\n\t\t\t\t\t\t\t\t\tlabelWidth + this.options.ticks.backdropPaddingX * 2,\r\n\t\t\t\t\t\t\t\t\ttickFontSize + this.options.ticks.backdropPaddingY * 2\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\r\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\r\n\t\t\t\t\t\t\tctx.fillText(label, this.xCenter, yHeight);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\tif (!this.options.lineArc) {\r\n\t\t\t\t\tctx.lineWidth = this.options.angleLines.lineWidth;\r\n\t\t\t\t\tctx.strokeStyle = this.options.angleLines.color;\r\n\r\n\t\t\t\t\tfor (var i = this.getValueCount() - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tif (this.options.angleLines.display) {\r\n\t\t\t\t\t\t\tvar outerPosition = this.getPointPosition(i, this.getDistanceFromCenterForValue(this.options.reverse ? this.min : this.max));\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\r\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\r\n\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Extra 3px out for some label spacing\r\n\t\t\t\t\t\tvar pointLabelPosition = this.getPointPosition(i, this.getDistanceFromCenterForValue(this.options.reverse ? this.min : this.max) + 5);\r\n\r\n\t\t\t\t\t\tvar pointLabelFontColor = helpers.getValueOrDefault(this.options.pointLabels.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\t\t\tvar pointLabelFontSize = helpers.getValueOrDefault(this.options.pointLabels.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\t\t\tvar pointLabeFontStyle = helpers.getValueOrDefault(this.options.pointLabels.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\t\t\tvar pointLabeFontFamily = helpers.getValueOrDefault(this.options.pointLabels.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\r\n\r\n\t\t\t\t\t\tctx.font = pointLabeFont;\r\n\t\t\t\t\t\tctx.fillStyle = pointLabelFontColor;\r\n\r\n\t\t\t\t\t\tvar labelsCount = this.pointLabels.length,\r\n\t\t\t\t\t\t\thalfLabelsCount = this.pointLabels.length / 2,\r\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount / 2,\r\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\r\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t} else if (i === halfLabelsCount) {\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t} else if (i < halfLabelsCount) {\r\n\t\t\t\t\t\t\tctx.textAlign = 'left';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.textAlign = 'right';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\r\n\t\t\t\t\t\tif (exactQuarter) {\r\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\t\t\t} else if (upperHalf) {\r\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tctx.fillText(this.pointLabels[i] ? this.pointLabels[i] : '', pointLabelPosition.x, pointLabelPosition.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"radialLinear\", LinearRadialScale, defaultConfig);\r\n\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/scales/scale.radialLinear.js\n ** module id = 158\n ** module chunks = 1 2\n **/","/*global window: false */\r\n\"use strict\";\r\n\r\nvar moment = require('moment');\r\nmoment = typeof(moment) === 'function' ? moment : window.moment;\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar time = {\r\n\t\tunits: [{\r\n\t\t\tname: 'millisecond',\r\n\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\r\n\t\t}, {\r\n\t\t\tname: 'second',\r\n\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t}, {\r\n\t\t\tname: 'minute',\r\n\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t}, {\r\n\t\t\tname: 'hour',\r\n\t\t\tsteps: [1, 2, 3, 6, 12]\r\n\t\t}, {\r\n\t\t\tname: 'day',\r\n\t\t\tsteps: [1, 2, 5]\r\n\t\t}, {\r\n\t\t\tname: 'week',\r\n\t\t\tmaxStep: 4\r\n\t\t}, {\r\n\t\t\tname: 'month',\r\n\t\t\tmaxStep: 3\r\n\t\t}, {\r\n\t\t\tname: 'quarter',\r\n\t\t\tmaxStep: 4\r\n\t\t}, {\r\n\t\t\tname: 'year',\r\n\t\t\tmaxStep: false\r\n\t\t}]\r\n\t};\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: \"bottom\",\r\n\r\n\t\ttime: {\r\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\r\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\r\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\r\n\t\t\tround: false, // none, or override with week, month, year, etc.\r\n\t\t\tdisplayFormat: false, // DEPRECATED\r\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\r\n\r\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\r\n\t\t\tdisplayFormats: {\r\n\t\t\t\t'millisecond': 'h:mm:ss.SSS a', // 11:20:01.123 AM,\r\n\t\t\t\t'second': 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\t'minute': 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\t'hour': 'MMM D, hA', // Sept 4, 5PM\r\n\t\t\t\t'day': 'll', // Sep 4 2015\r\n\t\t\t\t'week': 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\r\n\t\t\t\t'month': 'MMM YYYY', // Sept 2015\r\n\t\t\t\t'quarter': '[Q]Q - YYYY', // Q3\r\n\t\t\t\t'year': 'YYYY' // 2015\r\n\t\t\t}\r\n\t\t},\r\n\t\tticks: {\r\n\t\t\tautoSkip: false\r\n\t\t}\r\n\t};\r\n\r\n\tvar TimeScale = Chart.Scale.extend({\r\n\t\tinitialize: function() {\r\n\t\t\tif (!moment) {\r\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\r\n\t\t\t}\r\n\r\n\t\t\tChart.Scale.prototype.initialize.call(this);\r\n\t\t},\r\n\t\tgetLabelMoment: function(datasetIndex, index) {\r\n\t\t\treturn this.labelMoments[datasetIndex][index];\r\n\t\t},\r\n\t\tgetMomentStartOf: function(tick) {\r\n\t\t\tif (this.options.time.unit === 'week' && this.options.time.isoWeekday !== false) {\r\n\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(this.options.time.isoWeekday);\r\n\t\t\t} else {\r\n\t\t\t\treturn tick.clone().startOf(this.tickUnit);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tthis.labelMoments = [];\r\n\r\n\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\r\n\t\t\t// these\r\n\t\t\tvar scaleLabelMoments = [];\r\n\t\t\tif (this.chart.data.labels && this.chart.data.labels.length > 0) {\r\n\t\t\t\thelpers.each(this.chart.data.labels, function(label, index) {\r\n\t\t\t\t\tvar labelMoment = this.parseTime(label);\r\n\r\n\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\tif (this.options.time.round) {\r\n\t\t\t\t\t\t\tlabelMoment.startOf(this.options.time.round);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\tthis.firstTick = moment.min.call(this, scaleLabelMoments);\r\n\t\t\t\tthis.lastTick = moment.max.call(this, scaleLabelMoments);\r\n\t\t\t} else {\r\n\t\t\t\tthis.firstTick = null;\r\n\t\t\t\tthis.lastTick = null;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar momentsForDataset = [];\r\n\t\t\t\tvar datasetVisible = this.chart.isDatasetVisible(datasetIndex);\r\n\r\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\r\n\t\t\t\t\thelpers.each(dataset.data, function(value, index) {\r\n\t\t\t\t\t\tvar labelMoment = this.parseTime(this.getRightValue(value));\r\n\r\n\t\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\t\tif (this.options.time.round) {\r\n\t\t\t\t\t\t\t\tlabelMoment.startOf(this.options.time.round);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\r\n\r\n\t\t\t\t\t\t\tif (datasetVisible) {\r\n\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\r\n\t\t\t\t\t\t\t\tthis.firstTick = this.firstTick !== null ? moment.min(this.firstTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t\tthis.lastTick = this.lastTick !== null ? moment.max(this.lastTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// We have no labels. Use the ones from the scale\r\n\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.labelMoments.push(momentsForDataset);\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Set these after we've done all the data\r\n\t\t\tif (this.options.time.min) {\r\n\t\t\t\tthis.firstTick = this.parseTime(this.options.time.min);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.time.max) {\r\n\t\t\t\tthis.lastTick = this.parseTime(this.options.time.max);\r\n\t\t\t}\r\n\r\n\t\t\t// We will modify these, so clone for later\r\n\t\t\tthis.firstTick = (this.firstTick || moment()).clone();\r\n\t\t\tthis.lastTick = (this.lastTick || moment()).clone();\r\n\t\t},\r\n\t\tbuildTicks: function(index) {\r\n\r\n\t\t\tthis.ctx.save();\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(this.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(this.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\tthis.ctx.font = tickLabelFont;\r\n\r\n\t\t\tthis.ticks = [];\r\n\t\t\tthis.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\r\n\t\t\tthis.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\r\n\r\n\t\t\t// Set unit override if applicable\r\n\t\t\tif (this.options.time.unit) {\r\n\t\t\t\tthis.tickUnit = this.options.time.unit || 'day';\r\n\t\t\t\tthis.displayFormat = this.options.time.displayFormats[this.tickUnit];\r\n\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, true);\r\n\t\t\t\tthis.unitScale = helpers.getValueOrDefault(this.options.time.unitStepSize, 1);\r\n\t\t\t} else {\r\n\t\t\t\t// Determine the smallest needed unit of the time\r\n\t\t\t\tvar innerWidth = this.isHorizontal() ? this.width - (this.paddingLeft + this.paddingRight) : this.height - (this.paddingTop + this.paddingBottom);\r\n\r\n\t\t\t\t// Crude approximation of what the label length might be\r\n\t\t\t\tvar tempFirstLabel = this.tickFormatFunction(this.firstTick, 0, []);\r\n\t\t\t\tvar tickLabelWidth = this.ctx.measureText(tempFirstLabel).width;\r\n\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(this.options.ticks.maxRotation));\r\n\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(this.options.ticks.maxRotation));\r\n\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\r\n\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\r\n\r\n\t\t\t\t// Start as small as possible\r\n\t\t\t\tthis.tickUnit = 'millisecond';\r\n\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, true);\r\n\t\t\t\tthis.displayFormat = this.options.time.displayFormats[this.tickUnit];\r\n\r\n\t\t\t\tvar unitDefinitionIndex = 0;\r\n\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\r\n\r\n\t\t\t\t// While we aren't ideal and we don't have units left\r\n\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\r\n\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\r\n\t\t\t\t\tthis.unitScale = 1;\r\n\r\n\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(this.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\r\n\t\t\t\t\t\t// Use one of the prefedined steps\r\n\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\r\n\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(this.scaleSizeInUnits / labelCapacity)) {\r\n\t\t\t\t\t\t\t\tthis.unitScale = helpers.getValueOrDefault(this.options.time.unitStepSize, unitDefinition.steps[idx]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(this.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\r\n\t\t\t\t\t\t// We have a max step. Scale this unit\r\n\t\t\t\t\t\tthis.unitScale = helpers.getValueOrDefault(this.options.time.unitStepSize, Math.ceil(this.scaleSizeInUnits / labelCapacity));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Move to the next unit up\r\n\t\t\t\t\t\t++unitDefinitionIndex;\r\n\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\r\n\r\n\t\t\t\t\t\tthis.tickUnit = unitDefinition.name;\r\n\t\t\t\t\t\tvar leadingUnitBuffer = this.firstTick.diff(this.getMomentStartOf(this.firstTick), this.tickUnit, true);\r\n\t\t\t\t\t\tvar trailingUnitBuffer = this.getMomentStartOf(this.lastTick.clone().add(1, this.tickUnit)).diff(this.lastTick, this.tickUnit, true);\r\n\t\t\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\r\n\t\t\t\t\t\tthis.displayFormat = this.options.time.displayFormats[unitDefinition.name];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar roundedStart;\r\n\r\n\t\t\t// Only round the first tick if we have no hard minimum\r\n\t\t\tif (!this.options.time.min) {\r\n\t\t\t\tthis.firstTick = this.getMomentStartOf(this.firstTick);\r\n\t\t\t\troundedStart = this.firstTick;\r\n\t\t\t} else {\r\n\t\t\t\troundedStart = this.getMomentStartOf(this.firstTick);\r\n\t\t\t}\r\n\r\n\t\t\t// Only round the last tick if we have no hard maximum\r\n\t\t\tif (!this.options.time.max) {\r\n\t\t\t\tvar roundedEnd = this.getMomentStartOf(this.lastTick);\r\n\t\t\t\tif (roundedEnd.diff(this.lastTick, this.tickUnit, true) !== 0) {\r\n\t\t\t\t\t// Do not use end of because we need this to be in the next time unit\r\n\t\t\t\t\tthis.lastTick = this.getMomentStartOf(this.lastTick.add(1, this.tickUnit));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.smallestLabelSeparation = this.width;\r\n\r\n\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tfor (var i = 1; i < this.labelMoments[datasetIndex].length; i++) {\r\n\t\t\t\t\tthis.smallestLabelSeparation = Math.min(this.smallestLabelSeparation, this.labelMoments[datasetIndex][i].diff(this.labelMoments[datasetIndex][i - 1], this.tickUnit, true));\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Tick displayFormat override\r\n\t\t\tif (this.options.time.displayFormat) {\r\n\t\t\t\tthis.displayFormat = this.options.time.displayFormat;\r\n\t\t\t}\r\n\r\n\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\r\n\t\t\tthis.ticks.push(this.firstTick.clone());\r\n\r\n\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\r\n\t\t\tfor (var i = 1; i <= this.scaleSizeInUnits; ++i) {\r\n\t\t\t\tvar newTick = roundedStart.clone().add(i, this.tickUnit);\r\n\r\n\t\t\t\t// Are we greater than the max time\r\n\t\t\t\tif (this.options.time.max && newTick.diff(this.lastTick, this.tickUnit, true) >= 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i % this.unitScale === 0) {\r\n\t\t\t\t\tthis.ticks.push(newTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Always show the right tick\r\n\t\t\tvar diff = this.ticks[this.ticks.length - 1].diff(this.lastTick, this.tickUnit);\r\n\t\t\tif (diff !== 0 || this.scaleSizeInUnits === 0) {\r\n\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\r\n\t\t\t\t// but the last tick was not rounded.\r\n\t\t\t\tif (this.options.time.max) {\r\n\t\t\t\t\tthis.ticks.push(this.lastTick.clone());\r\n\t\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.ticks[0], this.tickUnit, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.ticks.push(this.lastTick.clone());\r\n\t\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.ctx.restore();\r\n\t\t},\r\n\t\t// Get tooltip label\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\tvar label = this.chart.data.labels && index < this.chart.data.labels.length ? this.chart.data.labels[index] : '';\r\n\r\n\t\t\tif (typeof this.chart.data.datasets[datasetIndex].data[0] === 'object') {\r\n\t\t\t\tlabel = this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t\t}\r\n\r\n\t\t\t// Format nicely\r\n\t\t\tif (this.options.time.tooltipFormat) {\r\n\t\t\t\tlabel = this.parseTime(label).format(this.options.time.tooltipFormat);\r\n\t\t\t}\r\n\r\n\t\t\treturn label;\r\n\t\t},\r\n\t\t// Function to format an individual tick mark\r\n\t\ttickFormatFunction: function tickFormatFunction(tick, index, ticks) {\r\n\t\t\tvar formattedTick = tick.format(this.displayFormat);\r\n\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\treturn callback(formattedTick, index, ticks);\r\n\t\t\t} else {\r\n\t\t\t\treturn formattedTick;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tthis.tickMoments = this.ticks;\r\n\t\t\tthis.ticks = this.ticks.map(this.tickFormatFunction, this);\r\n\t\t},\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\tvar labelMoment = value && value.isValid && value.isValid() ? value : this.getLabelMoment(datasetIndex, index);\r\n\r\n\t\t\tif (labelMoment) {\r\n\t\t\t\tvar offset = labelMoment.diff(this.firstTick, this.tickUnit, true);\r\n\r\n\t\t\t\tvar decimal = offset / this.scaleSizeInUnits;\r\n\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\t\tvar valueWidth = innerWidth / Math.max(this.ticks.length - 1, 1);\r\n\t\t\t\t\tvar valueOffset = (innerWidth * decimal) + this.paddingLeft;\r\n\r\n\t\t\t\t\treturn this.left + Math.round(valueOffset);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\t\tvar valueHeight = innerHeight / Math.max(this.ticks.length - 1, 1);\r\n\t\t\t\t\tvar heightOffset = (innerHeight * decimal) + this.paddingTop;\r\n\r\n\t\t\t\t\treturn this.top + Math.round(heightOffset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null, includeOffset);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar innerDimension = this.isHorizontal() ? this.width - (this.paddingLeft + this.paddingRight) : this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\tvar offset = (pixel - (this.isHorizontal() ? this.left + this.paddingLeft : this.top + this.paddingTop)) / innerDimension;\r\n\t\t\toffset *= this.scaleSizeInUnits;\r\n\t\t\treturn this.firstTick.clone().add(moment.duration(offset, this.tickUnit).asSeconds(), 'seconds');\r\n\t\t},\r\n\t\tparseTime: function(label) {\r\n\t\t\tif (typeof this.options.time.parser === 'string') {\r\n\t\t\t\treturn moment(label, this.options.time.parser);\r\n\t\t\t}\r\n\t\t\tif (typeof this.options.time.parser === 'function') {\r\n\t\t\t\treturn this.options.time.parser(label);\r\n\t\t\t}\r\n\t\t\t// Date objects\r\n\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\r\n\t\t\t\treturn moment(label);\r\n\t\t\t}\r\n\t\t\t// Moment support\r\n\t\t\tif (label.isValid && label.isValid()) {\r\n\t\t\t\treturn label;\r\n\t\t\t}\r\n\t\t\t// Custom parsing (return an instance of moment)\r\n\t\t\tif (typeof this.options.time.format !== 'string' && this.options.time.format.call) {\r\n\t\t\t\tconsole.warn(\"options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale\");\r\n\t\t\t\treturn this.options.time.format(label);\r\n\t\t\t}\r\n\t\t\t// Moment format parsing\r\n\t\t\treturn moment(label, this.options.time.format);\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"time\", TimeScale, defaultConfig);\r\n\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/src/scales/scale.time.js\n ** module id = 159\n ** module chunks = 1 2\n **/","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri == 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n\n  return io.socket(parsed.path);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/index.js\n ** module id = 178\n ** module chunks = 1 2\n **/","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc){\n  var obj = uri;\n\n  // default to window.location\n  var loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' == typeof uri) {\n    if ('/' == uri.charAt(0)) {\n      if ('/' == uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' != typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    }\n    else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/url.js\n ** module id = 179\n ** module chunks = 1 2\n **/","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/backo2/index.js\n ** module id = 180\n ** module chunks = 1 2\n **/","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/debug/debug.js\n ** module id = 181\n ** module chunks = 1 2\n **/","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/debug/~/ms/index.js\n ** module id = 182\n ** module chunks = 1 2\n **/","\nmodule.exports =  require('./lib/');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/index.js\n ** module id = 183\n ** module chunks = 1 2\n **/","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/index.js\n ** module id = 184\n ** module chunks = 1 2\n **/","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop(){}\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts){\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' == typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure :\n    (global.location && 'https:' == location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ?\n       location.port :\n       (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global == 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n  }\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function() {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function(transport){\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function(){\n    self.onDrain();\n  })\n  .on('packet', function(packet){\n    self.onPacket(packet);\n  })\n  .on('error', function(e){\n    self.onError(e);\n  })\n  .on('close', function(){\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 })\n    , failed = false\n    , self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen(){\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' == msg.type && 'probe' == msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' == self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  //Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose(){\n    onerror(\"transport closed\");\n  }\n\n  //When the socket is closed while we're probing\n  function onclose(){\n    onerror(\"socket closed\");\n  }\n\n  //When the socket is upgraded while we're probing\n  function onupgrade(to){\n    if (transport && to.name != transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  //Remove all listeners on the transport and on self\n  function cleanup(){\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if  ('closed' == this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' == self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function(){\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function() {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' != this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if('function' == typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' == typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' == this.readyState || 'closed' == this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function() {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i<j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/socket.js\n ** module id = 185\n ** module chunks = 1 2\n **/","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Callbacks count.\n */\n\nvar index = 0;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function(e){\n    self.onError('jsonp poll error',e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  }\n  else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n  \n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"'+ self.iframeId +'\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch(e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function(){\n      if (self.iframe.readyState == 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/transports/polling-jsonp.js\n ** module id = 186\n ** module chunks = 1 2\n **/","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty(){}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR(opts){\n  Polling.call(this, opts);\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname != global.location.hostname ||\n      port != opts.port;\n    this.xs = opts.secure != isSSL;\n  } else {\n    this.extraHeaders = opts.extraHeaders;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function(opts){\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function(data, fn){\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function(err){\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function(){\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function(data){\n    self.onData(data);\n  });\n  req.on('error', function(err){\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request(opts){\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined != opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function(){\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' == this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function(){\n        self.onLoad();\n      };\n      xhr.onerror = function(){\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function(){\n        if (4 != xhr.readyState) return;\n        if (200 == xhr.status || 1223 == xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function(){\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function() {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function(){\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function(data){\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function(err){\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function(fromError){\n  if ('undefined' == typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch(e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function(){\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        try {\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n        } catch (e) {\n          var ui8Arr = new Uint8Array(this.xhr.response);\n          var dataArray = [];\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n            dataArray.push(ui8Arr[idx]);\n          }\n\n          data = String.fromCharCode.apply(null, dataArray);\n        }\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function(){\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (global.document) {\n  Request.requestsCount = 0;\n  Request.requests = {};\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/transports/polling-xhr.js\n ** module id = 187\n ** module chunks = 1 2\n **/","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  try {\n    WebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function(){\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var self = this;\n  var uri = this.uri();\n  var protocols = void(0);\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'buffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function(){\n  var self = this;\n\n  this.ws.onopen = function(){\n    self.onOpen();\n  };\n  this.ws.onclose = function(){\n    self.onClose();\n  };\n  this.ws.onmessage = function(ev){\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function(e){\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Override `onData` to use a timer on iOS.\n * See: https://gist.github.com/mloughran/2052006\n *\n * @api private\n */\n\nif ('undefined' != typeof navigator\n  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n  WS.prototype.onData = function(data){\n    var self = this;\n    setTimeout(function(){\n      Transport.prototype.onData.call(self, data);\n    }, 0);\n  };\n}\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function(packet) {\n      parser.encodePacket(packet, self.supportsBinary, function(data) {\n        if (!BrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        //Sometimes the websocket has already been closed but the browser didn't\n        //have a chance of informing us about it yet, in that case send will\n        //throw an error\n        try {\n          if (BrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e){\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done(){\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function(){\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function(){\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function(){\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' == schema && this.port != 443)\n    || ('ws' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function(){\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/transports/websocket.js\n ** module id = 188\n ** module chunks = 1 2\n **/","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/lib/keys.js\n ** module id = 189\n ** module chunks = 1 2\n **/","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/after/index.js\n ** module id = 190\n ** module chunks = 1 2\n **/","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/arraybuffer.slice/index.js\n ** module id = 191\n ** module chunks = 1 2\n **/","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/base64-arraybuffer/lib/base64-arraybuffer.js\n ** module id = 192\n ** module chunks = 1 2\n **/","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/blob/index.js\n ** module id = 193\n ** module chunks = 1 2\n **/","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      if (obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/has-binary/index.js\n ** module id = 194\n ** module chunks = 1 2\n **/","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/has-binary/~/isarray/index.js\n ** module id = 195\n ** module chunks = 1 2\n **/","/*! https://mths.be/utf8js v2.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.0.0',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/utf8/utf8.js\n ** module id = 196\n ** module chunks = 1 2\n **/","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/has-cors/index.js\n ** module id = 197\n ** module chunks = 1 2\n **/","/**\n * JSON parse.\n *\n * @see Based on jQuery#parseJSON (MIT) and JSON2\n * @api private\n */\n\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n  // Attempt to parse using the native JSON parser first\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\n      .replace(rvalidtokens, ']')\n      .replace(rvalidbraces, ''))) {\n    return (new Function('return ' + data))();\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/parsejson/index.js\n ** module id = 198\n ** module chunks = 1 2\n **/","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/has-binary/index.js\n ** module id = 199\n ** module chunks = 1 2\n **/","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/has-binary/~/isarray/index.js\n ** module id = 200\n ** module chunks = 1 2\n **/","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/socket.io-parser/binary.js\n ** module id = 201\n ** module chunks = 1 2\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/socket.io-parser/~/component-emitter/index.js\n ** module id = 202\n ** module chunks = 1 2\n **/","/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/socket.io-parser/~/json3/lib/json3.js\n ** module id = 203\n ** module chunks = 1 2\n **/","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/to-array/index.js\n ** module id = 204\n ** module chunks = 1 2\n **/","module.exports = __webpack_amd_options__;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-options.js\n ** module id = 208\n ** module chunks = 1 2\n **/","export const isMongodbId = function (id) {\n  if (id.match(/^[0-9a-fA-F]{24}$/)) {\n    return true\n  } else {\n    return false\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/mongodb.js\n **/","<template>\n  <div id=\"quiz-detail\">\n    <div class=\"wrapper flex-column\">\n      <div class=\"flex-row\">\n        <mdl-button class=\"icon-left-button\" raised primary @click=\"$goBack()\"><i class=\"material-icons\">keyboard_arrow_left</i>返回</mdl-button>\n        <mdl-button v-if=\"quickquiz.finished\" style=\"margin-left:16px\" raised><i class=\"material-icons\" style=\"font-size:20px;margin-right:4px\">redo</i>再測一次</mdl-button>\n        <mdl-button v-if=\"!quickquiz.finished\" style=\"margin-left:16px\" raised accent @click=\"endQuiz()\"><i class=\"material-icons\" style=\"font-size:20px;margin-right:4px\">gavel</i>結束小測</mdl-button>\n        <mdl-button style=\"margin-left:16px\" raised primary @click=\"checkQuizPaper()\"><i class=\"material-icons\" style=\"font-size:20px;margin-right:4px\">description</i>查看试卷</mdl-button>\n        <mdl-button v-if=\"quickquiz.finished\" raised accent @click=\"deleteQuiz()\" style=\"margin-left: 16px\"><i class=\"material-icons\">delete</i>刪除小測</mdl-button>\n      </div>\n      <div class=\"flex-column second-wrapper mdl-shadow--2dp\">\n        <div class=\"flex-column\" style=\"padding:16px\">\n          <div class=\"flex-row flex-baseline\">\n            <h4 class=\"quiz-title\">{{quickquiz.title}}</h4>\n            <span class=\"quiz-finished\">{{quickquiz.finished | finished}}</span>\n            <span class=\"flex-row flex-center quiz-questions-count\"><i class=\"material-icons\">description</i><span>{{quickquiz.questions}}題</span></span>\n            <span class=\"flex-row flex-center quiz-time\"><i class=\"material-icons\">timer</i><span>{{quickquiz.time}}分鐘</span></span>\n          </div>\n        </div>\n\n        <div class=\"flex-row flex-center\" style=\"border-top:1px solid #eee;\">\n          <span class=\"flex-column flex-50\" style=\"padding: 16px;border-right:1px solid #eee;\">\n            <span class=\"field-title\">開始於</span>\n            <span class=\"field-content\">{{quickquiz.startTime | date 'YYYY[年]M[月]DD[日] H:mm'}}</span>\n          </span>\n          <span class=\"flex-column flex-50\" style=\"padding: 16px;border-right:1px solid #eee;\">\n            <span class=\"field-title\">結束於</span>\n            <span class=\"field-content\">{{quickquiz.finishTime | date 'YYYY[年]M[月]DD[日] H:mm'}}</span>\n          </span>\n        </div>\n\n        <div class=\"flex-column\" v-show=\"students && students.length > 0\">\n          <p style=\"border-top:1px solid #eee;padding:8px 0 8px 0;margin:0;text-align:center;color:#aaa\">學生 {{students.length}}名</p>\n          <div class=\"grids\">\n\n            <div class=\"grid-4 flex-column student\" v-for=\"student in students\" track-by=\"_id\">\n              <div class=\"flex-row flex-center\">\n                <div class=\"student-status online\" v-show=\"students[$index].online\"></div>\n                <span class=\"student-name\">{{student.name}}</span>\n              </div>\n              <span class=\"finished-status flex-row flex-center\" v-if=\"students[$index].status === 'finish'\" @click=\"checkQuizPaper(student)\">\n                <span style=\"margin-right:8px;color:#3F51B5\">{{analysisSample($index, 'time')}}</span>\n                <span style=\"color: #E91E63;margin-right: 8px;\">{{analysisSample($index, 'score')}}</span>\n                <span>已完成</span>\n                <i class=\"material-icons\">keyboard_arrow_right</i>\n              </span>\n              <span class=\"unfinish-status flex-row flex-center\" v-show=\"!students[$index].status\">\n                <span>未上交</span>\n                <i class=\"material-icons\">short_text</i>\n              </span>\n              <span class=\"doing-status flex-row flex-center\" v-show=\"students[$index].status === 'doing'\" @click=\"checkQuizPaper(student)\">\n                <span>做卷中&nbsp;</span>\n                <i class=\"material-icons\">keyboard_arrow_right</i>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"flex-column\" v-el:statistic>\n          <p style=\"padding:8px 0 8px 0;margin:0;text-align:center;color:#aaa;border-top:1px solid #eee;\">數據 統計</p>\n          <div class=\"flex-row grids\" v-if=\"quickquiz.finished\">\n            <div class=\"grid-2 flex-column flex-center flex-50\">\n              <span class=\"field-title\">平均分</span>\n              <span class=\"field-content\">{{analysis('average_score')}}</span>\n            </div>\n            <div class=\"grid-2 flex-column flex-center flex-50\">\n              <span class=\"field-title\">平均用時</span>\n              <span class=\"field-content\">{{analysis('average_time')}}</span>\n            </div>\n          </div>\n          <div class=\"flex-row flex-center\" style=\"margin-top: 16px\">\n            <span style=\"margin: 16px 16px 16px 32px; font-size: 26px;\">學生表現</span>\n            <mdl-button accent raised @click=\"drawSPChart('time')\" style=\"background-color: #FF9800;\">\n              <i class=\"material-icons\">swap_vert</i>\n              <span>時間</span>\n            </mdl-button>\n            <mdl-button accent raised style=\"margin-left:16px\" @click=\"drawSPChart('correct')\">\n              <i class=\"material-icons\">swap_vert</i>\n              <span>正確題數</span>\n            </mdl-button>\n          </div>\n          <canvas width=\"400px\" height=\"200\" v-el:sp-chart></canvas>\n          <div class=\"flex-row flex-center\" style=\"margin-top:32px;border-top:1px solid #ddd;padding-top:16px\">\n            <span style=\"margin: 16px 16px 16px 32px; font-size: 26px;\">題目數據</span>\n            <mdl-button accent raised @click=\"drawQAChart('correct')\">\n              <i class=\"material-icons\">swap_vert</i>\n              <span>正確數量</span>\n            </mdl-button>\n          </div>\n          <canvas width=\"400px\" height=\"200\" v-el:qa-chart></canvas>\n\n        </div>\n\n\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\nimport Chart from 'chart.js'\nimport io from 'socket.io-client'\nimport store from '../../vuex/store'\nimport { setQuickquizStudents, setQuickquizID, updateQuickquizStudent } from '../../vuex/actions'\nimport { getQuickquizID, getQuickquizStudents } from '../../vuex/getters'\nimport { zipSampleToStudent, studentIndex } from '../../modules/quickquiz'\nimport { isMongodbId } from '../../modules/mongodb'\n\nvar socket = null\nvar qaChart = null\nvar spChart = null\nexport default {\n  attached: function () {\n    let quickquiz_id = this.$route.params.quickquiz_id\n    if (isMongodbId(quickquiz_id)) {\n      this.validateURL = true\n      this.getQuickquizDetail(quickquiz_id)\n    } else {\n      console.log('invalid quickquiz id')\n    }\n  },\n  detached: function () {\n    socket.io.disconnect()\n    console.log('emit socket disconnect')\n  },\n  methods: {\n    getQuickquizDetail: function (id) {\n      let apiURL = '/api/manage-quickquiz/teacher/quickquiz/' + '?id=' + id\n      this.$http.get(apiURL).then(function (response) {\n        console.log(response)\n        let students = _.get(response.data, 'students', [])\n        this.setQuickquizStudents(students)\n        this.samples = _.get(response.data, 'samples', [])\n        console.log()\n        delete response.data.students\n        delete response.data.samples\n        this.quickquiz = response.data\n        this.analysis('count_exception')\n        if (!_.get(response.data, 'finished', false)) {\n          this.$els.statistic.style.display = 'none'\n        }\n        this.listenForSocket()\n      }, function (response) {\n        this.$showToast('Error:' + response.data)\n      })\n    },\n    endQuiz: function () {\n      if (this.quickquiz.finished === false) {\n        let data = {\n          quickquiz_id: this.quickquiz._id\n        }\n        this.$http.post('/api/manage-quickquiz/teacher/quickquiz/end', data).then(function (response) {\n          this.quickquiz.finished = true\n          window.location.reload()\n        }, function (response) {\n          this.$showToast('Error:' + response.data)\n        })\n      }\n    },\n    listenForSocket: function () {\n      var self = this\n      socket = io.connect('/quickquiz')\n\n      socket.on('connect', function () {\n        console.log('on connect')\n        socket.emit('authenticate', {token: window.sessionStorage.token})\n      })\n\n      socket.on('authenticated', function () {\n        self.socket.authenticated = true\n        socket.emit('user join', {quickquizId: self.$route.params.quickquiz_id})\n        console.log('socket auth success')\n      })\n\n      socket.on('joined', function (data) {\n        self.socket.joined = true\n      })\n\n      socket.on('student list', function (data) {\n        // @param data = { id: String, status: String } , array of student who are doing the quickquiz\n        let students = data\n        console.log('on receiving Student List')\n\n        for (var i = 0; i < students.length; i++) {\n          let index = studentIndex(self.students, students[i].id)\n          if (index > -1) {\n            let student = self.students[index]\n            student['online'] = true\n            if (students[i].status !== '') {\n              student['status'] = students[i].status\n            }\n            if (students[i].quizsample !== '' && !_.has(student, 'sample._id')) {\n              let sample = {\n                _id: students[i].quizsample\n              }\n              student['sample'] = sample\n            }\n            self.updateQuickquizStudent(index, student)\n          }\n        }\n      })\n\n      socket.on('student joined', function (data) {\n        console.log('on Student Joined')\n        // let student_name = _.get(data, 'name', null)\n        let student_id = _.get(data, 'id', null)\n        let student_name = _.get(data, 'name', null)\n\n        let index = studentIndex(self.students, student_id)\n        if (index > -1) {\n          let student = self.students[index]\n          student['online'] = true\n          self.updateQuickquizStudent(index, student)\n        } else {\n          let student = {\n            _id: student_id,\n            name: student_name,\n            online: true\n          }\n          self.updateQuickquizStudent(self.students.length, student)\n        }\n      })\n\n      socket.on('student leaved', function (data) {\n        console.log('on Student Leaved')\n        let index = studentIndex(self.students, data)\n        if (data && index > -1) {\n          let student = self.students[index]\n          student['online'] = false\n          if (_.get(student, 'status', null) !== 'finish') {\n            student['status'] = null\n          }\n          self.updateQuickquizStudent(index, student)\n        }\n      })\n\n      socket.on('start doing', function (data) {\n        if (data) {\n          let index = studentIndex(self.students, data.student)\n          if (data && index > -1) {\n            let student = self.students[index]\n            student['status'] = 'doing'\n            if (!_.has(student, 'sample._id')) {\n              let sample = {\n                _id: data.quizsample\n              }\n              student['sample'] = sample\n            }\n            self.updateQuickquizStudent(index, student)\n          }\n        }\n        console.log('student ' + data + ' just start doing the quiz')\n      })\n\n      socket.on('finish doing', function (data) {\n        if (data) {\n          let index = studentIndex(self.students, data)\n          if (data && index > -1) {\n            let student = self.students[index]\n            student['status'] = 'finish'\n            self.updateQuickquizStudent(index, student)\n          }\n        }\n        console.log('student ' + data + ' just finished the quiz')\n      })\n    },\n    checkSamples: function () {\n      if (this.samples.length > 0) {\n        this.setQuickquizStudents(zipSampleToStudent(this.samples, this.students))\n        this.setQuickquizID(this.quickquiz._id)\n        this.setQuickquizStudents(this.students)\n        this.drawCharts()\n      }\n    },\n    analysisSample: function (student_index, option) {\n      let sample = this.students[student_index].sample\n\n      if (option === 'score') {\n        let rightCount = sample.results.right.length\n        let total = sample.results.right.length + sample.results.blank.length + sample.results.wrong.length\n        return rightCount + '/' + total\n      } else if (option === 'time') {\n        let start = sample.startTime\n        let finish = sample.finishTime\n        return this.timeDifference(Math.abs(new Date(start) - new Date(finish)), 'simple')\n      } else if (option === 'rightCount') {\n        let rightCount = sample.results.right.length\n        return rightCount\n      } else if (option === 'timeInMilliSec') {\n        let start = sample.startTime\n        let finish = sample.finishTime\n        return Math.abs(new Date(start) - new Date(finish))\n      }\n    },\n    analysis: function (option) {\n      if (option === 'average_score') {\n        return (this.quickquiz.analysis.aveRight * 100 / (this.quickquiz.questions - this.quickquiz.exception)).toFixed(2)\n      } else if (option === 'average_time') {\n        return this.timeDifference(this.quickquiz.analysis.aveTime)\n      } else if (option === 'average_right_count') {\n        return (this.quickquiz.analysis.aveRight.toFixed(2)) / 1\n      } else if (option === 'count_exception') {\n        var exception_count = 0\n        let question_analysis = this.quickquiz.analysis.questions\n        _.forEach(question_analysis, function (array) {\n          if (array[0] === 0 && array[1] === 0 && array[2] === 0 && array[3] > 0) {\n            exception_count++\n          }\n        })\n        this.quickquiz['exception'] = exception_count\n        this.checkSamples()\n      } else {\n        return false\n      }\n    },\n    timeDifference: function (millisecound, option) {\n      var ms = millisecound\n      var min = (ms / 1000 / 60) << 0\n      var sec = (ms / 1000) % 60 << 0\n      if (option === 'simple') {\n        return (min + ':' + sec)\n      } else {\n        return (min + '分' + sec + '秒')\n      }\n    },\n    drawCharts: function () {\n      let self = this\n      if (_.get(self.quickquiz, 'finished', false)) {\n        this.drawSPChart()\n        this.drawQAChart()\n      }\n    },\n    drawSPChart: function (sort, type) {\n      if (spChart !== null) {\n        spChart.destroy()\n      }\n      let self = this\n      let studentCount = this.students.length\n      let student_performance_chart = this.$els.spChart\n      // initialise data\n      let name_set = _.map(this.students, function (student) { return student.name })\n      let time_cost_set = _.map(this.students, function (student, key) {\n        return self.analysisSample(key, 'timeInMilliSec') / 60000\n      })\n      let correct_count_set = _.map(this.students, function (student, key) {\n        return self.analysisSample(key, 'rightCount')\n      })\n\n      let ave_correct_count = self.analysis('average_right_count')\n      let ave_correct_data_set = _.times(studentCount, _.constant(ave_correct_count))\n\n      // [{'name', 'correctCount', 'timeCost'}]\n      var chart_main_data = _.zip(name_set, time_cost_set, correct_count_set)\n\n      if (sort === 'correct') {\n        if (this.charts.sp.correct !== 1) {\n          this.charts.sp.correct = 1\n          chart_main_data = _.sortBy(chart_main_data, function (data) { return data[2] })\n        } else {\n          this.charts.sp.correct = -1\n          chart_main_data = _.sortBy(chart_main_data, function (data) { return -data[2] })\n        }\n      } else if (sort === 'time') {\n        if (this.charts.sp.time !== 1) {\n          this.charts.sp.time = 1\n          chart_main_data = _.sortBy(chart_main_data, function (data) { return data[1] })\n        } else {\n          this.charts.sp.time = -1\n          chart_main_data = _.sortBy(chart_main_data, function (data) { return -data[1] })\n        }\n      }\n\n      var spChartdata = {\n        labels: _.unzip(chart_main_data)[0],\n        datasets: [\n          {\n            label: '時間',\n            backgroundColor: 'rgba(255,152,0,0.2)',\n            borderColor: 'rgba(255,152,0,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,152,0,0.4)',\n            hoverBorderColor: 'rgba(255,152,0,1)',\n            data: _.unzip(chart_main_data)[1]\n          },\n          {\n            label: '正確題數',\n            backgroundColor: 'rgba(76, 175, 80 ,0.2)',\n            borderColor: 'rgba(76, 175, 80 ,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(76, 175, 80 ,0.4)',\n            hoverBorderColor: 'rgba(76, 175, 80 ,1)',\n            data: _.unzip(chart_main_data)[2]\n          },\n          {\n            label: '平均正確題數',\n            type: 'line',\n            backgroundColor: 'rgba(63, 81, 181, 0.2)',\n            borderColor: 'rgba(63, 81, 181, 1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(63, 81, 181, 0.4)',\n            hoverBorderColor: 'rgba(63, 81, 181, 1)',\n            data: ave_correct_data_set\n          }\n        ]\n      }\n\n      spChart = new Chart(student_performance_chart, {\n        type: 'bar',\n        data: spChartdata\n      })\n      spChart.render(500, false)\n    },\n    drawQAChart: function (sort, type) {\n      if (qaChart !== null) {\n        qaChart.destroy()\n      }\n      let question_analysis_chart = this.$els.qaChart\n      // initialise data\n      let labels_set = _.map(_.times(this.quickquiz.questions, Number), function (number) { return '第' + (number + 1) + '題' })\n      let correct_count_set = _.map(this.quickquiz.analysis.questions, function (question, key) {\n        return question[0]\n      })\n      let wrong_count_set = _.map(this.quickquiz.analysis.questions, function (question, key) {\n        return question[1]\n      })\n      let blank_count_set = _.map(this.quickquiz.analysis.questions, function (question, key) {\n        return question[2]\n      })\n\n      var main_chart_data = _.zip(labels_set, correct_count_set, wrong_count_set, blank_count_set)\n\n      if (sort === 'correct') {\n        if (this.charts.qa.correct !== 1) {\n          this.charts.qa.correct = 1\n          main_chart_data = _.sortBy(main_chart_data, function (data) { return data[1] })\n        } else {\n          this.charts.qa.correct = -1\n          main_chart_data = _.sortBy(main_chart_data, function (data) { return -data[1] })\n        }\n      }\n\n      var qaChartData = {\n        labels: _.unzip(main_chart_data)[0],\n        datasets: [\n          {\n            label: '正確',\n            backgroundColor: 'rgba(76, 175, 80 ,0.2)',\n            borderColor: 'rgba(76, 175, 80 ,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(76, 175, 80 ,0.4)',\n            hoverBorderColor: 'rgba(76, 175, 80 ,1)',\n            data: _.unzip(main_chart_data)[1]\n          },\n          {\n            label: '錯誤',\n            backgroundColor: 'rgba(255,99,132,0.2)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor: 'rgba(255,99,132,1)',\n            data: _.unzip(main_chart_data)[2]\n          },\n          {\n            label: '留空',\n            backgroundColor: 'rgba(255,152,0,0.2)',\n            borderColor: 'rgba(255,152,0,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,152,0,0.4)',\n            hoverBorderColor: 'rgba(255,152,0,1)',\n            data: _.unzip(main_chart_data)[3]\n          }\n        ]\n      }\n\n      qaChart = new Chart(question_analysis_chart, {\n        type: 'bar',\n        data: qaChartData\n      })\n      qaChart.render(500, false)\n    },\n    // mockData: function () {\n    //   let self = this\n    //\n    //   let student = {\n    //     _id: '56a32a089776051346bf694d',\n    //     name: 'mockData',\n    //     online: true\n    //   }\n    //   self.updateQuickquizStudent(0, student)\n    // },\n    checkQuizPaper: function (student) {\n      if (student) {\n        if (_.has(student, 'sample._id')) {\n          this.$router.go({\n            name: 'quiz-paper',\n            params: { quickquiz_id: this.$route.params.quickquiz_id, quizsample_id: student.sample._id }\n          })\n        }\n      } else {\n        this.$router.go({\n          name: 'quiz-paper',\n          params: { quickquiz_id: this.$route.params.quickquiz_id, quizsample_id: 0 }\n        })\n      }\n    },\n    deleteQuiz: function () {\n      if (this.quickquiz.finished) {\n        let data = {\n          quickquiz_id: this.quickquiz._id\n        }\n        this.$http.delete('/api/manage-quickquiz/quickquiz', data).then(function (response) {\n          this.$router.go({\n            name: 'quiz-results'\n          })\n        }, function (response) {\n          this.$showToast(response.data)\n        })\n      }\n    }\n  },\n  data () {\n    return {\n      socket: {\n        joined: false,\n        authenticated: false\n      },\n      validateURL: false,\n      quickquiz: {},\n      charts: {\n        sp: {\n          time: 0,\n          correct: 0\n        },\n        qa: {\n          correct: 0,\n          wrong: 0\n        }\n      }\n    }\n  },\n  filters: {\n    finished: function (value) {\n      if (value === false) {\n        return '測試進行中'\n      } else {\n        return '已結束'\n      }\n    }\n  },\n  store,\n  vuex: {\n    actions: {\n      setQuickquizID: setQuickquizID,\n      setQuickquizStudents: setQuickquizStudents,\n      updateQuickquizStudent: updateQuickquizStudent\n    },\n    getters: {\n      getQuickquizID: getQuickquizID,\n      students: getQuickquizStudents\n    }\n  }\n}\n</script>\n<style scoped>\n.wrapper {\n  margin: 16px;\n}\n\n.second-wrapper {\n  background: #fff;\n  margin-top: 16px;\n}\n\n.quiz-title {\n  margin:0\n}\n\n.quiz-finished {\n  margin-left: 8px;\n  font-size: 18px;\n  color: #FF9800\n}\n\n.quiz-time {\n  color: #2196F3;\n  font-size: 18px;\n  margin-left: 16px\n}\n\n.quiz-time i{\n  font-size: 18px;\n  margin-right: 4px\n}\n\n.quiz-questions-count {\n  color: #2196F3;\n  font-size: 18px;\n  margin-left: auto;\n}\n\n.quiz-questions-count i{\n  font-size: 18px;\n  margin-right: 4px\n}\n\n.student-status {\n  background-color: #9E9E9E;\n  width: 10px;\n  height: 10px;\n  margin-right: 8px;\n  border-radius: 5px;\n}\n\n.student-status.online {\n  background-color: #4CAF50;\n  width: 10px;\n  height: 10px;\n  margin-right: 8px;\n  border-radius: 5px;\n}\n\n.student {\n  padding: 8px 16px\n}\n\n.student .student-name {\n  font-size: 18px;\n  padding: 8px 0\n}\n\n.student .doing-status {\n  color: #009688;\n  justify-content: center;\n}\n\n.student .unfinish-status {\n  color: #9E9E9E;\n  justify-content: center;\n}\n\n.student .finished-status {\n  color: #009688;\n  margin-left: auto;\n  cursor: pointer;\n}\n\n.student .doing-status {\n  color: #3F51B5;\n  text-align: center;\n  cursor: pointer;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Quiz-detail.vue?51e72826\n **/","exports = module.exports = require(\"./../../../node_modules/.npminstall/css-loader/0.23.1/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".wrapper[_v-afa92f70]{margin:16px}.second-wrapper[_v-afa92f70]{background:#fff;margin-top:16px}.quiz-title[_v-afa92f70]{margin:0}.quiz-finished[_v-afa92f70]{margin-left:8px;font-size:18px;color:#ff9800}.quiz-time[_v-afa92f70]{color:#2196f3;font-size:18px;margin-left:16px}.quiz-time i[_v-afa92f70]{font-size:18px;margin-right:4px}.quiz-questions-count[_v-afa92f70]{color:#2196f3;font-size:18px;margin-left:auto}.quiz-questions-count i[_v-afa92f70]{font-size:18px;margin-right:4px}.student-status[_v-afa92f70]{background-color:#9e9e9e;width:10px;height:10px;margin-right:8px;border-radius:5px}.student-status.online[_v-afa92f70]{background-color:#4caf50;width:10px;height:10px;margin-right:8px;border-radius:5px}.student[_v-afa92f70]{padding:8px 16px}.student .student-name[_v-afa92f70]{font-size:18px;padding:8px 0}.student .doing-status[_v-afa92f70]{color:#009688}.student .doing-status[_v-afa92f70],.student .unfinish-status[_v-afa92f70]{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}.student .unfinish-status[_v-afa92f70]{color:#9e9e9e}.student .finished-status[_v-afa92f70]{color:#009688;margin-left:auto;cursor:pointer}.student .doing-status[_v-afa92f70]{color:#3f51b5;text-align:center;cursor:pointer}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/quickquiz/Quiz-detail.vue\"],\"names\":[],\"mappings\":\"AACA,sBACE,WAAa,CACd,AAED,6BACE,gBAAiB,AACjB,eAAiB,CAClB,AAED,yBACE,QAAQ,CACT,AAED,4BACE,gBAAiB,AACjB,eAAgB,AAChB,aAAc,CACf,AAED,wBACE,cAAe,AACf,eAAgB,AAChB,gBAAiB,CAClB,AAED,0BACE,eAAgB,AAChB,gBAAiB,CAClB,AAED,mCACE,cAAe,AACf,eAAgB,AAChB,gBAAkB,CACnB,AAED,qCACE,eAAgB,AAChB,gBAAiB,CAClB,AAED,6BACE,yBAA0B,AAC1B,WAAY,AACZ,YAAa,AACb,iBAAkB,AAClB,iBAAmB,CACpB,AAED,oCACE,yBAA0B,AAC1B,WAAY,AACZ,YAAa,AACb,iBAAkB,AAClB,iBAAmB,CACpB,AAED,sBACE,gBAAiB,CAClB,AAED,oCACE,eAAgB,AAChB,aAAc,CACf,AAED,oCACE,aAAe,CAKhB,AAED,2EANE,wBAAyB,AACzB,+BAAgC,AAC5B,qBAAsB,AAClB,sBAAwB,CASjC,AAND,uCACE,aAAe,CAKhB,AAED,uCACE,cAAe,AACf,iBAAkB,AAClB,cAAgB,CACjB,AAED,oCACE,cAAe,AACf,kBAAmB,AACnB,cAAgB,CACjB\",\"file\":\"Quiz-detail.vue\",\"sourcesContent\":[\"\\n.wrapper[_v-afa92f70] {\\n  margin: 16px;\\n}\\n\\n.second-wrapper[_v-afa92f70] {\\n  background: #fff;\\n  margin-top: 16px;\\n}\\n\\n.quiz-title[_v-afa92f70] {\\n  margin:0\\n}\\n\\n.quiz-finished[_v-afa92f70] {\\n  margin-left: 8px;\\n  font-size: 18px;\\n  color: #FF9800\\n}\\n\\n.quiz-time[_v-afa92f70] {\\n  color: #2196F3;\\n  font-size: 18px;\\n  margin-left: 16px\\n}\\n\\n.quiz-time i[_v-afa92f70]{\\n  font-size: 18px;\\n  margin-right: 4px\\n}\\n\\n.quiz-questions-count[_v-afa92f70] {\\n  color: #2196F3;\\n  font-size: 18px;\\n  margin-left: auto;\\n}\\n\\n.quiz-questions-count i[_v-afa92f70]{\\n  font-size: 18px;\\n  margin-right: 4px\\n}\\n\\n.student-status[_v-afa92f70] {\\n  background-color: #9E9E9E;\\n  width: 10px;\\n  height: 10px;\\n  margin-right: 8px;\\n  border-radius: 5px;\\n}\\n\\n.student-status.online[_v-afa92f70] {\\n  background-color: #4CAF50;\\n  width: 10px;\\n  height: 10px;\\n  margin-right: 8px;\\n  border-radius: 5px;\\n}\\n\\n.student[_v-afa92f70] {\\n  padding: 8px 16px\\n}\\n\\n.student .student-name[_v-afa92f70] {\\n  font-size: 18px;\\n  padding: 8px 0\\n}\\n\\n.student .doing-status[_v-afa92f70] {\\n  color: #009688;\\n  -webkit-box-pack: center;\\n  -webkit-justify-content: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n}\\n\\n.student .unfinish-status[_v-afa92f70] {\\n  color: #9E9E9E;\\n  -webkit-box-pack: center;\\n  -webkit-justify-content: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n}\\n\\n.student .finished-status[_v-afa92f70] {\\n  color: #009688;\\n  margin-left: auto;\\n  cursor: pointer;\\n}\\n\\n.student .doing-status[_v-afa92f70] {\\n  color: #3F51B5;\\n  text-align: center;\\n  cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/.npminstall/css-loader/0.23.1/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=_v-afa92f70&scoped=true!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/quickquiz/Quiz-detail.vue\n ** module id = 372\n ** module chunks = 2\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-afa92f70&scoped=true!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Quiz-detail.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/.npminstall/vue-style-loader/1.0.0/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-afa92f70&scoped=true!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Quiz-detail.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-afa92f70&scoped=true!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Quiz-detail.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/.npminstall/extract-text-webpack-plugin/1.0.1/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/.npminstall/vue-style-loader/1.0.0/vue-style-loader!./~/.npminstall/css-loader/0.23.1/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=_v-afa92f70&scoped=true!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/quickquiz/Quiz-detail.vue\n ** module id = 387\n ** module chunks = 2\n **/","module.exports = \"<div id=quiz-detail _v-afa92f70=\\\"\\\"> <div class=\\\"wrapper flex-column\\\" _v-afa92f70=\\\"\\\"> <div class=flex-row _v-afa92f70=\\\"\\\"> <mdl-button class=icon-left-button raised=\\\"\\\" primary=\\\"\\\" @click=$goBack() _v-afa92f70=\\\"\\\"><i class=material-icons _v-afa92f70=\\\"\\\">keyboard_arrow_left</i>返回</mdl-button> <mdl-button v-if=quickquiz.finished style=margin-left:16px raised=\\\"\\\" _v-afa92f70=\\\"\\\"><i class=material-icons style=font-size:20px;margin-right:4px _v-afa92f70=\\\"\\\">redo</i>再測一次</mdl-button> <mdl-button v-if=!quickquiz.finished style=margin-left:16px raised=\\\"\\\" accent=\\\"\\\" @click=endQuiz() _v-afa92f70=\\\"\\\"><i class=material-icons style=font-size:20px;margin-right:4px _v-afa92f70=\\\"\\\">gavel</i>結束小測</mdl-button> <mdl-button style=margin-left:16px raised=\\\"\\\" primary=\\\"\\\" @click=checkQuizPaper() _v-afa92f70=\\\"\\\"><i class=material-icons style=font-size:20px;margin-right:4px _v-afa92f70=\\\"\\\">description</i>查看试卷</mdl-button> <mdl-button v-if=quickquiz.finished raised=\\\"\\\" accent=\\\"\\\" @click=deleteQuiz() style=\\\"margin-left: 16px\\\" _v-afa92f70=\\\"\\\"><i class=material-icons _v-afa92f70=\\\"\\\">delete</i>刪除小測</mdl-button> </div> <div class=\\\"flex-column second-wrapper mdl-shadow--2dp\\\" _v-afa92f70=\\\"\\\"> <div class=flex-column style=padding:16px _v-afa92f70=\\\"\\\"> <div class=\\\"flex-row flex-baseline\\\" _v-afa92f70=\\\"\\\"> <h4 class=quiz-title _v-afa92f70=\\\"\\\">{{quickquiz.title}}</h4> <span class=quiz-finished _v-afa92f70=\\\"\\\">{{quickquiz.finished | finished}}</span> <span class=\\\"flex-row flex-center quiz-questions-count\\\" _v-afa92f70=\\\"\\\"><i class=material-icons _v-afa92f70=\\\"\\\">description</i><span _v-afa92f70=\\\"\\\">{{quickquiz.questions}}題</span></span> <span class=\\\"flex-row flex-center quiz-time\\\" _v-afa92f70=\\\"\\\"><i class=material-icons _v-afa92f70=\\\"\\\">timer</i><span _v-afa92f70=\\\"\\\">{{quickquiz.time}}分鐘</span></span> </div> </div> <div class=\\\"flex-row flex-center\\\" style=\\\"border-top:1px solid #eee\\\" _v-afa92f70=\\\"\\\"> <span class=\\\"flex-column flex-50\\\" style=\\\"padding: 16px;border-right:1px solid #eee\\\" _v-afa92f70=\\\"\\\"> <span class=field-title _v-afa92f70=\\\"\\\">開始於</span> <span class=field-content _v-afa92f70=\\\"\\\">{{quickquiz.startTime | date 'YYYY[年]M[月]DD[日] H:mm'}}</span> </span> <span class=\\\"flex-column flex-50\\\" style=\\\"padding: 16px;border-right:1px solid #eee\\\" _v-afa92f70=\\\"\\\"> <span class=field-title _v-afa92f70=\\\"\\\">結束於</span> <span class=field-content _v-afa92f70=\\\"\\\">{{quickquiz.finishTime | date 'YYYY[年]M[月]DD[日] H:mm'}}</span> </span> </div> <div class=flex-column v-show=\\\"students &amp;&amp; students.length > 0\\\" _v-afa92f70=\\\"\\\"> <p style=\\\"border-top:1px solid #eee;padding:8px 0 8px 0;margin:0;text-align:center;color:#aaa\\\" _v-afa92f70=\\\"\\\">學生 {{students.length}}名</p> <div class=grids _v-afa92f70=\\\"\\\"> <div class=\\\"grid-4 flex-column student\\\" v-for=\\\"student in students\\\" track-by=_id _v-afa92f70=\\\"\\\"> <div class=\\\"flex-row flex-center\\\" _v-afa92f70=\\\"\\\"> <div class=\\\"student-status online\\\" v-show=students[$index].online _v-afa92f70=\\\"\\\"></div> <span class=student-name _v-afa92f70=\\\"\\\">{{student.name}}</span> </div> <span class=\\\"finished-status flex-row flex-center\\\" v-if=\\\"students[$index].status === 'finish'\\\" @click=checkQuizPaper(student) _v-afa92f70=\\\"\\\"> <span style=margin-right:8px;color:#3F51B5 _v-afa92f70=\\\"\\\">{{analysisSample($index, 'time')}}</span> <span style=\\\"color: #E91E63;margin-right: 8px\\\" _v-afa92f70=\\\"\\\">{{analysisSample($index, 'score')}}</span> <span _v-afa92f70=\\\"\\\">已完成</span> <i class=material-icons _v-afa92f70=\\\"\\\">keyboard_arrow_right</i> </span> <span class=\\\"unfinish-status flex-row flex-center\\\" v-show=!students[$index].status _v-afa92f70=\\\"\\\"> <span _v-afa92f70=\\\"\\\">未上交</span> <i class=material-icons _v-afa92f70=\\\"\\\">short_text</i> </span> <span class=\\\"doing-status flex-row flex-center\\\" v-show=\\\"students[$index].status === 'doing'\\\" @click=checkQuizPaper(student) _v-afa92f70=\\\"\\\"> <span _v-afa92f70=\\\"\\\">做卷中&nbsp;</span> <i class=material-icons _v-afa92f70=\\\"\\\">keyboard_arrow_right</i> </span> </div> </div> </div> <div class=flex-column v-el:statistic=\\\"\\\" _v-afa92f70=\\\"\\\"> <p style=\\\"padding:8px 0 8px 0;margin:0;text-align:center;color:#aaa;border-top:1px solid #eee\\\" _v-afa92f70=\\\"\\\">數據 統計</p> <div class=\\\"flex-row grids\\\" v-if=quickquiz.finished _v-afa92f70=\\\"\\\"> <div class=\\\"grid-2 flex-column flex-center flex-50\\\" _v-afa92f70=\\\"\\\"> <span class=field-title _v-afa92f70=\\\"\\\">平均分</span> <span class=field-content _v-afa92f70=\\\"\\\">{{analysis('average_score')}}</span> </div> <div class=\\\"grid-2 flex-column flex-center flex-50\\\" _v-afa92f70=\\\"\\\"> <span class=field-title _v-afa92f70=\\\"\\\">平均用時</span> <span class=field-content _v-afa92f70=\\\"\\\">{{analysis('average_time')}}</span> </div> </div> <div class=\\\"flex-row flex-center\\\" style=\\\"margin-top: 16px\\\" _v-afa92f70=\\\"\\\"> <span style=\\\"margin: 16px 16px 16px 32px; font-size: 26px\\\" _v-afa92f70=\\\"\\\">學生表現</span> <mdl-button accent=\\\"\\\" raised=\\\"\\\" @click=\\\"drawSPChart('time')\\\" style=\\\"background-color: #FF9800\\\" _v-afa92f70=\\\"\\\"> <i class=material-icons _v-afa92f70=\\\"\\\">swap_vert</i> <span _v-afa92f70=\\\"\\\">時間</span> </mdl-button> <mdl-button accent=\\\"\\\" raised=\\\"\\\" style=margin-left:16px @click=\\\"drawSPChart('correct')\\\" _v-afa92f70=\\\"\\\"> <i class=material-icons _v-afa92f70=\\\"\\\">swap_vert</i> <span _v-afa92f70=\\\"\\\">正確題數</span> </mdl-button> </div> <canvas width=400px height=200 v-el:sp-chart=\\\"\\\" _v-afa92f70=\\\"\\\"></canvas> <div class=\\\"flex-row flex-center\\\" style=\\\"margin-top:32px;border-top:1px solid #ddd;padding-top:16px\\\" _v-afa92f70=\\\"\\\"> <span style=\\\"margin: 16px 16px 16px 32px; font-size: 26px\\\" _v-afa92f70=\\\"\\\">題目數據</span> <mdl-button accent=\\\"\\\" raised=\\\"\\\" @click=\\\"drawQAChart('correct')\\\" _v-afa92f70=\\\"\\\"> <i class=material-icons _v-afa92f70=\\\"\\\">swap_vert</i> <span _v-afa92f70=\\\"\\\">正確數量</span> </mdl-button> </div> <canvas width=400px height=200 v-el:qa-chart=\\\"\\\" _v-afa92f70=\\\"\\\"></canvas> </div> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-afa92f70!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/quickquiz/Quiz-detail.vue\n ** module id = 488\n ** module chunks = 2\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/.npminstall/extract-text-webpack-plugin/1.0.1/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-afa92f70&scoped=true!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Quiz-detail.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Quiz-detail.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-afa92f70!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Quiz-detail.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/quickquiz/Quiz-detail.vue\n ** module id = 508\n ** module chunks = 2\n **/"],"sourceRoot":""}