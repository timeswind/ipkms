{"version":3,"sources":["webpack:///4.d486a137c8a972e8b645.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_core.js?d611*","webpack:///./~/babel-runtime/core-js/json/stringify.js","webpack:///./~/babel-runtime/~/core-js/library/fn/json/stringify.js","webpack:///./~/qrcode-canvas/~/bops/index.js","webpack:///./~/qrcode-canvas/~/bops/~/base64-js/lib/b64.js","webpack:///./~/qrcode-canvas/~/bops/typedarray/mapped.js","webpack:///./~/qrcode-canvas/lib/qrcapacitytable.js","webpack:///./~/qrcode-canvas/lib/qrcode-draw.js","webpack:///./~/qrcode-canvas/lib/qrcode.js","webpack:///./~/qrcode-canvas/~/bops/~/to-utf8/index.js","webpack:///./~/qrcode-canvas/~/bops/typedarray/copy.js","webpack:///./~/qrcode-canvas/~/bops/typedarray/create.js","webpack:///./~/qrcode-canvas/~/bops/typedarray/from.js","webpack:///./~/qrcode-canvas/~/bops/typedarray/is.js","webpack:///./~/qrcode-canvas/~/bops/typedarray/join.js","webpack:///./~/qrcode-canvas/~/bops/typedarray/read.js","webpack:///./~/qrcode-canvas/~/bops/typedarray/subarray.js","webpack:///./~/qrcode-canvas/~/bops/typedarray/to.js","webpack:///./~/qrcode-canvas/~/bops/typedarray/write.js","webpack:///Quiz-results.vue","webpack:///./src/views/quickquiz/Quiz-results.vue?7f30","webpack:///./src/views/quickquiz/Quiz-results.vue?c173","webpack:///./src/views/quickquiz/Quiz-results.vue","webpack:///./src/views/quickquiz/Quiz-results.vue?0c8e"],"names":["webpackJsonp",6,"module","exports","core","version","__e",54,"__webpack_require__","default","__esModule",55,"$JSON","JSON","stringify","it","apply","arguments",61,"mix","from","into","key","proto","to","is","subarray","join","copy","create",62,"b64ToByteArray","b64","i","j","l","tmp","placeHolders","arr","length","indexOf","lookup","push","uint8ToBase64","uint8","tripletToBase64","num","temp","extraBytes","output","toByteArray","fromByteArray",63,"no_weakmap_get","target","DataView","buffer","get","out","map","set","WeakMap",103,"QRCapacityTable",104,"QRCodeDraw","bops","QRCodeLib","QRVersionCapacityTable","QRCode","QRErrorCorrectLevel","prototype","scale","defaultMargin","marginScaleFactor","Array","Uint32Array","errorBehavior","color","dark","light","defaultErrorCorrectLevel","H","draw","canvas","text","options","cb","level","error","errorCorrectLevel","args","slice","call","pop","shift","Error","this","QRVersion","e","t","ec","margin","qr","ctx","getContext","width","addData","make","marginWidth","currenty","dataWidth","resetCanvas","r","rl","getModuleCount","currentx","c","cl","isDark","fillStyle","fillRect","drawBitArray","bits","bitc","console","log","stack","errorCorrectIndex","keys","capacity","versionSpecified","substr","clearRect","height","style",105,"typeNumber","modules","moduleCount","dataCache","dataList","QRDataArray","QR8bitByte","data","mode","QRMode","MODE_8BIT_BYTE","parsedData","QRPolynomial","undefined","offset","QRRSBlock","totalCount","dataCount","QRBitBuffer","newData","row","col","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","minLostPoint","pattern","lostPoint","QRUtil","getLostPoint","pos","getPatternPosition","getBCHTypeNumber","mod","Math","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","mask","getMask","PAD0","PAD1","rsBlocks","getRSBlocks","put","getLength","getLengthInBits","write","totalDataCount","putBit","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","modPoly","modIndex","totalCodeCount","index","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","L","M","Q","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","errorCorrectLength","a","multiply","QRMath","gexp","type","qrCode","sameCount","count","darkCount","ratio","abs","glog","n","LOG_TABLE","EXP_TABLE","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","bufIndex","bit",106,"to_utf8","bytes","start","end","by","idx","hi","collecting","find_pad_position","unmask","fcc","reduced","byt","len","String","fromCharCode",107,"source","target_start","source_start","source_end","fast_copy","slow_copy","jend","iend","Uint8Array","x",108,"size",109,"encoding","isArray","decoders","from_hex","str","buf","character","charAt","parseInt","from_utf","ch","charCodeAt","encodeURIComponent","split","jlen","from_base64","base64","hex","utf8",110,111,"targets","hint","get_length","cur","curlen","curidx","curoff","byteLength",112,"read_uint8","at","read_int8","v","read_uint16_le","dv","getUint16","byteOffset","read_uint32_le","getUint32","read_int16_le","getInt16","read_int32_le","getInt32","read_float_le","getFloat32","read_double_le","getFloat64","read_uint16_be","read_uint32_be","read_int16_be","read_int32_be","read_float_be","read_double_be","readUInt8","readInt8","readUInt16LE","readUInt32LE","readInt16LE","readInt32LE","readFloatLE","readDoubleLE","readUInt16BE","readUInt32BE","readInt16BE","readInt32BE","readFloatBE","readDoubleBE",113,114,"encoders","to_hex","toString","to_utf","toutf8","to_base64",115,"write_uint8","value","write_int8","write_uint16_le","setUint16","write_uint32_le","setUint32","write_int16_le","setInt16","write_int32_le","setInt32","write_float_le","setFloat32","write_double_le","setFloat64","write_uint16_be","write_uint32_be","write_int16_be","write_int32_be","write_float_be","write_double_be","writeUInt8","writeInt8","writeUInt16LE","writeUInt32LE","writeInt16LE","writeInt32LE","writeFloatLE","writeDoubleLE","writeUInt16BE","writeUInt32BE","writeInt16BE","writeInt32BE","writeFloatBE","writeDoubleBE",282,"_interopRequireDefault","obj","Object","defineProperty","_stringify","_stringify2","_qrcodeCanvas","_qrcodeCanvas2","attached","getMyQuickQuizs","myQuickquizs","components","methods","$http","then","response","generateLatestQuickQuizQrcode","_id","quickquiz_id","qrcodeData","id","qrcodedraw","document","getElementById","endLatestQuickQuiz","finished","post","filters",296,"sources","names","mappings","file","sourcesContent","sourceRoot",310,"content","locals",432,454,"__vue_script__","__vue_template__","template"],"mappings":"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","file":"4.d486a137c8a972e8b645.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 6:\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '2.3.0'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n\n/***/ 54:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(55), __esModule: true };\n\n/***/ },\n\n/***/ 55:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar core  = __webpack_require__(6)\n\t  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\n\tmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n\t  return $JSON.stringify.apply($JSON, arguments);\n\t};\n\n/***/ },\n\n/***/ 61:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar proto = {}\n\tmodule.exports = proto\n\t\n\tproto.from = __webpack_require__(109)\n\tproto.to = __webpack_require__(114)\n\tproto.is = __webpack_require__(110)\n\tproto.subarray = __webpack_require__(113)\n\tproto.join = __webpack_require__(111)\n\tproto.copy = __webpack_require__(107)\n\tproto.create = __webpack_require__(108)\n\t\n\tmix(__webpack_require__(112), proto)\n\tmix(__webpack_require__(115), proto)\n\t\n\tfunction mix(from, into) {\n\t  for(var key in from) {\n\t    into[key] = from[key]\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 62:\n/***/ function(module, exports) {\n\n\t(function (exports) {\n\t\t'use strict';\n\t\n\t\tvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\n\t\tfunction b64ToByteArray(b64) {\n\t\t\tvar i, j, l, tmp, placeHolders, arr;\n\t\t\n\t\t\tif (b64.length % 4 > 0) {\n\t\t\t\tthrow 'Invalid string. Length must be a multiple of 4';\n\t\t\t}\n\t\n\t\t\t// the number of equal signs (place holders)\n\t\t\t// if there are two placeholders, than the two characters before it\n\t\t\t// represent one byte\n\t\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t\t// this is just a cheap hack to not do indexOf twice\n\t\t\tplaceHolders = b64.indexOf('=');\n\t\t\tplaceHolders = placeHolders > 0 ? b64.length - placeHolders : 0;\n\t\n\t\t\t// base64 is 4/3 + up to two characters of the original data\n\t\t\tarr = [];//new Uint8Array(b64.length * 3 / 4 - placeHolders);\n\t\n\t\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length;\n\t\n\t\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\t\ttmp = (lookup.indexOf(b64[i]) << 18) | (lookup.indexOf(b64[i + 1]) << 12) | (lookup.indexOf(b64[i + 2]) << 6) | lookup.indexOf(b64[i + 3]);\n\t\t\t\tarr.push((tmp & 0xFF0000) >> 16);\n\t\t\t\tarr.push((tmp & 0xFF00) >> 8);\n\t\t\t\tarr.push(tmp & 0xFF);\n\t\t\t}\n\t\n\t\t\tif (placeHolders === 2) {\n\t\t\t\ttmp = (lookup.indexOf(b64[i]) << 2) | (lookup.indexOf(b64[i + 1]) >> 4);\n\t\t\t\tarr.push(tmp & 0xFF);\n\t\t\t} else if (placeHolders === 1) {\n\t\t\t\ttmp = (lookup.indexOf(b64[i]) << 10) | (lookup.indexOf(b64[i + 1]) << 4) | (lookup.indexOf(b64[i + 2]) >> 2);\n\t\t\t\tarr.push((tmp >> 8) & 0xFF);\n\t\t\t\tarr.push(tmp & 0xFF);\n\t\t\t}\n\t\n\t\t\treturn arr;\n\t\t}\n\t\n\t\tfunction uint8ToBase64(uint8) {\n\t\t\tvar i,\n\t\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\t\toutput = \"\",\n\t\t\t\ttemp, length;\n\t\n\t\t\tfunction tripletToBase64 (num) {\n\t\t\t\treturn lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n\t\t\t};\n\t\n\t\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n\t\t\t\toutput += tripletToBase64(temp);\n\t\t\t}\n\t\n\t\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\t\tswitch (extraBytes) {\n\t\t\t\tcase 1:\n\t\t\t\t\ttemp = uint8[uint8.length - 1];\n\t\t\t\t\toutput += lookup[temp >> 2];\n\t\t\t\t\toutput += lookup[(temp << 4) & 0x3F];\n\t\t\t\t\toutput += '==';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1]);\n\t\t\t\t\toutput += lookup[temp >> 10];\n\t\t\t\t\toutput += lookup[(temp >> 4) & 0x3F];\n\t\t\t\t\toutput += lookup[(temp << 2) & 0x3F];\n\t\t\t\t\toutput += '=';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\n\t\t\treturn output;\n\t\t}\n\t\n\t\tmodule.exports.toByteArray = b64ToByteArray;\n\t\tmodule.exports.fromByteArray = uint8ToBase64;\n\t}());\n\n\n/***/ },\n\n/***/ 63:\n/***/ function(module, exports) {\n\n\tvar proto\n\t  , map\n\t\n\tmodule.exports = proto = {}\n\t\n\tmap = typeof WeakMap === 'undefined' ? null : new WeakMap\n\t\n\tproto.get = !map ? no_weakmap_get : get\n\t\n\tfunction no_weakmap_get(target) {\n\t  return new DataView(target.buffer, 0)\n\t}\n\t\n\tfunction get(target) {\n\t  var out = map.get(target.buffer)\n\t  if(!out) {\n\t    map.set(target.buffer, out = new DataView(target.buffer, 0))\n\t  }\n\t  return out\n\t}\n\n\n/***/ },\n\n/***/ 103:\n/***/ function(module, exports) {\n\n\t/**\n\tthis contains the max string length for all qr code Versions in Binary Safe / Byte Mode\n\teach entry is in the order of error correct level\n\t\t[L,M,Q,H]\n\t\n\tthe qrcode lib sets strange values for QRErrorCorrectLevel having to do with masking against patterns\n\tthe maximum string length for error correct level H is 1273 characters long.\n\t*/\n\t\n\texports.QRCapacityTable = [\n\t[17,14,11,7]\n\t,[32,26,20,14]\n\t,[53,42,32,24]\n\t,[78,62,46,34]\n\t,[106,84,60,44]\n\t,[134,106,74,58]\n\t,[154,122,86,64]\n\t,[192,152,108,84]\n\t,[230,180,130,98]\n\t,[271,213,151,119]\n\t,[321,251,177,137]//11\n\t,[367,287,203,155]\n\t,[425,331,241,177]\n\t,[458,362,258,194]\n\t,[520,412,292,220]\n\t,[586,450,322,250]\n\t,[644,504,364,280]\n\t,[718,560,394,310]\n\t,[792,624,442,338]\n\t,[858,666,482,382]\n\t,[929,711,509,403]\n\t,[1003,779,565,439]\n\t,[1091,857,611,461]\n\t,[1171,911,661,511]//24\n\t,[1273,997,715,535]\n\t,[1367,1059,751,593]\n\t,[1465,1125,805,625]\n\t,[1528,1190,868,658]//28\n\t,[1628,1264,908,698]\n\t,[1732,1370,982,742]\n\t,[1840,1452,1030,790]\n\t,[1952,1538,1112,842]//32\n\t,[2068,1628,1168,898]\n\t,[2188,1722,1228,958]\n\t,[2303,1809,1283,983]\n\t,[2431,1911,1351,1051]//36\n\t,[2563,1989,1423,1093]\n\t,[2699,2099,1499,1139]\n\t,[2809,2213,1579,1219]\n\t,[2953,2331,1663,1273]//40\n\t];\n\n\n/***/ },\n\n/***/ 104:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t* copyright 2010-2012 Ryan Day\n\t* http://github.com/soldair/node-qrcode\n\t*\n\t* Licensed under the MIT license:\n\t*   http://www.opensource.org/licenses/mit-license.php\n\t*\n\t* canvas example and fallback support example provided by Joshua Koo\n\t*\thttp://jabtunes.com/labs/qrcode.html\n\t*\t\"Instant QRCode Mashup by Joshua Koo!\"\n\t*\tas far as i can tell the page and the code on the page are public domain \n\t*\t\n\t* original table example and library provided by Kazuhiko Arase\n\t*\thttp://d-project.googlecode.com/svn/trunk/misc/qrcode/js/\n\t*\n\t*/\n\t\n\tvar bops = __webpack_require__(61)\n\tvar QRCodeLib = __webpack_require__(105);\n\tvar QRVersionCapacityTable = __webpack_require__(103).QRCapacityTable;\n\tvar QRCode = QRCodeLib.QRCode;\n\t\n\texports.QRCodeDraw = QRCodeDraw;\n\texports.QRVersionCapacityTable = QRVersionCapacityTable;\n\texports.QRErrorCorrectLevel = QRCodeLib.QRErrorCorrectLevel;\n\texports.QRCode = QRCodeLib.QRCode;\n\t\n\tfunction QRCodeDraw(){}\n\t\n\tQRCodeDraw.prototype = {\n\t  scale:4,//4 px module size\n\t  defaultMargin:20,\n\t  marginScaleFactor:5,\n\t  Array:(typeof Uint32Array == 'undefined'?Uint32Array:Array),\n\t  // you may configure the error behavior for input string too long\n\t  errorBehavior:{\n\t    length:'trim'\n\t  },\n\t  color:{\n\t    dark:'black',\n\t    light:'white'\n\t  },\n\t  defaultErrorCorrectLevel:QRCodeLib.QRErrorCorrectLevel.H,\n\t  QRErrorCorrectLevel:QRCodeLib.QRErrorCorrectLevel,\n\t  draw:function(canvas,text,options,cb){\n\t\n\t    var level,\n\t    error,\n\t    errorCorrectLevel;\n\t    \n\t    var args = Array.prototype.slice.call(arguments);\n\t    cb = args.pop(); \n\t    canvas = args.shift();\n\t    text = args.shift();\n\t    options = args.shift()||{};\n\t\n\t    \n\t    if(typeof cb != 'function') {\n\t      //enforce callback api just in case the processing can be made async in the future\n\t      // or support proc open to libqrencode\n\t      throw new Error('callback required');\n\t    }\n\t    \n\t    if(typeof options !== \"object\"){\n\t      options.errorCorrectLevel = options;\n\t    }\n\t    \n\t\n\t    this.QRVersion(\n\t      text\n\t      ,options.errorCorrectLevel||this.QRErrorCorrectLevel.H\n\t      ,options.version\n\t    ,function(e,t,l,ec){\n\t\n\t      text = t,level = l,error = e,errorCorrectLevel = ec;\n\t    });\n\t\n\t    this.scale = options.scale||this.scale;\n\t    this.margin = typeof(options.margin) === 'undefined' ? this.defaultMargin : options.margin;\n\t    \n\t    if(!level) {\n\t      //if we are unable to find an appropriate qr level error out\n\t      cb(error,canvas);\n\t      return;\n\t    }\n\t\n\t    //create qrcode!\n\t    try{\n\t      \n\t      var qr = new QRCodeLib.QRCode(level, errorCorrectLevel)\n\t      , scale = this.scale||4\n\t      , ctx = canvas.getContext('2d')\n\t      , width = 0;\n\t\n\t      qr.addData(text);\n\t      qr.make();\n\t\n\t      var margin = this.marginWidth();\n\t      var currenty = margin;\n\t      width = this.dataWidth(qr)+ margin*2;\n\t      \n\t      this.resetCanvas(canvas,ctx,width);\n\t\n\t      for (var r = 0,rl=qr.getModuleCount(); r < rl; r++) {\n\t        var currentx = margin;\n\t        for (var c = 0,cl=qr.getModuleCount(); c < cl; c++) {\n\t          if (qr.isDark(r, c) ) {\n\t            ctx.fillStyle = this.color.dark;\n\t            ctx.fillRect (currentx, currenty, scale, scale);\n\t          } else if(this.color.light){\n\t            //if falsy configured color\n\t            ctx.fillStyle = this.color.light;\n\t            ctx.fillRect (currentx, currenty, scale, scale);\n\t          }\n\t          currentx += scale;\n\t        }\n\t        currenty += scale;\n\t      }\n\t    } catch (e) {\n\t      error = e;\n\t    }\n\t    \n\t    cb(error,canvas,width);    \n\t  },\n\t  drawBitArray:function(text/*,errorCorrectLevel,options,cb*/) {\n\t\n\t    var args = Array.prototype.slice.call(arguments),\n\t      cb = args.pop(),\n\t      text = args.shift(),\n\t      errorCorrectLevel = args.shift(),\n\t      options = args.shift() || {};\n\t\n\t    //argument processing\n\t    if(typeof cb != 'function') {\n\t      //enforce callback api just in case the processing can be made async in the future\n\t      // or support proc open to libqrencode\n\t      throw new Error('callback required as last argument');\n\t    }\n\t    \n\t    cb = arguments[arguments.length-1]; \n\t    \n\t    if(arguments.length > 2){\n\t      errorCorrectLevel = arguments[2];\n\t    }\n\t\n\t\n\t    //this interface kinda sucks - there is very small likelyhood of this ever being async\n\t    this.QRVersion(text,errorCorrectLevel,(options||{}).version,function(e,t,l,ec){\n\t      text = t,level = l,error = e,errorCorrectLevel = ec;\n\t    });\n\t\n\t\n\t    if(!level) {\n\t      //if we are unable to find an appropriate qr level error out\n\t      cb(error,[],0);\n\t      return;\n\t    }\n\t\n\t    //create qrcode!\n\t    try{\n\t\n\t      var qr = new QRCodeLib.QRCode(level, errorCorrectLevel)\n\t      , scale = this.scale||4\n\t      , width = 0,bits,bitc=0,currenty=0;\n\t      \n\t      qr.addData(text);\n\t      qr.make();\n\t      \n\t      width = this.dataWidth(qr,1);\n\t      bits = new this.Array(width*width);\n\t\n\t      \n\t      for (var r = 0,rl=qr.getModuleCount(); r < rl; r++) {\n\t        for (var c = 0,cl=qr.getModuleCount(); c < cl; c++) {\n\t          if (qr.isDark(r, c) ) {\n\t            bits[bitc] = 1;\n\t          } else {\n\t            bits[bitc] = 0;\n\t          }\n\t          bitc++;\n\t        }\n\t      }\n\t    } catch (e) {\n\t      error = e;\n\t      console.log(e.stack);\n\t    }\n\t    \n\t    cb(error,bits,width);\n\t  },\n\t  QRVersion:function(text,errorCorrectLevel,version,cb){\n\t    var c = bops.from(text).length,// BINARY LENGTH!\n\t        error,\n\t        errorCorrectLevel = this.QRErrorCorrectLevel[errorCorrectLevel]||this.defaultErrorCorrectLevel,\n\t        errorCorrectIndex = [1,0,3,2],//fix odd mapping to order in table\n\t        keys = ['L','M','Q','H'],\n\t        capacity = 0,\n\t        versionSpecified = false;\n\t        \n\t    if(typeof version !== \"undefined\" && version !== null) {\n\t      versionSpecified = true;\n\t    }\n\t    //TODO ADD THROW FOR INVALID errorCorrectLevel...?\n\t    \n\t    if(versionSpecified){\n\t      //console.log('SPECIFIED VERSION! ',version);\n\t      //i have specified a version. this will give me a fixed size qr code. version must be valid. 1-40\n\t      capacity = QRVersionCapacityTable[version][errorCorrectIndex[errorCorrectLevel]];\n\t      \n\t    } else {\n\t      //figure out what version can hold the amount of text\n\t      for(var i=0,j=QRVersionCapacityTable.length;i<j;i++) {\n\t        capacity = QRVersionCapacityTable[i][errorCorrectIndex[errorCorrectLevel]];\n\t        if(c < QRVersionCapacityTable[i][errorCorrectIndex[errorCorrectLevel]]){\n\t          version = i+1;\n\t          break;\n\t        }\n\t      }\n\t      //if not version set to max\n\t      if(!version) {\n\t        version = QRVersionCapacityTable.length-1;\n\t      }\n\t    }\n\t    \n\t    if(capacity < c){\n\t      if(this.errorBehavior.length == 'trim'){\n\t        text = text.substr(0,capacity);\n\t        level = QRVersionCapacityTable.length; \n\t      } else {\n\t        error = new Error('input string too long for error correction '\n\t          +keys[errorCorrectIndex[errorCorrectLevel]]\n\t          +' max length '\n\t          + capacity\n\t          +' for qrcode version '+version\n\t        );\n\t      }\n\t    }\n\t  \n\t    if(cb) {\n\t      cb(error,text,version,errorCorrectLevel);\n\t    }\n\t    return version;\n\t  },\n\t  marginWidth:function(){\n\t    var margin = this.margin;\n\t    this.scale = this.scale||4;\n\t    //elegant white space next to code is required by spec\n\t    if ((this.scale * this.marginScaleFactor > margin) && margin > 0){\n\t      margin = this.scale * this.marginScaleFactor;\n\t    }\n\t    return margin;\n\t  },\n\t  dataWidth:function(qr,scale){\n\t    return qr.getModuleCount()*(scale||this.scale||4);\n\t  },\n\t  resetCanvas:function(canvas,ctx,width){\n\t    ctx.clearRect(0,0,canvas.width,canvas.height);\n\t    if(!canvas.style) canvas.style = {};\n\t    canvas.style.height = canvas.height = width;//square!\n\t    canvas.style.width = canvas.width = width;\n\t    \n\t    if(this.color.light){\n\t      ctx.fillStyle = this.color.light; \n\t      ctx.fillRect(0,0,canvas.width,canvas.height);\n\t    } else {\n\t      //support transparent backgrounds?\n\t      //not exactly to spec but i really would like someone to be able to add a background with heavily reduced luminosity for simple branding\n\t      //i could just ditch this because you could also just set #******00 as the color =P\n\t      ctx.clearRect(0,0,canvas.width,canvas.height);\n\t    }\n\t  }\n\t};\n\t\n\n\n/***/ },\n\n/***/ 105:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar bops = __webpack_require__(61);\n\t\n\t/**\n\t * QRCode for JavaScript\n\t *\n\t * modified by Ryan Day for nodejs support\n\t * Copyright (c) 2011 Ryan Day\n\t *\n\t * Licensed under the MIT license:\n\t *   http://www.opensource.org/licenses/mit-license.php\n\t *\n\t * EXPORTS:\n\t *\t{\n\t *\tQRCode:QRCode\n\t *\tQRErrorCorrectLevel:QRErrorCorrectLevel\n\t *\t}\n\t//---------------------------------------------------------------------\n\t// QRCode for JavaScript\n\t//\n\t// Copyright (c) 2009 Kazuhiko Arase\n\t//\n\t// URL: http://www.d-project.com/\n\t//\n\t// Licensed under the MIT license:\n\t//   http://www.opensource.org/licenses/mit-license.php\n\t//\n\t// The word \"QR Code\" is registered trademark of \n\t// DENSO WAVE INCORPORATED\n\t//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n\t//\n\t//---------------------------------------------------------------------\n\t*/\n\t\n\t//---------------------------------------------------------------------\n\t// QRCode\n\t//---------------------------------------------------------------------\n\t\n\texports.QRCode = QRCode;\n\t\n\tvar QRDataArray = (typeof Uint32Array == 'undefined'?Uint32Array:Array);\n\t\n\tfunction QRCode(typeNumber, errorCorrectLevel) {\n\t\tthis.typeNumber = typeNumber;\n\t\tthis.errorCorrectLevel = errorCorrectLevel;\n\t\tthis.modules = null;\n\t\tthis.moduleCount = 0;\n\t\tthis.dataCache = null;\n\t\tthis.dataList = new QRDataArray();\n\t}\n\t\n\tQRCode.prototype = {\n\t\t\n\t\taddData : function(data) {\n\t\t\tvar newData = new QR8bitByte(data);\n\t\n\t\t\tthis.dataList.push(newData);\n\t\t\tthis.dataCache = null;\n\t\t},\n\t\t\n\t\tisDark : function(row, col) {\n\t\t\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\t\t\tthrow new Error(row + \",\" + col);\n\t\t\t}\n\t\t\treturn this.modules[row][col];\n\t\t},\n\t\n\t\tgetModuleCount : function() {\n\t\t\treturn this.moduleCount;\n\t\t},\n\t\t\n\t\tmake : function() {\n\t\t\tthis.makeImpl(false, this.getBestMaskPattern() );\n\t\t},\n\t\t\n\t\tmakeImpl : function(test, maskPattern) {\n\t\t\t\n\t\t\tthis.moduleCount = this.typeNumber * 4 + 17;\n\t\t\tthis.modules = new QRDataArray(this.moduleCount);\n\t\t\t\n\t\t\tfor (var row = 0; row < this.moduleCount; row++) {\n\t\t\t\t\n\t\t\t\tthis.modules[row] = new QRDataArray(this.moduleCount);\n\t\t\t\t\n\t\t\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tthis.setupPositionProbePattern(0, 0);\n\t\t\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\t\t\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\t\t\tthis.setupPositionAdjustPattern();\n\t\t\tthis.setupTimingPattern();\n\t\t\tthis.setupTypeInfo(test, maskPattern);\n\t\t\t\n\t\t\tif (this.typeNumber >= 7) {\n\t\t\t\tthis.setupTypeNumber(test);\n\t\t\t}\n\t\t\n\t\t\tif (this.dataCache == null) {\n\t\t\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t\t\t}\n\t\t\n\t\t\tthis.mapData(this.dataCache, maskPattern);\n\t\t},\n\t\n\t\tsetupPositionProbePattern : function(row, col)  {\n\t\t\t\n\t\t\tfor (var r = -1; r <= 7; r++) {\n\t\t\t\t\n\t\t\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\t\t\t\t\n\t\t\t\tfor (var c = -1; c <= 7; c++) {\n\t\t\t\t\t\n\t\t\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\t\t\t\t\t\n\t\t\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n\t\t\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\n\t\t\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t}\n\t\t\t\t}\t\t\n\t\t\t}\t\t\n\t\t},\n\t\t\n\t\tgetBestMaskPattern : function() {\n\t\t\n\t\t\tvar minLostPoint = 0;\n\t\t\tvar pattern = 0;\n\t\t\n\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\t\n\t\t\t\tthis.makeImpl(true, i);\n\t\t\n\t\t\t\tvar lostPoint = QRUtil.getLostPoint(this);\n\t\t\n\t\t\t\tif (i == 0 || minLostPoint >  lostPoint) {\n\t\t\t\t\tminLostPoint = lostPoint;\n\t\t\t\t\tpattern = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\treturn pattern;\n\t\t},\n\t\n\t\tsetupTimingPattern : function() {\n\t\t\t\n\t\t\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\t\t\tif (this.modules[r][6] != null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.modules[r][6] = (r % 2 == 0);\n\t\t\t}\n\t\t\n\t\t\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\t\t\tif (this.modules[6][c] != null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.modules[6][c] = (c % 2 == 0);\n\t\t\t}\n\t\t},\n\t\t\n\t\tsetupPositionAdjustPattern : function() {\n\t\t\n\t\t\tvar pos = QRUtil.getPatternPosition(this.typeNumber);\n\t\t\tpos = pos || '';\n\t\t\tfor (var i = 0; i < pos.length; i++) {\n\t\t\t\n\t\t\t\tfor (var j = 0; j < pos.length; j++) {\n\t\t\t\t\n\t\t\t\t\tvar row = pos[i];\n\t\t\t\t\tvar col = pos[j];\n\t\t\t\t\t\n\t\t\t\t\tif (this.modules[row][col] != null) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var r = -2; r <= 2; r++) {\n\t\t\t\t\t\n\t\t\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2 \n\t\t\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\n\t\t\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tsetupTypeNumber : function(test) {\n\t\t\n\t\t\tvar bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n\t\t\n\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t\t\t}\n\t\t\n\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t\t\t}\n\t\t},\n\t\t\n\t\tsetupTypeInfo : function(test, maskPattern) {\n\t\t\n\t\t\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\t\t\tvar bits = QRUtil.getBCHTypeInfo(data);\n\t\t\n\t\t\t// vertical\t\t\n\t\t\tfor (var i = 0; i < 15; i++) {\n\t\t\n\t\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\n\t\t\t\tif (i < 6) {\n\t\t\t\t\tthis.modules[i][8] = mod;\n\t\t\t\t} else if (i < 8) {\n\t\t\t\t\tthis.modules[i + 1][8] = mod;\n\t\t\t\t} else {\n\t\t\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t// horizontal\n\t\t\tfor (var i = 0; i < 15; i++) {\n\t\t\n\t\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\t\t\n\t\t\t\tif (i < 8) {\n\t\t\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n\t\t\t\t} else if (i < 9) {\n\t\t\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n\t\t\t\t} else {\n\t\t\t\t\tthis.modules[8][15 - i - 1] = mod;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t// fixed module\n\t\t\tthis.modules[this.moduleCount - 8][8] = (!test);\n\t\t\n\t\t},\n\t\t\n\t\tmapData : function(data, maskPattern) {\n\t\t\t\n\t\t\tvar inc = -1;\n\t\t\tvar row = this.moduleCount - 1;\n\t\t\tvar bitIndex = 7;\n\t\t\tvar byteIndex = 0;\n\t\t\t\n\t\t\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\t\t\n\t\t\t\tif (col == 6) col--;\n\t\t\n\t\t\t\twhile (true) {\n\t\t\n\t\t\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.modules[row][col - c] == null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar dark = false;\n\t\t\n\t\t\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\tvar mask = QRUtil.getMask(maskPattern, row, col - c);\n\t\t\n\t\t\t\t\t\t\tif (mask) {\n\t\t\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\t\t\tbitIndex--;\n\t\t\n\t\t\t\t\t\t\tif (bitIndex == -1) {\n\t\t\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\trow += inc;\n\t\t\n\t\t\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\t\t\trow -= inc;\n\t\t\t\t\t\tinc = -inc;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\n\t};\n\t\n\tQRCode.PAD0 = 0xEC;\n\tQRCode.PAD1 = 0x11;\n\t\n\tQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\n\t\t\n\t\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\t\t\n\t\tvar buffer = new QRBitBuffer();\n\t\t\n\t\tfor (var i = 0; i < dataList.length; i++) {\n\t\t\tvar data = dataList[i];\n\t\t\tbuffer.put(data.mode, 4);\n\t\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber) );\n\t\t\tdata.write(buffer);\n\t\t}\n\t\n\t\t// calc num max data.\n\t\tvar totalDataCount = 0;\n\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t}\n\t\n\t\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\t\tthrow new Error(\"code length overflow. (\"\n\t\t\t\t+ buffer.getLengthInBits()\n\t\t\t\t+ \">\"\n\t\t\t\t+  totalDataCount * 8\n\t\t\t\t+ \")\");\n\t\t}\n\t\n\t\t// end code\n\t\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\t\tbuffer.put(0, 4);\n\t\t}\n\t\n\t\t// padding\n\t\twhile (buffer.getLengthInBits() % 8 != 0) {\n\t\t\tbuffer.putBit(false);\n\t\t}\n\t\n\t\t// padding\n\t\twhile (true) {\n\t\t\t\n\t\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuffer.put(QRCode.PAD0, 8);\n\t\t\t\n\t\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuffer.put(QRCode.PAD1, 8);\n\t\t}\n\t\n\t\treturn QRCode.createBytes(buffer, rsBlocks);\n\t};\n\t\n\tQRCode.createBytes = function(buffer, rsBlocks) {\n\t\n\t\tvar offset = 0;\n\t\t\n\t\tvar maxDcCount = 0;\n\t\tvar maxEcCount = 0;\n\t\t\n\t\tvar dcdata = new QRDataArray(rsBlocks.length);\n\t\tvar ecdata = new QRDataArray(rsBlocks.length);\n\t\t\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\n\t\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\t\n\t\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\t\t\t\n\t\t\tdcdata[r] = new QRDataArray(dcCount);\n\t\t\t\n\t\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t\t}\n\t\t\toffset += dcCount;\n\t\t\t\n\t\t\tvar rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n\t\t\tvar rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\t\n\t\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\t\tecdata[r] = new QRDataArray(rsPoly.getLength() - 1);\n\t\t\tfor (var i = 0; i < ecdata[r].length; i++) {\n\t            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\n\t\t\t}\n\t\n\t\t}\n\t\t\n\t\tvar totalCodeCount = 0;\n\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\ttotalCodeCount += rsBlocks[i].totalCount;\n\t\t}\n\t\n\t\tvar data = new QRDataArray(totalCodeCount);\n\t\tvar index = 0;\n\t\n\t\tfor (var i = 0; i < maxDcCount; i++) {\n\t\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\t\tif (i < dcdata[r].length) {\n\t\t\t\t\tdata[index++] = dcdata[r][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfor (var i = 0; i < maxEcCount; i++) {\n\t\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\t\tif (i < ecdata[r].length) {\n\t\t\t\t\tdata[index++] = ecdata[r][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn data;\n\t\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QR8bitByte\n\t//---------------------------------------------------------------------\n\tfunction QR8bitByte(data) {\n\t  this.mode = QRMode.MODE_8BIT_BYTE;\n\t  this.data = data;\n\t  var byteArray = [];\n\t  \n\t  this.parsedData = bops.from(data);\n\t}\n\t\n\tQR8bitByte.prototype = {\n\t  getLength: function (buffer) {\n\t    return this.parsedData.length;\n\t  },\n\t  write: function (buffer) {\n\t    for (var i = 0, l = this.parsedData.length; i < l; i++) {\n\t      buffer.put(this.parsedData[i], 8);\n\t    }\n\t  }\n\t};\n\t\n\t\n\t//---------------------------------------------------------------------\n\t// QRMode\n\t//---------------------------------------------------------------------\n\t\n\tvar QRMode = {\n\t\tMODE_NUMBER :\t\t1 << 0,\n\t\tMODE_ALPHA_NUM : \t1 << 1,\n\t\tMODE_8BIT_BYTE : \t1 << 2,\n\t\tMODE_KANJI :\t\t1 << 3\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QRErrorCorrectLevel\n\t//---------------------------------------------------------------------\n\t//exported\n\t\n\tvar QRErrorCorrectLevel = exports.QRErrorCorrectLevel = {\n\t\tL : 1,\n\t\tM : 0,\n\t\tQ : 3,\n\t\tH : 2\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QRMaskPattern\n\t//---------------------------------------------------------------------\n\t\n\tvar QRMaskPattern =  {\n\t\tPATTERN000 : 0,\n\t\tPATTERN001 : 1,\n\t\tPATTERN010 : 2,\n\t\tPATTERN011 : 3,\n\t\tPATTERN100 : 4,\n\t\tPATTERN101 : 5,\n\t\tPATTERN110 : 6,\n\t\tPATTERN111 : 7\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QRUtil\n\t//---------------------------------------------------------------------\n\t \n\tvar QRUtil = {\n\t\n\t    PATTERN_POSITION_TABLE : [\n\t\t    [],\n\t\t    [6, 18],\n\t\t    [6, 22],\n\t\t    [6, 26],\n\t\t    [6, 30],\n\t\t    [6, 34],\n\t\t    [6, 22, 38],\n\t\t    [6, 24, 42],\n\t\t    [6, 26, 46],\n\t\t    [6, 28, 50],\n\t\t    [6, 30, 54],\t\t\n\t\t    [6, 32, 58],\n\t\t    [6, 34, 62],\n\t\t    [6, 26, 46, 66],\n\t\t    [6, 26, 48, 70],\n\t\t    [6, 26, 50, 74],\n\t\t    [6, 30, 54, 78],\n\t\t    [6, 30, 56, 82],\n\t\t    [6, 30, 58, 86],\n\t\t    [6, 34, 62, 90],\n\t\t    [6, 28, 50, 72, 94],\n\t\t    [6, 26, 50, 74, 98],\n\t\t    [6, 30, 54, 78, 102],\n\t\t    [6, 28, 54, 80, 106],\n\t\t    [6, 32, 58, 84, 110],\n\t\t    [6, 30, 58, 86, 114],\n\t\t    [6, 34, 62, 90, 118],\n\t\t    [6, 26, 50, 74, 98, 122],\n\t\t    [6, 30, 54, 78, 102, 126],\n\t\t    [6, 26, 52, 78, 104, 130],\n\t\t    [6, 30, 56, 82, 108, 134],\n\t\t    [6, 34, 60, 86, 112, 138],\n\t\t    [6, 30, 58, 86, 114, 142],\n\t\t    [6, 34, 62, 90, 118, 146],\n\t\t    [6, 30, 54, 78, 102, 126, 150],\n\t\t    [6, 24, 50, 76, 102, 128, 154],\n\t\t    [6, 28, 54, 80, 106, 132, 158],\n\t\t    [6, 32, 58, 84, 110, 136, 162],\n\t\t    [6, 26, 54, 82, 110, 138, 166],\n\t\t    [6, 30, 58, 86, 114, 142, 170]\n\t    ],\n\t\n\t    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n\t    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n\t    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\n\t\n\t    getBCHTypeInfo : function(data) {\n\t\t    var d = data << 10;\n\t\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\n\t\t    }\n\t\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n\t    },\n\t\n\t    getBCHTypeNumber : function(data) {\n\t\t    var d = data << 12;\n\t\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\n\t\t    }\n\t\t    return (data << 12) | d;\n\t    },\n\t\n\t    getBCHDigit : function(data) {\n\t\n\t\t    var digit = 0;\n\t\n\t\t    while (data != 0) {\n\t\t\t    digit++;\n\t\t\t    data >>>= 1;\n\t\t    }\n\t\n\t\t    return digit;\n\t    },\n\t\n\t    getPatternPosition : function(typeNumber) {\n\t\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n\t    },\n\t\n\t    getMask : function(maskPattern, i, j) {\n\t\t    \n\t\t    switch (maskPattern) {\n\t\t\t    \n\t\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\n\t\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\n\t\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\n\t\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\n\t\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\n\t\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\n\t\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\n\t\n\t\t    default :\n\t\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\n\t\t    }\n\t    },\n\t\n\t    getErrorCorrectPolynomial : function(errorCorrectLength) {\n\t\n\t\t    var a = new QRPolynomial([1], 0);\n\t\n\t\t    for (var i = 0; i < errorCorrectLength; i++) {\n\t\t\t    a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0) );\n\t\t    }\n\t\n\t\t    return a;\n\t    },\n\t\n\t    getLengthInBits : function(mode, type) {\n\t\n\t\t    if (1 <= type && type < 10) {\n\t\n\t\t\t    // 1 - 9\n\t\n\t\t\t    switch(mode) {\n\t\t\t    case QRMode.MODE_NUMBER \t: return 10;\n\t\t\t    case QRMode.MODE_ALPHA_NUM \t: return 9;\n\t\t\t    case QRMode.MODE_8BIT_BYTE\t: return 8;\n\t\t\t    case QRMode.MODE_KANJI  \t: return 8;\n\t\t\t    default :\n\t\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t\t    }\n\t\n\t\t    } else if (type < 27) {\n\t\n\t\t\t    // 10 - 26\n\t\n\t\t\t    switch(mode) {\n\t\t\t    case QRMode.MODE_NUMBER \t: return 12;\n\t\t\t    case QRMode.MODE_ALPHA_NUM \t: return 11;\n\t\t\t    case QRMode.MODE_8BIT_BYTE\t: return 16;\n\t\t\t    case QRMode.MODE_KANJI  \t: return 10;\n\t\t\t    default :\n\t\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t\t    }\n\t\n\t\t    } else if (type < 41) {\n\t\n\t\t\t    // 27 - 40\n\t\n\t\t\t    switch(mode) {\n\t\t\t    case QRMode.MODE_NUMBER \t: return 14;\n\t\t\t    case QRMode.MODE_ALPHA_NUM\t: return 13;\n\t\t\t    case QRMode.MODE_8BIT_BYTE\t: return 16;\n\t\t\t    case QRMode.MODE_KANJI  \t: return 12;\n\t\t\t    default :\n\t\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t\t    }\n\t\n\t\t    } else {\n\t\t\t    throw new Error(\"type:\" + type);\n\t\t    }\n\t    },\n\t\n\t    getLostPoint : function(qrCode) {\n\t\t    \n\t\t    var moduleCount = qrCode.getModuleCount();\n\t\t    \n\t\t    var lostPoint = 0;\n\t\t    \n\t\t    // LEVEL1\n\t\t    \n\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\n\t\t\t    for (var col = 0; col < moduleCount; col++) {\n\t\n\t\t\t\t    var sameCount = 0;\n\t\t\t\t    var dark = qrCode.isDark(row, col);\n\t\n\t\t\t\t\tfor (var r = -1; r <= 1; r++) {\n\t\n\t\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\t\n\t\t\t\t\t    for (var c = -1; c <= 1; c++) {\n\t\n\t\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\n\t\t\t\t\t\t\t    continue;\n\t\t\t\t\t\t    }\n\t\n\t\t\t\t\t\t    if (r == 0 && c == 0) {\n\t\t\t\t\t\t\t    continue;\n\t\t\t\t\t\t    }\n\t\n\t\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\n\t\t\t\t\t\t\t    sameCount++;\n\t\t\t\t\t\t    }\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\n\t\t\t\t    if (sameCount > 5) {\n\t\t\t\t\t    lostPoint += (3 + sameCount - 5);\n\t\t\t\t    }\n\t\t\t    }\n\t\t    }\n\t\n\t\t    // LEVEL2\n\t\n\t\t    for (var row = 0; row < moduleCount - 1; row++) {\n\t\t\t    for (var col = 0; col < moduleCount - 1; col++) {\n\t\t\t\t    var count = 0;\n\t\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\n\t\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\n\t\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\n\t\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\n\t\t\t\t    if (count == 0 || count == 4) {\n\t\t\t\t\t    lostPoint += 3;\n\t\t\t\t    }\n\t\t\t    }\n\t\t    }\n\t\n\t\t    // LEVEL3\n\t\n\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\t\t    for (var col = 0; col < moduleCount - 6; col++) {\n\t\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\n\t\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\n\t\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\n\t\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\n\t\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\n\t\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\n\t\t\t\t\t    lostPoint += 40;\n\t\t\t\t    }\n\t\t\t    }\n\t\t    }\n\t\n\t\t    for (var col = 0; col < moduleCount; col++) {\n\t\t\t    for (var row = 0; row < moduleCount - 6; row++) {\n\t\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\n\t\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\n\t\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\n\t\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\n\t\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\n\t\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\n\t\t\t\t\t    lostPoint += 40;\n\t\t\t\t    }\n\t\t\t    }\n\t\t    }\n\t\n\t\t    // LEVEL4\n\t\t    \n\t\t    var darkCount = 0;\n\t\n\t\t    for (var col = 0; col < moduleCount; col++) {\n\t\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\t\t\t    if (qrCode.isDark(row, col) ) {\n\t\t\t\t\t    darkCount++;\n\t\t\t\t    }\n\t\t\t    }\n\t\t    }\n\t\t    \n\t\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t\t    lostPoint += ratio * 10;\n\t\n\t\t    return lostPoint;\t\t\n\t    }\n\t\n\t};\n\t\n\t\n\t//---------------------------------------------------------------------\n\t// QRMath\n\t//---------------------------------------------------------------------\n\t\n\tvar QRMath = {\n\t\n\t\tglog : function(n) {\n\t\t\n\t\t\tif (n < 1) {\n\t\t\t\tthrow new Error(\"glog(\" + n + \")\");\n\t\t\t}\n\t\t\t\n\t\t\treturn QRMath.LOG_TABLE[n];\n\t\t},\n\t\t\n\t\tgexp : function(n) {\n\t\t\n\t\t\twhile (n < 0) {\n\t\t\t\tn += 255;\n\t\t\t}\n\t\t\n\t\t\twhile (n >= 256) {\n\t\t\t\tn -= 255;\n\t\t\t}\n\t\t\n\t\t\treturn QRMath.EXP_TABLE[n];\n\t\t},\n\t\t\n\t\tEXP_TABLE : new Array(256),\n\t\t\n\t\tLOG_TABLE : new Array(256)\n\t\n\t};\n\t\t\n\tfor (var i = 0; i < 8; i++) {\n\t\tQRMath.EXP_TABLE[i] = 1 << i;\n\t}\n\tfor (var i = 8; i < 256; i++) {\n\t\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n\t\t\t^ QRMath.EXP_TABLE[i - 5]\n\t\t\t^ QRMath.EXP_TABLE[i - 6]\n\t\t\t^ QRMath.EXP_TABLE[i - 8];\n\t}\n\tfor (var i = 0; i < 255; i++) {\n\t\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\n\t}\n\t\n\t//---------------------------------------------------------------------\n\t// QRPolynomial\n\t//---------------------------------------------------------------------\n\t\n\tfunction QRPolynomial(num, shift) {\n\t\n\t\tif (num.length == undefined) {\n\t\t\tthrow new Error(num.length + \"/\" + shift);\n\t\t}\n\t\n\t\tvar offset = 0;\n\t\n\t\twhile (offset < num.length && num[offset] == 0) {\n\t\t\toffset++;\n\t\t}\n\t\n\t\tthis.num = new Array(num.length - offset + shift);\n\t\tfor (var i = 0; i < num.length - offset; i++) {\n\t\t\tthis.num[i] = num[i + offset];\n\t\t}\n\t}\n\t\n\tQRPolynomial.prototype = {\n\t\n\t\tget : function(index) {\n\t\t\treturn this.num[index];\n\t\t},\n\t\t\n\t\tgetLength : function() {\n\t\t\treturn this.num.length;\n\t\t},\n\t\t\n\t\tmultiply : function(e) {\n\t\t\n\t\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n\t\t\n\t\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\t\tnum[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i) ) + QRMath.glog(e.get(j) ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\treturn new QRPolynomial(num, 0);\n\t\t},\n\t\t\n\t\tmod : function(e) {\n\t\t\n\t\t\tif (this.getLength() - e.getLength() < 0) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\n\t\t\tvar ratio = QRMath.glog(this.get(0) ) - QRMath.glog(e.get(0) );\n\t\t\n\t\t\tvar num = new Array(this.getLength() );\n\t\t\t\n\t\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\t\tnum[i] = this.get(i);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\t\tnum[i] ^= QRMath.gexp(QRMath.glog(e.get(i) ) + ratio);\n\t\t\t}\n\t\t\n\t\t\t// recursive call\n\t\t\treturn new QRPolynomial(num, 0).mod(e);\n\t\t}\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QRRSBlock\n\t//---------------------------------------------------------------------\n\t\n\tfunction QRRSBlock(totalCount, dataCount) {\n\t\tthis.totalCount = totalCount;\n\t\tthis.dataCount  = dataCount;\n\t}\n\t\n\tQRRSBlock.RS_BLOCK_TABLE = [\n\t// L\n\t// M\n\t// Q\n\t// H\n\t\n\t// 1\n\t[1, 26, 19],\n\t[1, 26, 16],\n\t[1, 26, 13],\n\t[1, 26, 9],\n\t// 2\n\t[1, 44, 34],\n\t[1, 44, 28],\n\t[1, 44, 22],\n\t[1, 44, 16],\n\t// 3\n\t[1, 70, 55],\n\t[1, 70, 44],\n\t[2, 35, 17],\n\t[2, 35, 13],\n\t// 4\t\t\n\t[1, 100, 80],\n\t[2, 50, 32],\n\t[2, 50, 24],\n\t[4, 25, 9],\n\t// 5\n\t[1, 134, 108],\n\t[2, 67, 43],\n\t[2, 33, 15, 2, 34, 16],\n\t[2, 33, 11, 2, 34, 12],\n\t// 6\n\t[2, 86, 68],\n\t[4, 43, 27],\n\t[4, 43, 19],\n\t[4, 43, 15],\n\t// 7\t\t\n\t[2, 98, 78],\n\t[4, 49, 31],\n\t[2, 32, 14, 4, 33, 15],\n\t[4, 39, 13, 1, 40, 14],\n\t// 8\n\t[2, 121, 97],\n\t[2, 60, 38, 2, 61, 39],\n\t[4, 40, 18, 2, 41, 19],\n\t[4, 40, 14, 2, 41, 15],\n\t// 9\n\t[2, 146, 116],\n\t[3, 58, 36, 2, 59, 37],\n\t[4, 36, 16, 4, 37, 17],\n\t[4, 36, 12, 4, 37, 13],\n\t// 10\t\t\n\t[2, 86, 68, 2, 87, 69],\n\t[4, 69, 43, 1, 70, 44],\n\t[6, 43, 19, 2, 44, 20],\n\t[6, 43, 15, 2, 44, 16]\n\t//NOTE added by Ryan Day.to make greater than version 10 qrcodes\n\t// this table starts on page 40 of the spec PDF. google ISO/IEC 18004\n\t// 11\n\t,[4,101,81]\n\t,[1,80,50,4,81,51]\n\t,[4,50,22,4,51,23]\n\t,[3,36,12,8,37,13]\n\t//12\n\t,[2,116,92,2,117,93]\n\t,[6,58,36,2,59,37]\n\t,[4,46,20,6,47,21]\n\t,[7,42,14,4,43,15]\n\t//13\n\t,[4,133,107]\n\t,[8,59,37,1,60,38]\n\t,[8,44,20,4,45,21]\n\t,[12,33,11,4,34,12]\n\t//14\n\t,[3,145,115,1,146,116]\n\t,[4,64,40,5,65,41]\n\t,[11,36,16,5,37,17]\n\t,[11,36,12,5,37,13]\n\t//15\n\t,[5,109,87,1,110,88]\n\t,[5,65,41,5,66,42]\n\t,[5,54,24,7,55,25]\n\t,[11,36,12,7,37,13]\n\t//16\n\t,[5,122,98,1,123,99]\n\t,[7,73,45,3,74,46]\n\t,[15,43,19,2,44,20]\n\t,[3,45,15,13,46,16]\n\t//17\n\t,[1,135,107,5,136,108]\n\t,[10,74,46,1,75,47]\n\t,[1,50,22,15,51,23]\n\t,[2,42,14,17,43,15]\n\t//18\n\t,[5,150,120,1,151,121]\n\t,[9,69,43,4,70,44]\n\t,[17,50,22,1,51,23]\n\t,[2,42,14,19,43,15]\n\t//19\n\t,[3,141,113,4,142,114]\n\t,[3,70,44,11,71,45]\n\t,[17,47,21,4,48,22]\n\t,[9,39,13,16,40,14]\n\t//20\n\t,[3,135,107,5,136,108]\n\t,[3,67,41,13,68,42]\n\t,[15,54,24,5,55,25]\n\t,[15,43,15,10,44,16]\n\t//21\n\t,[4,144,116,4,145,117]\n\t,[17,68,42]\n\t,[17,50,22,6,51,23]\n\t,[19,46,16,6,47,17]\n\t//22\n\t,[2,139,111,7,140,112]\n\t,[17,74,46]\n\t,[7,54,24,16,55,25]\n\t,[34,37,13]\n\t//23\n\t,[4,151,121,5,152,122]\n\t,[4,75,47,14,76,48]\n\t,[11,54,24,14,55,25]\n\t,[16,45,15,14,46,16]\n\t//24\n\t,[6,147,117,4,148,118]\n\t,[6,73,45,14,74,46]\n\t,[11,54,24,16,55,25]\n\t,[30,46,16,2,47,17]\n\t//25\n\t,[8,132,106,4,133,107]\n\t,[8,75,47,13,76,48]\n\t,[7,54,24,22,55,25]\n\t,[22,45,15,13,46,16]\n\t//26\n\t,[10,142,114,2,143,115]\n\t,[19,74,46,4,75,47]\n\t,[28,50,22,6,51,23]\n\t,[33,46,16,4,47,17]\n\t//27\n\t,[8,152,122,4,153,123]\n\t,[22,73,45,3,74,46]\n\t,[8,53,23,26,54,24]\n\t,[12,45,15,28,46,16]\n\t//28\n\t,[3,147,117,10,148,118]\n\t,[3,73,45,23,74,46]\n\t,[4,54,24,31,55,25]\n\t,[11,45,15,31,46,16]\n\t//29\n\t,[7,146,116,7,147,117]\n\t,[21,73,45,7,74,46]\n\t,[1,53,23,37,54,24]\n\t,[19,45,15,26,46,16]\n\t//30\n\t,[5,145,115,10,146,116]\n\t,[19,75,47,10,76,48]\n\t,[15,54,24,25,55,25]\n\t,[23,45,15,25,46,16]\n\t//31\n\t,[13,145,115,3,146,116]\n\t,[2,74,46,29,75,47]\n\t,[42,54,24,1,55,25]\n\t,[23,45,15,28,46,16]\n\t//32\n\t,[17,145,115]\n\t,[10,74,46,23,75,47]\n\t,[10,54,24,35,55,25]\n\t,[19,45,15,35,46,16]\n\t//33\n\t,[17,145,115,1,146,116]\n\t,[14,74,46,21,75,47]\n\t,[29,54,24,19,55,25]\n\t,[11,45,15,46,46,16]\n\t//34\n\t,[13,145,115,6,146,116]\n\t,[14,74,46,23,75,47]\n\t,[44,54,24,7,55,25]\n\t,[59,46,16,1,47,17]\n\t//35\n\t,[12,151,121,7,152,122]\n\t,[12,75,47,26,76,48]\n\t,[39,54,24,14,55,25]\n\t,[22,45,15,41,46,16]\n\t//36\n\t,[6,151,121,14,152,122]\n\t,[6,75,47,34,76,48]\n\t,[46,54,24,10,55,25]\n\t,[2,45,15,64,46,16]\n\t//37\n\t,[17,152,122,4,153,123]\n\t,[29,74,46,14,75,47]\n\t,[49,54,24,10,55,25]\n\t,[24,45,15,46,46,16]\n\t//38\n\t,[4,152,122,18,153,123]\n\t,[13,74,46,32,75,47]\n\t,[48,54,24,14,55,25]\n\t,[42,45,15,32,46,16]\n\t//39\n\t,[20,147,117,4,148,118]\n\t,[40,75,47,7,76,48]\n\t,[43,54,24,22,55,25]\n\t,[10,45,15,67,46,16]\n\t//40\n\t,[19,148,118,6,149,119]\n\t,[18,75,47,31,76,48]\n\t,[34,54,24,34,55,25]\n\t,[20,45,15,61,46,16]\t\n\t];\n\t\n\tQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\n\t\t\n\t\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\t\t\n\t\tif (rsBlock == undefined) {\n\t\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n\t\t}\n\t\n\t\tvar length = rsBlock.length / 3;\n\t\t\n\t\tvar list = new Array();\n\t\t\n\t\tfor (var i = 0; i < length; i++) {\n\t\n\t\t\tvar count = rsBlock[i * 3 + 0];\n\t\t\tvar totalCount = rsBlock[i * 3 + 1];\n\t\t\tvar dataCount  = rsBlock[i * 3 + 2];\n\t\n\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn list;\n\t}\n\t\n\tQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\n\t\n\t\tswitch(errorCorrectLevel) {\n\t\tcase QRErrorCorrectLevel.L :\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\t\tcase QRErrorCorrectLevel.M :\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\t\tcase QRErrorCorrectLevel.Q :\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\t\tcase QRErrorCorrectLevel.H :\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\t\tdefault :\n\t\t\treturn undefined;\n\t\t}\n\t}\n\t\n\t//---------------------------------------------------------------------\n\t// QRBitBuffer\n\t//---------------------------------------------------------------------\n\t\n\tfunction QRBitBuffer() {\n\t\tthis.buffer = new Array();\n\t\tthis.length = 0;\n\t}\n\t\n\tQRBitBuffer.prototype = {\n\t\n\t\tget : function(index) {\n\t\t\tvar bufIndex = Math.floor(index / 8);\n\t\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n\t\t},\n\t\t\n\t\tput : function(num, length) {\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n\t\t\t}\n\t\t},\n\t\t\n\t\tgetLengthInBits : function() {\n\t\t\treturn this.length;\n\t\t},\n\t\t\n\t\tputBit : function(bit) {\n\t\t\n\t\t\tvar bufIndex = Math.floor(this.length / 8);\n\t\t\tif (this.buffer.length <= bufIndex) {\n\t\t\t\tthis.buffer.push(0);\n\t\t\t}\n\t\t\n\t\t\tif (bit) {\n\t\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\n\t\t\t}\n\t\t\n\t\t\tthis.length++;\n\t\t}\n\t};\n\n\n/***/ },\n\n/***/ 106:\n/***/ function(module, exports) {\n\n\tmodule.exports = to_utf8\n\t\n\tvar out = []\n\t  , col = []\n\t  , fcc = String.fromCharCode\n\t  , mask = [0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01]\n\t  , unmask = [\n\t      0x00\n\t    , 0x01\n\t    , 0x02 | 0x01\n\t    , 0x04 | 0x02 | 0x01\n\t    , 0x08 | 0x04 | 0x02 | 0x01\n\t    , 0x10 | 0x08 | 0x04 | 0x02 | 0x01\n\t    , 0x20 | 0x10 | 0x08 | 0x04 | 0x02 | 0x01\n\t    , 0x40 | 0x20 | 0x10 | 0x08 | 0x04 | 0x02 | 0x01\n\t  ]\n\t\n\tfunction to_utf8(bytes, start, end) {\n\t  start = start === undefined ? 0 : start\n\t  end = end === undefined ? bytes.length : end\n\t\n\t  var idx = 0\n\t    , hi = 0x80\n\t    , collecting = 0\n\t    , pos\n\t    , by\n\t\n\t  col.length =\n\t  out.length = 0\n\t\n\t  while(idx < bytes.length) {\n\t    by = bytes[idx]\n\t    if(!collecting && by & hi) {\n\t      pos = find_pad_position(by)\n\t      collecting += pos\n\t      if(pos < 8) {\n\t        col[col.length] = by & unmask[6 - pos]\n\t      }\n\t    } else if(collecting) {\n\t      col[col.length] = by & unmask[6]\n\t      --collecting\n\t      if(!collecting && col.length) {\n\t        out[out.length] = fcc(reduced(col, pos))\n\t        col.length = 0\n\t      }\n\t    } else { \n\t      out[out.length] = fcc(by)\n\t    }\n\t    ++idx\n\t  }\n\t  if(col.length && !collecting) {\n\t    out[out.length] = fcc(reduced(col, pos))\n\t    col.length = 0\n\t  }\n\t  return out.join('')\n\t}\n\t\n\tfunction find_pad_position(byt) {\n\t  for(var i = 0; i < 7; ++i) {\n\t    if(!(byt & mask[i])) {\n\t      break\n\t    }\n\t  }\n\t  return i\n\t}\n\t\n\tfunction reduced(list) {\n\t  var out = 0\n\t  for(var i = 0, len = list.length; i < len; ++i) {\n\t    out |= list[i] << ((len - i - 1) * 6)\n\t  }\n\t  return out\n\t}\n\n\n/***/ },\n\n/***/ 107:\n/***/ function(module, exports) {\n\n\tmodule.exports = copy\n\t\n\tvar slice = [].slice\n\t\n\tfunction copy(source, target, target_start, source_start, source_end) {\n\t  target_start = arguments.length < 3 ? 0 : target_start\n\t  source_start = arguments.length < 4 ? 0 : source_start\n\t  source_end = arguments.length < 5 ? source.length : source_end\n\t\n\t  if(source_end === source_start) {\n\t    return\n\t  }\n\t\n\t  if(target.length === 0 || source.length === 0) {\n\t    return\n\t  }\n\t\n\t  if(source_end > source.length) {\n\t    source_end = source.length\n\t  }\n\t\n\t  if(target.length - target_start < source_end - source_start) {\n\t    source_end = target.length - target_start + start\n\t  }\n\t\n\t  if(source.buffer !== target.buffer) {\n\t    return fast_copy(source, target, target_start, source_start, source_end)\n\t  }\n\t  return slow_copy(source, target, target_start, source_start, source_end)\n\t}\n\t\n\tfunction fast_copy(source, target, target_start, source_start, source_end) {\n\t  var len = (source_end - source_start) + target_start\n\t\n\t  for(var i = target_start, j = source_start;\n\t      i < len;\n\t      ++i,\n\t      ++j) {\n\t    target[i] = source[j]\n\t  }\n\t}\n\t\n\tfunction slow_copy(from, to, j, i, jend) {\n\t  // the buffers could overlap.\n\t  var iend = jend + i\n\t    , tmp = new Uint8Array(slice.call(from, i, iend))\n\t    , x = 0\n\t\n\t  for(; i < iend; ++i, ++x) {\n\t    to[j++] = tmp[x]\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 108:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(size) {\n\t  return new Uint8Array(size)\n\t}\n\n\n/***/ },\n\n/***/ 109:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = from\n\t\n\tvar base64 = __webpack_require__(62)\n\t\n\tvar decoders = {\n\t    hex: from_hex\n\t  , utf8: from_utf\n\t  , base64: from_base64\n\t}\n\t\n\tfunction from(source, encoding) {\n\t  if(Array.isArray(source)) {\n\t    return new Uint8Array(source)\n\t  }\n\t\n\t  return decoders[encoding || 'utf8'](source)\n\t}\n\t\n\tfunction from_hex(str) {\n\t  var size = str.length / 2\n\t    , buf = new Uint8Array(size)\n\t    , character = ''\n\t\n\t  for(var i = 0, len = str.length; i < len; ++i) {\n\t    character += str.charAt(i)\n\t\n\t    if(i > 0 && (i % 2) === 1) {\n\t      buf[i>>>1] = parseInt(character, 16)\n\t      character = '' \n\t    }\n\t  }\n\t\n\t  return buf \n\t}\n\t\n\tfunction from_utf(str) {\n\t  var bytes = []\n\t    , tmp\n\t    , ch\n\t\n\t  for(var i = 0, len = str.length; i < len; ++i) {\n\t    ch = str.charCodeAt(i)\n\t    if(ch & 0x80) {\n\t      tmp = encodeURIComponent(str.charAt(i)).substr(1).split('%')\n\t      for(var j = 0, jlen = tmp.length; j < jlen; ++j) {\n\t        bytes[bytes.length] = parseInt(tmp[j], 16)\n\t      }\n\t    } else {\n\t      bytes[bytes.length] = ch \n\t    }\n\t  }\n\t\n\t  return new Uint8Array(bytes)\n\t}\n\t\n\tfunction from_base64(str) {\n\t  return new Uint8Array(base64.toByteArray(str)) \n\t}\n\n\n/***/ },\n\n/***/ 110:\n/***/ function(module, exports) {\n\n\t\n\tmodule.exports = function(buffer) {\n\t  return buffer instanceof Uint8Array;\n\t}\n\n\n/***/ },\n\n/***/ 111:\n/***/ function(module, exports) {\n\n\tmodule.exports = join\n\t\n\tfunction join(targets, hint) {\n\t  if(!targets.length) {\n\t    return new Uint8Array(0)\n\t  }\n\t\n\t  var len = hint !== undefined ? hint : get_length(targets)\n\t    , out = new Uint8Array(len)\n\t    , cur = targets[0]\n\t    , curlen = cur.length\n\t    , curidx = 0\n\t    , curoff = 0\n\t    , i = 0\n\t\n\t  while(i < len) {\n\t    if(curoff === curlen) {\n\t      curoff = 0\n\t      ++curidx\n\t      cur = targets[curidx]\n\t      curlen = cur && cur.length\n\t      continue\n\t    }\n\t    out[i++] = cur[curoff++] \n\t  }\n\t\n\t  return out\n\t}\n\t\n\tfunction get_length(targets) {\n\t  var size = 0\n\t  for(var i = 0, len = targets.length; i < len; ++i) {\n\t    size += targets[i].byteLength\n\t  }\n\t  return size\n\t}\n\n\n/***/ },\n\n/***/ 112:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t    readUInt8:      read_uint8\n\t  , readInt8:       read_int8\n\t  , readUInt16LE:   read_uint16_le\n\t  , readUInt32LE:   read_uint32_le\n\t  , readInt16LE:    read_int16_le\n\t  , readInt32LE:    read_int32_le\n\t  , readFloatLE:    read_float_le\n\t  , readDoubleLE:   read_double_le\n\t  , readUInt16BE:   read_uint16_be\n\t  , readUInt32BE:   read_uint32_be\n\t  , readInt16BE:    read_int16_be\n\t  , readInt32BE:    read_int32_be\n\t  , readFloatBE:    read_float_be\n\t  , readDoubleBE:   read_double_be\n\t}\n\t\n\tvar map = __webpack_require__(63)\n\t\n\tfunction read_uint8(target, at) {\n\t  return target[at]\n\t}\n\t\n\tfunction read_int8(target, at) {\n\t  var v = target[at];\n\t  return v < 0x80 ? v : v - 0x100\n\t}\n\t\n\tfunction read_uint16_le(target, at) {\n\t  var dv = map.get(target);\n\t  return dv.getUint16(at + target.byteOffset, true)\n\t}\n\t\n\tfunction read_uint32_le(target, at) {\n\t  var dv = map.get(target);\n\t  return dv.getUint32(at + target.byteOffset, true)\n\t}\n\t\n\tfunction read_int16_le(target, at) {\n\t  var dv = map.get(target);\n\t  return dv.getInt16(at + target.byteOffset, true)\n\t}\n\t\n\tfunction read_int32_le(target, at) {\n\t  var dv = map.get(target);\n\t  return dv.getInt32(at + target.byteOffset, true)\n\t}\n\t\n\tfunction read_float_le(target, at) {\n\t  var dv = map.get(target);\n\t  return dv.getFloat32(at + target.byteOffset, true)\n\t}\n\t\n\tfunction read_double_le(target, at) {\n\t  var dv = map.get(target);\n\t  return dv.getFloat64(at + target.byteOffset, true)\n\t}\n\t\n\tfunction read_uint16_be(target, at) {\n\t  var dv = map.get(target);\n\t  return dv.getUint16(at + target.byteOffset, false)\n\t}\n\t\n\tfunction read_uint32_be(target, at) {\n\t  var dv = map.get(target);\n\t  return dv.getUint32(at + target.byteOffset, false)\n\t}\n\t\n\tfunction read_int16_be(target, at) {\n\t  var dv = map.get(target);\n\t  return dv.getInt16(at + target.byteOffset, false)\n\t}\n\t\n\tfunction read_int32_be(target, at) {\n\t  var dv = map.get(target);\n\t  return dv.getInt32(at + target.byteOffset, false)\n\t}\n\t\n\tfunction read_float_be(target, at) {\n\t  var dv = map.get(target);\n\t  return dv.getFloat32(at + target.byteOffset, false)\n\t}\n\t\n\tfunction read_double_be(target, at) {\n\t  var dv = map.get(target);\n\t  return dv.getFloat64(at + target.byteOffset, false)\n\t}\n\n\n/***/ },\n\n/***/ 113:\n/***/ function(module, exports) {\n\n\tmodule.exports = subarray\n\t\n\tfunction subarray(buf, from, to) {\n\t  return buf.subarray(from || 0, to || buf.length)\n\t}\n\n\n/***/ },\n\n/***/ 114:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = to\n\t\n\tvar base64 = __webpack_require__(62)\n\t  , toutf8 = __webpack_require__(106)\n\t\n\tvar encoders = {\n\t    hex: to_hex\n\t  , utf8: to_utf\n\t  , base64: to_base64\n\t}\n\t\n\tfunction to(buf, encoding) {\n\t  return encoders[encoding || 'utf8'](buf)\n\t}\n\t\n\tfunction to_hex(buf) {\n\t  var str = ''\n\t    , byt\n\t\n\t  for(var i = 0, len = buf.length; i < len; ++i) {\n\t    byt = buf[i]\n\t    str += ((byt & 0xF0) >>> 4).toString(16)\n\t    str += (byt & 0x0F).toString(16)\n\t  }\n\t\n\t  return str\n\t}\n\t\n\tfunction to_utf(buf) {\n\t  return toutf8(buf)\n\t}\n\t\n\tfunction to_base64(buf) {\n\t  return base64.fromByteArray(buf)\n\t}\n\t\n\n\n/***/ },\n\n/***/ 115:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t    writeUInt8:      write_uint8\n\t  , writeInt8:       write_int8\n\t  , writeUInt16LE:   write_uint16_le\n\t  , writeUInt32LE:   write_uint32_le\n\t  , writeInt16LE:    write_int16_le\n\t  , writeInt32LE:    write_int32_le\n\t  , writeFloatLE:    write_float_le\n\t  , writeDoubleLE:   write_double_le\n\t  , writeUInt16BE:   write_uint16_be\n\t  , writeUInt32BE:   write_uint32_be\n\t  , writeInt16BE:    write_int16_be\n\t  , writeInt32BE:    write_int32_be\n\t  , writeFloatBE:    write_float_be\n\t  , writeDoubleBE:   write_double_be\n\t}\n\t\n\tvar map = __webpack_require__(63)\n\t\n\tfunction write_uint8(target, value, at) {\n\t  return target[at] = value\n\t}\n\t\n\tfunction write_int8(target, value, at) {\n\t  return target[at] = value < 0 ? value + 0x100 : value\n\t}\n\t\n\tfunction write_uint16_le(target, value, at) {\n\t  var dv = map.get(target);\n\t  return dv.setUint16(at + target.byteOffset, value, true)\n\t}\n\t\n\tfunction write_uint32_le(target, value, at) {\n\t  var dv = map.get(target);\n\t  return dv.setUint32(at + target.byteOffset, value, true)\n\t}\n\t\n\tfunction write_int16_le(target, value, at) {\n\t  var dv = map.get(target);\n\t  return dv.setInt16(at + target.byteOffset, value, true)\n\t}\n\t\n\tfunction write_int32_le(target, value, at) {\n\t  var dv = map.get(target);\n\t  return dv.setInt32(at + target.byteOffset, value, true)\n\t}\n\t\n\tfunction write_float_le(target, value, at) {\n\t  var dv = map.get(target);\n\t  return dv.setFloat32(at + target.byteOffset, value, true)\n\t}\n\t\n\tfunction write_double_le(target, value, at) {\n\t  var dv = map.get(target);\n\t  return dv.setFloat64(at + target.byteOffset, value, true)\n\t}\n\t\n\tfunction write_uint16_be(target, value, at) {\n\t  var dv = map.get(target);\n\t  return dv.setUint16(at + target.byteOffset, value, false)\n\t}\n\t\n\tfunction write_uint32_be(target, value, at) {\n\t  var dv = map.get(target);\n\t  return dv.setUint32(at + target.byteOffset, value, false)\n\t}\n\t\n\tfunction write_int16_be(target, value, at) {\n\t  var dv = map.get(target);\n\t  return dv.setInt16(at + target.byteOffset, value, false)\n\t}\n\t\n\tfunction write_int32_be(target, value, at) {\n\t  var dv = map.get(target);\n\t  return dv.setInt32(at + target.byteOffset, value, false)\n\t}\n\t\n\tfunction write_float_be(target, value, at) {\n\t  var dv = map.get(target);\n\t  return dv.setFloat32(at + target.byteOffset, value, false)\n\t}\n\t\n\tfunction write_double_be(target, value, at) {\n\t  var dv = map.get(target);\n\t  return dv.setFloat64(at + target.byteOffset, value, false)\n\t}\n\n\n/***/ },\n\n/***/ 282:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _stringify = __webpack_require__(54);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tvar _qrcodeCanvas = __webpack_require__(104);\n\t\n\tvar _qrcodeCanvas2 = _interopRequireDefault(_qrcodeCanvas);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  attached: function attached() {\n\t    this.getMyQuickQuizs();\n\t  },\n\t  data: function data() {\n\t    return {\n\t      myQuickquizs: []\n\t    };\n\t  },\n\t\n\t  components: {},\n\t  methods: {\n\t    getMyQuickQuizs: function getMyQuickQuizs() {\n\t      this.$http.get('/api/manage-quickquiz/teacher/quickquizs').then(function (response) {\n\t        if (response.data.length > 0) {\n\t          this.myQuickquizs = response.data;\n\t          this.generateLatestQuickQuizQrcode(response.data[0]._id);\n\t        } else {}\n\t      }, function (response) {\n\t        console.log(response);\n\t      });\n\t    },\n\t    generateLatestQuickQuizQrcode: function generateLatestQuickQuizQrcode(quickquiz_id) {\n\t      var qrcodeData = {\n\t        type: 'quickquiz',\n\t        id: quickquiz_id\n\t      };\n\t\n\t      var qrcodedraw = new _qrcodeCanvas2.default.QRCodeDraw();\n\t      qrcodedraw.draw(document.getElementById('qrcode-canvas'), (0, _stringify2.default)(qrcodeData), { scale: 10 }, function (error, canvas) {\n\t        if (error) {\n\t          return console.log('Error =( ', error);\n\t        }\n\t      });\n\t    },\n\t    endLatestQuickQuiz: function endLatestQuickQuiz() {\n\t      if (this.myQuickquizs[0].finished === false) {\n\t        var data = {\n\t          quickquiz_id: this.myQuickquizs[0]._id\n\t        };\n\t        this.$http.post('/api/manage-quickquiz/teacher/quickquiz/end', data).then(function (response) {\n\t          this.myQuickquizs[0].finished = true;\n\t        }, function (response) {\n\t          console.log(response);\n\t        });\n\t      }\n\t    }\n\t  },\n\t  filters: {\n\t    finished: function finished(value) {\n\t      if (value === false) {\n\t        return '未收卷';\n\t      } else {\n\t        return '已結束';\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n\n/***/ 296:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"#quiz-results .main-wrapper{margin:16px auto;box-sizing:content-box}#quiz-results .qrcode-wrapper{width:300px;height:300px;margin:0 auto}.latest-quiz .title{color:#3f51b5;padding-left:16px;margin:16px 0 8px}.latest-quiz .time{padding-left:16px;color:#616161;margin:0 0 8px}.latest-quiz .finishTime,.latest-quiz .startTime{padding-left:16px;color:#9e9e9e}.latest-quiz .finished{padding-left:16px;color:#009688;margin:0 0 8px}.latest-quiz .ongoing{padding-left:16px;color:#e91e63;margin:0 0 8px}.quickquiz-card{cursor:pointer;padding:16px;background:#fff;border:1px solid rgba(0,0,0,.1);box-shadow:0 1px 4px rgba(0,0,0,.05)}.quickquiz-card:active{background:#eee}.quickquiz-card .title{color:#212121;font-size:20px}.quickquiz-card .finished{color:#ff9800;font-size:13px;padding-left:8px}.quickquiz-card .time{color:#616161;font-size:13px}.quickquiz-card .date{color:#999;font-size:13px}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/quickquiz/Quiz-results.vue\"],\"names\":[],\"mappings\":\"AACA,4BACE,iBAAiB,AACjB,sBAAwB,CACzB,AACD,8BACE,YAAa,AACb,aAAc,AACd,aAAc,CACf,AAED,oBACE,cAAe,AACf,kBAAmB,AACnB,iBAAoB,CACrB,AAED,mBACE,kBAAmB,AACnB,cAAe,AACf,cAAiB,CAClB,AAED,iDACE,kBAAmB,AACnB,aAAc,CACf,AAED,uBACE,kBAAmB,AACnB,cAAe,AACf,cAAiB,CAClB,AAED,sBACE,kBAAmB,AACnB,cAAe,AACf,cAAiB,CAClB,AAED,gBACE,eAAgB,AAChB,aAAc,AACd,gBAAiB,AACjB,gCAAkC,AAClC,oCAAuC,CACxC,AAED,uBACE,eAAmB,CACpB,AAED,uBACE,cAAe,AACf,cAAe,CAChB,AAED,0BACE,cAAe,AACf,eAAgB,AAChB,gBAAiB,CAClB,AAED,sBACE,cAAe,AACf,cAAgB,CACjB,AAED,sBACE,WAAe,AACf,cAAe,CAChB\",\"file\":\"Quiz-results.vue\",\"sourcesContent\":[\"\\n#quiz-results .main-wrapper {\\n  margin:16px auto;\\n  box-sizing: content-box;\\n}\\n#quiz-results .qrcode-wrapper {\\n  width: 300px;\\n  height: 300px;\\n  margin: 0 auto\\n}\\n\\n.latest-quiz .title {\\n  color: #3F51B5;\\n  padding-left: 16px;\\n  margin: 16px 0 8px 0\\n}\\n\\n.latest-quiz .time {\\n  padding-left: 16px;\\n  color: #616161;\\n  margin: 0 0 8px 0\\n}\\n\\n.latest-quiz .startTime, .latest-quiz .finishTime {\\n  padding-left: 16px;\\n  color: #9e9e9e\\n}\\n\\n.latest-quiz .finished {\\n  padding-left: 16px;\\n  color: #009688;\\n  margin: 0 0 8px 0\\n}\\n\\n.latest-quiz .ongoing {\\n  padding-left: 16px;\\n  color: #E91E63;\\n  margin: 0 0 8px 0\\n}\\n\\n.quickquiz-card {\\n  cursor: pointer;\\n  padding: 16px;\\n  background: #fff;\\n  border: 1px solid rgba(0,0,0,0.1);\\n  box-shadow: 0 1px 4px rgba(0,0,0,0.05);\\n}\\n\\n.quickquiz-card:active {\\n  background: #eeeeee\\n}\\n\\n.quickquiz-card .title {\\n  color: #212121;\\n  font-size: 20px\\n}\\n\\n.quickquiz-card .finished {\\n  color: #FF9800;\\n  font-size: 13px;\\n  padding-left: 8px\\n}\\n\\n.quickquiz-card .time {\\n  color: #616161;\\n  font-size: 13px;\\n}\\n\\n.quickquiz-card .date {\\n  color: #999999;\\n  font-size: 13px\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 310:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(296);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Quiz-results.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Quiz-results.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 432:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=quiz-results> <div style=padding-top:16px> <div class=\\\"main-wrapper flex-column\\\" style=\\\"background-color:#fff;box-shadow: 0 1px 6px rgba(0,0,0,0.35)\\\"> <p style=\\\"border-bottom:1px solid #eee;padding:8px 0 8px 0;margin:0;text-align:center;color:#aaa\\\">最新小測</p> <div class=\\\"latest-quiz flex-row\\\"> <div class=flex-50 style=\\\"padding:16px 0 0 16px\\\"> <div v-if=myQuickquizs[0] class=flex-column> <h4 class=title>{{myQuickquizs[0].title}}</h4> <h6 class=\\\"time flex-row\\\" style=align-items:center><i class=material-icons style=margin-right:8px;font-size:20px>timer</i>{{myQuickquizs[0].time}}分鐘</h6> <h6 class=\\\"finished flex-row\\\" style=align-items:center><i class=material-icons style=margin-right:8px;font-size:20px>create</i>{{myQuickquizs[0].finished | finished}}</h6> <span class=startTime>開始於: {{myQuickquizs[0].startTime | date 'YYYY[年]M[月]DD[日] h:mm a'}}</span> <span class=finishTime v-if=myQuickquizs[0].finishTime>結束于: {{myQuickquizs[0].finishTime | date 'YYYY[年]M[月]DD[日] h:mm a'}}</span> <div class=\\\"flex-column flex-start\\\" style=\\\"margin:16px 0 16px 16px\\\"> <mdl-button accent raised style=margin-bottom:8px @click=endLatestQuickQuiz() v-show=!myQuickquizs[0].finished>結束測驗</mdl-button> <mdl-button primary raised v-link=\\\"{ name: 'quiz-detail', params: { quickquiz_id: myQuickquizs[0]._id }}\\\">查看詳情</mdl-button> </div> </div> </div> <div class=\\\"flex flex-50\\\"> <canvas id=qrcode-canvas class=qrcode-wrapper></canvas> </div> </div> </div> <div> <div class=mdl-grid> <div class=\\\"mdl-cell mdl-cell--4-col quickquiz-card flex-column\\\" v-for=\\\"quickquiz in myQuickquizs\\\" track-by=_id v-link=\\\"{ name: 'quiz-detail', params: { quickquiz_id: quickquiz._id }}\\\"> <div class=\\\"flex-row flex-baseline\\\"> <span class=title>{{quickquiz.title}}</span> <span class=finished>{{quickquiz.finished | finished}}</span> </div> <span class=time>{{quickquiz.time}}分鐘</span> <span class=date>{{quickquiz.startTime | date 'YY[年]M[月]DD[日]'}}</span> </div> </div> </div> </div> </div>\";\n\n/***/ },\n\n/***/ 454:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(310)\n\t__vue_script__ = __webpack_require__(282)\n\t__vue_template__ = __webpack_require__(432)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 4.d486a137c8a972e8b645.js\n **/","var core = module.exports = {version: '2.3.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/_core.js\n ** module id = 6\n ** module chunks = 1 2 4 5 6\n **/","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/json/stringify.js\n ** module id = 54\n ** module chunks = 4 5 6\n **/","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/fn/json/stringify.js\n ** module id = 55\n ** module chunks = 4 5 6\n **/","var proto = {}\nmodule.exports = proto\n\nproto.from = require('./from.js')\nproto.to = require('./to.js')\nproto.is = require('./is.js')\nproto.subarray = require('./subarray.js')\nproto.join = require('./join.js')\nproto.copy = require('./copy.js')\nproto.create = require('./create.js')\n\nmix(require('./read.js'), proto)\nmix(require('./write.js'), proto)\n\nfunction mix(from, into) {\n  for(var key in from) {\n    into[key] = from[key]\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/index.js\n ** module id = 61\n ** module chunks = 4 5\n **/","(function (exports) {\n\t'use strict';\n\n\tvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\tfunction b64ToByteArray(b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr;\n\t\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow 'Invalid string. Length must be a multiple of 4';\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tplaceHolders = b64.indexOf('=');\n\t\tplaceHolders = placeHolders > 0 ? b64.length - placeHolders : 0;\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = [];//new Uint8Array(b64.length * 3 / 4 - placeHolders);\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length;\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (lookup.indexOf(b64[i]) << 18) | (lookup.indexOf(b64[i + 1]) << 12) | (lookup.indexOf(b64[i + 2]) << 6) | lookup.indexOf(b64[i + 3]);\n\t\t\tarr.push((tmp & 0xFF0000) >> 16);\n\t\t\tarr.push((tmp & 0xFF00) >> 8);\n\t\t\tarr.push(tmp & 0xFF);\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (lookup.indexOf(b64[i]) << 2) | (lookup.indexOf(b64[i + 1]) >> 4);\n\t\t\tarr.push(tmp & 0xFF);\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (lookup.indexOf(b64[i]) << 10) | (lookup.indexOf(b64[i + 1]) << 4) | (lookup.indexOf(b64[i + 2]) >> 2);\n\t\t\tarr.push((tmp >> 8) & 0xFF);\n\t\t\tarr.push(tmp & 0xFF);\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tfunction uint8ToBase64(uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length;\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n\t\t};\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n\t\t\toutput += tripletToBase64(temp);\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1];\n\t\t\t\toutput += lookup[temp >> 2];\n\t\t\t\toutput += lookup[(temp << 4) & 0x3F];\n\t\t\t\toutput += '==';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1]);\n\t\t\t\toutput += lookup[temp >> 10];\n\t\t\t\toutput += lookup[(temp >> 4) & 0x3F];\n\t\t\t\toutput += lookup[(temp << 2) & 0x3F];\n\t\t\t\toutput += '=';\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tmodule.exports.toByteArray = b64ToByteArray;\n\tmodule.exports.fromByteArray = uint8ToBase64;\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/~/base64-js/lib/b64.js\n ** module id = 62\n ** module chunks = 4 5\n **/","var proto\n  , map\n\nmodule.exports = proto = {}\n\nmap = typeof WeakMap === 'undefined' ? null : new WeakMap\n\nproto.get = !map ? no_weakmap_get : get\n\nfunction no_weakmap_get(target) {\n  return new DataView(target.buffer, 0)\n}\n\nfunction get(target) {\n  var out = map.get(target.buffer)\n  if(!out) {\n    map.set(target.buffer, out = new DataView(target.buffer, 0))\n  }\n  return out\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/typedarray/mapped.js\n ** module id = 63\n ** module chunks = 4 5\n **/","/**\nthis contains the max string length for all qr code Versions in Binary Safe / Byte Mode\neach entry is in the order of error correct level\n\t[L,M,Q,H]\n\nthe qrcode lib sets strange values for QRErrorCorrectLevel having to do with masking against patterns\nthe maximum string length for error correct level H is 1273 characters long.\n*/\n\nexports.QRCapacityTable = [\n[17,14,11,7]\n,[32,26,20,14]\n,[53,42,32,24]\n,[78,62,46,34]\n,[106,84,60,44]\n,[134,106,74,58]\n,[154,122,86,64]\n,[192,152,108,84]\n,[230,180,130,98]\n,[271,213,151,119]\n,[321,251,177,137]//11\n,[367,287,203,155]\n,[425,331,241,177]\n,[458,362,258,194]\n,[520,412,292,220]\n,[586,450,322,250]\n,[644,504,364,280]\n,[718,560,394,310]\n,[792,624,442,338]\n,[858,666,482,382]\n,[929,711,509,403]\n,[1003,779,565,439]\n,[1091,857,611,461]\n,[1171,911,661,511]//24\n,[1273,997,715,535]\n,[1367,1059,751,593]\n,[1465,1125,805,625]\n,[1528,1190,868,658]//28\n,[1628,1264,908,698]\n,[1732,1370,982,742]\n,[1840,1452,1030,790]\n,[1952,1538,1112,842]//32\n,[2068,1628,1168,898]\n,[2188,1722,1228,958]\n,[2303,1809,1283,983]\n,[2431,1911,1351,1051]//36\n,[2563,1989,1423,1093]\n,[2699,2099,1499,1139]\n,[2809,2213,1579,1219]\n,[2953,2331,1663,1273]//40\n];\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/lib/qrcapacitytable.js\n ** module id = 103\n ** module chunks = 4 5\n **/","/*\n* copyright 2010-2012 Ryan Day\n* http://github.com/soldair/node-qrcode\n*\n* Licensed under the MIT license:\n*   http://www.opensource.org/licenses/mit-license.php\n*\n* canvas example and fallback support example provided by Joshua Koo\n*\thttp://jabtunes.com/labs/qrcode.html\n*\t\"Instant QRCode Mashup by Joshua Koo!\"\n*\tas far as i can tell the page and the code on the page are public domain \n*\t\n* original table example and library provided by Kazuhiko Arase\n*\thttp://d-project.googlecode.com/svn/trunk/misc/qrcode/js/\n*\n*/\n\nvar bops = require('bops')\nvar QRCodeLib = require('./qrcode.js');\nvar QRVersionCapacityTable = require('./qrcapacitytable.js').QRCapacityTable;\nvar QRCode = QRCodeLib.QRCode;\n\nexports.QRCodeDraw = QRCodeDraw;\nexports.QRVersionCapacityTable = QRVersionCapacityTable;\nexports.QRErrorCorrectLevel = QRCodeLib.QRErrorCorrectLevel;\nexports.QRCode = QRCodeLib.QRCode;\n\nfunction QRCodeDraw(){}\n\nQRCodeDraw.prototype = {\n  scale:4,//4 px module size\n  defaultMargin:20,\n  marginScaleFactor:5,\n  Array:(typeof Uint32Array == 'undefined'?Uint32Array:Array),\n  // you may configure the error behavior for input string too long\n  errorBehavior:{\n    length:'trim'\n  },\n  color:{\n    dark:'black',\n    light:'white'\n  },\n  defaultErrorCorrectLevel:QRCodeLib.QRErrorCorrectLevel.H,\n  QRErrorCorrectLevel:QRCodeLib.QRErrorCorrectLevel,\n  draw:function(canvas,text,options,cb){\n\n    var level,\n    error,\n    errorCorrectLevel;\n    \n    var args = Array.prototype.slice.call(arguments);\n    cb = args.pop(); \n    canvas = args.shift();\n    text = args.shift();\n    options = args.shift()||{};\n\n    \n    if(typeof cb != 'function') {\n      //enforce callback api just in case the processing can be made async in the future\n      // or support proc open to libqrencode\n      throw new Error('callback required');\n    }\n    \n    if(typeof options !== \"object\"){\n      options.errorCorrectLevel = options;\n    }\n    \n\n    this.QRVersion(\n      text\n      ,options.errorCorrectLevel||this.QRErrorCorrectLevel.H\n      ,options.version\n    ,function(e,t,l,ec){\n\n      text = t,level = l,error = e,errorCorrectLevel = ec;\n    });\n\n    this.scale = options.scale||this.scale;\n    this.margin = typeof(options.margin) === 'undefined' ? this.defaultMargin : options.margin;\n    \n    if(!level) {\n      //if we are unable to find an appropriate qr level error out\n      cb(error,canvas);\n      return;\n    }\n\n    //create qrcode!\n    try{\n      \n      var qr = new QRCodeLib.QRCode(level, errorCorrectLevel)\n      , scale = this.scale||4\n      , ctx = canvas.getContext('2d')\n      , width = 0;\n\n      qr.addData(text);\n      qr.make();\n\n      var margin = this.marginWidth();\n      var currenty = margin;\n      width = this.dataWidth(qr)+ margin*2;\n      \n      this.resetCanvas(canvas,ctx,width);\n\n      for (var r = 0,rl=qr.getModuleCount(); r < rl; r++) {\n        var currentx = margin;\n        for (var c = 0,cl=qr.getModuleCount(); c < cl; c++) {\n          if (qr.isDark(r, c) ) {\n            ctx.fillStyle = this.color.dark;\n            ctx.fillRect (currentx, currenty, scale, scale);\n          } else if(this.color.light){\n            //if falsy configured color\n            ctx.fillStyle = this.color.light;\n            ctx.fillRect (currentx, currenty, scale, scale);\n          }\n          currentx += scale;\n        }\n        currenty += scale;\n      }\n    } catch (e) {\n      error = e;\n    }\n    \n    cb(error,canvas,width);    \n  },\n  drawBitArray:function(text/*,errorCorrectLevel,options,cb*/) {\n\n    var args = Array.prototype.slice.call(arguments),\n      cb = args.pop(),\n      text = args.shift(),\n      errorCorrectLevel = args.shift(),\n      options = args.shift() || {};\n\n    //argument processing\n    if(typeof cb != 'function') {\n      //enforce callback api just in case the processing can be made async in the future\n      // or support proc open to libqrencode\n      throw new Error('callback required as last argument');\n    }\n    \n    cb = arguments[arguments.length-1]; \n    \n    if(arguments.length > 2){\n      errorCorrectLevel = arguments[2];\n    }\n\n\n    //this interface kinda sucks - there is very small likelyhood of this ever being async\n    this.QRVersion(text,errorCorrectLevel,(options||{}).version,function(e,t,l,ec){\n      text = t,level = l,error = e,errorCorrectLevel = ec;\n    });\n\n\n    if(!level) {\n      //if we are unable to find an appropriate qr level error out\n      cb(error,[],0);\n      return;\n    }\n\n    //create qrcode!\n    try{\n\n      var qr = new QRCodeLib.QRCode(level, errorCorrectLevel)\n      , scale = this.scale||4\n      , width = 0,bits,bitc=0,currenty=0;\n      \n      qr.addData(text);\n      qr.make();\n      \n      width = this.dataWidth(qr,1);\n      bits = new this.Array(width*width);\n\n      \n      for (var r = 0,rl=qr.getModuleCount(); r < rl; r++) {\n        for (var c = 0,cl=qr.getModuleCount(); c < cl; c++) {\n          if (qr.isDark(r, c) ) {\n            bits[bitc] = 1;\n          } else {\n            bits[bitc] = 0;\n          }\n          bitc++;\n        }\n      }\n    } catch (e) {\n      error = e;\n      console.log(e.stack);\n    }\n    \n    cb(error,bits,width);\n  },\n  QRVersion:function(text,errorCorrectLevel,version,cb){\n    var c = bops.from(text).length,// BINARY LENGTH!\n        error,\n        errorCorrectLevel = this.QRErrorCorrectLevel[errorCorrectLevel]||this.defaultErrorCorrectLevel,\n        errorCorrectIndex = [1,0,3,2],//fix odd mapping to order in table\n        keys = ['L','M','Q','H'],\n        capacity = 0,\n        versionSpecified = false;\n        \n    if(typeof version !== \"undefined\" && version !== null) {\n      versionSpecified = true;\n    }\n    //TODO ADD THROW FOR INVALID errorCorrectLevel...?\n    \n    if(versionSpecified){\n      //console.log('SPECIFIED VERSION! ',version);\n      //i have specified a version. this will give me a fixed size qr code. version must be valid. 1-40\n      capacity = QRVersionCapacityTable[version][errorCorrectIndex[errorCorrectLevel]];\n      \n    } else {\n      //figure out what version can hold the amount of text\n      for(var i=0,j=QRVersionCapacityTable.length;i<j;i++) {\n        capacity = QRVersionCapacityTable[i][errorCorrectIndex[errorCorrectLevel]];\n        if(c < QRVersionCapacityTable[i][errorCorrectIndex[errorCorrectLevel]]){\n          version = i+1;\n          break;\n        }\n      }\n      //if not version set to max\n      if(!version) {\n        version = QRVersionCapacityTable.length-1;\n      }\n    }\n    \n    if(capacity < c){\n      if(this.errorBehavior.length == 'trim'){\n        text = text.substr(0,capacity);\n        level = QRVersionCapacityTable.length; \n      } else {\n        error = new Error('input string too long for error correction '\n          +keys[errorCorrectIndex[errorCorrectLevel]]\n          +' max length '\n          + capacity\n          +' for qrcode version '+version\n        );\n      }\n    }\n  \n    if(cb) {\n      cb(error,text,version,errorCorrectLevel);\n    }\n    return version;\n  },\n  marginWidth:function(){\n    var margin = this.margin;\n    this.scale = this.scale||4;\n    //elegant white space next to code is required by spec\n    if ((this.scale * this.marginScaleFactor > margin) && margin > 0){\n      margin = this.scale * this.marginScaleFactor;\n    }\n    return margin;\n  },\n  dataWidth:function(qr,scale){\n    return qr.getModuleCount()*(scale||this.scale||4);\n  },\n  resetCanvas:function(canvas,ctx,width){\n    ctx.clearRect(0,0,canvas.width,canvas.height);\n    if(!canvas.style) canvas.style = {};\n    canvas.style.height = canvas.height = width;//square!\n    canvas.style.width = canvas.width = width;\n    \n    if(this.color.light){\n      ctx.fillStyle = this.color.light; \n      ctx.fillRect(0,0,canvas.width,canvas.height);\n    } else {\n      //support transparent backgrounds?\n      //not exactly to spec but i really would like someone to be able to add a background with heavily reduced luminosity for simple branding\n      //i could just ditch this because you could also just set #******00 as the color =P\n      ctx.clearRect(0,0,canvas.width,canvas.height);\n    }\n  }\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/lib/qrcode-draw.js\n ** module id = 104\n ** module chunks = 4 5\n **/","var bops = require('bops');\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * EXPORTS:\n *\t{\n *\tQRCode:QRCode\n *\tQRErrorCorrectLevel:QRErrorCorrectLevel\n *\t}\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of \n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n//---------------------------------------------------------------------\n// QRCode\n//---------------------------------------------------------------------\n\nexports.QRCode = QRCode;\n\nvar QRDataArray = (typeof Uint32Array == 'undefined'?Uint32Array:Array);\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n\tthis.typeNumber = typeNumber;\n\tthis.errorCorrectLevel = errorCorrectLevel;\n\tthis.modules = null;\n\tthis.moduleCount = 0;\n\tthis.dataCache = null;\n\tthis.dataList = new QRDataArray();\n}\n\nQRCode.prototype = {\n\t\n\taddData : function(data) {\n\t\tvar newData = new QR8bitByte(data);\n\n\t\tthis.dataList.push(newData);\n\t\tthis.dataCache = null;\n\t},\n\t\n\tisDark : function(row, col) {\n\t\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\t\tthrow new Error(row + \",\" + col);\n\t\t}\n\t\treturn this.modules[row][col];\n\t},\n\n\tgetModuleCount : function() {\n\t\treturn this.moduleCount;\n\t},\n\t\n\tmake : function() {\n\t\tthis.makeImpl(false, this.getBestMaskPattern() );\n\t},\n\t\n\tmakeImpl : function(test, maskPattern) {\n\t\t\n\t\tthis.moduleCount = this.typeNumber * 4 + 17;\n\t\tthis.modules = new QRDataArray(this.moduleCount);\n\t\t\n\t\tfor (var row = 0; row < this.moduleCount; row++) {\n\t\t\t\n\t\t\tthis.modules[row] = new QRDataArray(this.moduleCount);\n\t\t\t\n\t\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n\t\t\t}\n\t\t}\n\t\n\t\tthis.setupPositionProbePattern(0, 0);\n\t\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\t\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\t\tthis.setupPositionAdjustPattern();\n\t\tthis.setupTimingPattern();\n\t\tthis.setupTypeInfo(test, maskPattern);\n\t\t\n\t\tif (this.typeNumber >= 7) {\n\t\t\tthis.setupTypeNumber(test);\n\t\t}\n\t\n\t\tif (this.dataCache == null) {\n\t\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t\t}\n\t\n\t\tthis.mapData(this.dataCache, maskPattern);\n\t},\n\n\tsetupPositionProbePattern : function(row, col)  {\n\t\t\n\t\tfor (var r = -1; r <= 7; r++) {\n\t\t\t\n\t\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\t\t\t\n\t\t\tfor (var c = -1; c <= 7; c++) {\n\t\t\t\t\n\t\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\t\t\t\t\n\t\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n\t\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\n\t\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t}\t\t\n\t},\n\t\n\tgetBestMaskPattern : function() {\n\t\n\t\tvar minLostPoint = 0;\n\t\tvar pattern = 0;\n\t\n\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\n\t\t\tthis.makeImpl(true, i);\n\t\n\t\t\tvar lostPoint = QRUtil.getLostPoint(this);\n\t\n\t\t\tif (i == 0 || minLostPoint >  lostPoint) {\n\t\t\t\tminLostPoint = lostPoint;\n\t\t\t\tpattern = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn pattern;\n\t},\n\n\tsetupTimingPattern : function() {\n\t\t\n\t\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\t\tif (this.modules[r][6] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.modules[r][6] = (r % 2 == 0);\n\t\t}\n\t\n\t\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\t\tif (this.modules[6][c] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.modules[6][c] = (c % 2 == 0);\n\t\t}\n\t},\n\t\n\tsetupPositionAdjustPattern : function() {\n\t\n\t\tvar pos = QRUtil.getPatternPosition(this.typeNumber);\n\t\tpos = pos || '';\n\t\tfor (var i = 0; i < pos.length; i++) {\n\t\t\n\t\t\tfor (var j = 0; j < pos.length; j++) {\n\t\t\t\n\t\t\t\tvar row = pos[i];\n\t\t\t\tvar col = pos[j];\n\t\t\t\t\n\t\t\t\tif (this.modules[row][col] != null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var r = -2; r <= 2; r++) {\n\t\t\t\t\n\t\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\t\t\t\t\t\n\t\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2 \n\t\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\tsetupTypeNumber : function(test) {\n\t\n\t\tvar bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n\t\n\t\tfor (var i = 0; i < 18; i++) {\n\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t\t}\n\t\n\t\tfor (var i = 0; i < 18; i++) {\n\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t\t}\n\t},\n\t\n\tsetupTypeInfo : function(test, maskPattern) {\n\t\n\t\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\t\tvar bits = QRUtil.getBCHTypeInfo(data);\n\t\n\t\t// vertical\t\t\n\t\tfor (var i = 0; i < 15; i++) {\n\t\n\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\n\t\t\tif (i < 6) {\n\t\t\t\tthis.modules[i][8] = mod;\n\t\t\t} else if (i < 8) {\n\t\t\t\tthis.modules[i + 1][8] = mod;\n\t\t\t} else {\n\t\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n\t\t\t}\n\t\t}\n\t\n\t\t// horizontal\n\t\tfor (var i = 0; i < 15; i++) {\n\t\n\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\t\n\t\t\tif (i < 8) {\n\t\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n\t\t\t} else if (i < 9) {\n\t\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n\t\t\t} else {\n\t\t\t\tthis.modules[8][15 - i - 1] = mod;\n\t\t\t}\n\t\t}\n\t\n\t\t// fixed module\n\t\tthis.modules[this.moduleCount - 8][8] = (!test);\n\t\n\t},\n\t\n\tmapData : function(data, maskPattern) {\n\t\t\n\t\tvar inc = -1;\n\t\tvar row = this.moduleCount - 1;\n\t\tvar bitIndex = 7;\n\t\tvar byteIndex = 0;\n\t\t\n\t\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\t\n\t\t\tif (col == 6) col--;\n\t\n\t\t\twhile (true) {\n\t\n\t\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\t\t\n\t\t\t\t\tif (this.modules[row][col - c] == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar dark = false;\n\t\n\t\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar mask = QRUtil.getMask(maskPattern, row, col - c);\n\t\n\t\t\t\t\t\tif (mask) {\n\t\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\t\tbitIndex--;\n\t\n\t\t\t\t\t\tif (bitIndex == -1) {\n\t\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\trow += inc;\n\t\n\t\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\t\trow -= inc;\n\t\t\t\t\tinc = -inc;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\n\t\n\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\t\n\tvar buffer = new QRBitBuffer();\n\t\n\tfor (var i = 0; i < dataList.length; i++) {\n\t\tvar data = dataList[i];\n\t\tbuffer.put(data.mode, 4);\n\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber) );\n\t\tdata.write(buffer);\n\t}\n\n\t// calc num max data.\n\tvar totalDataCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t}\n\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\tthrow new Error(\"code length overflow. (\"\n\t\t\t+ buffer.getLengthInBits()\n\t\t\t+ \">\"\n\t\t\t+  totalDataCount * 8\n\t\t\t+ \")\");\n\t}\n\n\t// end code\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\tbuffer.put(0, 4);\n\t}\n\n\t// padding\n\twhile (buffer.getLengthInBits() % 8 != 0) {\n\t\tbuffer.putBit(false);\n\t}\n\n\t// padding\n\twhile (true) {\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD0, 8);\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD1, 8);\n\t}\n\n\treturn QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function(buffer, rsBlocks) {\n\n\tvar offset = 0;\n\t\n\tvar maxDcCount = 0;\n\tvar maxEcCount = 0;\n\t\n\tvar dcdata = new QRDataArray(rsBlocks.length);\n\tvar ecdata = new QRDataArray(rsBlocks.length);\n\t\n\tfor (var r = 0; r < rsBlocks.length; r++) {\n\n\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\t\t\n\t\tdcdata[r] = new QRDataArray(dcCount);\n\t\t\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t}\n\t\toffset += dcCount;\n\t\t\n\t\tvar rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n\t\tvar rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\tecdata[r] = new QRDataArray(rsPoly.getLength() - 1);\n\t\tfor (var i = 0; i < ecdata[r].length; i++) {\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\n\t\t}\n\n\t}\n\t\n\tvar totalCodeCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalCodeCount += rsBlocks[i].totalCount;\n\t}\n\n\tvar data = new QRDataArray(totalCodeCount);\n\tvar index = 0;\n\n\tfor (var i = 0; i < maxDcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < dcdata[r].length) {\n\t\t\t\tdata[index++] = dcdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0; i < maxEcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < ecdata[r].length) {\n\t\t\t\tdata[index++] = ecdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn data;\n\n};\n\n//---------------------------------------------------------------------\n// QR8bitByte\n//---------------------------------------------------------------------\nfunction QR8bitByte(data) {\n  this.mode = QRMode.MODE_8BIT_BYTE;\n  this.data = data;\n  var byteArray = [];\n  \n  this.parsedData = bops.from(data);\n}\n\nQR8bitByte.prototype = {\n  getLength: function (buffer) {\n    return this.parsedData.length;\n  },\n  write: function (buffer) {\n    for (var i = 0, l = this.parsedData.length; i < l; i++) {\n      buffer.put(this.parsedData[i], 8);\n    }\n  }\n};\n\n\n//---------------------------------------------------------------------\n// QRMode\n//---------------------------------------------------------------------\n\nvar QRMode = {\n\tMODE_NUMBER :\t\t1 << 0,\n\tMODE_ALPHA_NUM : \t1 << 1,\n\tMODE_8BIT_BYTE : \t1 << 2,\n\tMODE_KANJI :\t\t1 << 3\n};\n\n//---------------------------------------------------------------------\n// QRErrorCorrectLevel\n//---------------------------------------------------------------------\n//exported\n\nvar QRErrorCorrectLevel = exports.QRErrorCorrectLevel = {\n\tL : 1,\n\tM : 0,\n\tQ : 3,\n\tH : 2\n};\n\n//---------------------------------------------------------------------\n// QRMaskPattern\n//---------------------------------------------------------------------\n\nvar QRMaskPattern =  {\n\tPATTERN000 : 0,\n\tPATTERN001 : 1,\n\tPATTERN010 : 2,\n\tPATTERN011 : 3,\n\tPATTERN100 : 4,\n\tPATTERN101 : 5,\n\tPATTERN110 : 6,\n\tPATTERN111 : 7\n};\n\n//---------------------------------------------------------------------\n// QRUtil\n//---------------------------------------------------------------------\n \nvar QRUtil = {\n\n    PATTERN_POSITION_TABLE : [\n\t    [],\n\t    [6, 18],\n\t    [6, 22],\n\t    [6, 26],\n\t    [6, 30],\n\t    [6, 34],\n\t    [6, 22, 38],\n\t    [6, 24, 42],\n\t    [6, 26, 46],\n\t    [6, 28, 50],\n\t    [6, 30, 54],\t\t\n\t    [6, 32, 58],\n\t    [6, 34, 62],\n\t    [6, 26, 46, 66],\n\t    [6, 26, 48, 70],\n\t    [6, 26, 50, 74],\n\t    [6, 30, 54, 78],\n\t    [6, 30, 56, 82],\n\t    [6, 30, 58, 86],\n\t    [6, 34, 62, 90],\n\t    [6, 28, 50, 72, 94],\n\t    [6, 26, 50, 74, 98],\n\t    [6, 30, 54, 78, 102],\n\t    [6, 28, 54, 80, 106],\n\t    [6, 32, 58, 84, 110],\n\t    [6, 30, 58, 86, 114],\n\t    [6, 34, 62, 90, 118],\n\t    [6, 26, 50, 74, 98, 122],\n\t    [6, 30, 54, 78, 102, 126],\n\t    [6, 26, 52, 78, 104, 130],\n\t    [6, 30, 56, 82, 108, 134],\n\t    [6, 34, 60, 86, 112, 138],\n\t    [6, 30, 58, 86, 114, 142],\n\t    [6, 34, 62, 90, 118, 146],\n\t    [6, 30, 54, 78, 102, 126, 150],\n\t    [6, 24, 50, 76, 102, 128, 154],\n\t    [6, 28, 54, 80, 106, 132, 158],\n\t    [6, 32, 58, 84, 110, 136, 162],\n\t    [6, 26, 54, 82, 110, 138, 166],\n\t    [6, 30, 58, 86, 114, 142, 170]\n    ],\n\n    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\n\n    getBCHTypeInfo : function(data) {\n\t    var d = data << 10;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\n\t    }\n\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n\n    getBCHTypeNumber : function(data) {\n\t    var d = data << 12;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\n\t    }\n\t    return (data << 12) | d;\n    },\n\n    getBCHDigit : function(data) {\n\n\t    var digit = 0;\n\n\t    while (data != 0) {\n\t\t    digit++;\n\t\t    data >>>= 1;\n\t    }\n\n\t    return digit;\n    },\n\n    getPatternPosition : function(typeNumber) {\n\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n\n    getMask : function(maskPattern, i, j) {\n\t    \n\t    switch (maskPattern) {\n\t\t    \n\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\n\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\n\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\n\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\n\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n\t    default :\n\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\n\t    }\n    },\n\n    getErrorCorrectPolynomial : function(errorCorrectLength) {\n\n\t    var a = new QRPolynomial([1], 0);\n\n\t    for (var i = 0; i < errorCorrectLength; i++) {\n\t\t    a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0) );\n\t    }\n\n\t    return a;\n    },\n\n    getLengthInBits : function(mode, type) {\n\n\t    if (1 <= type && type < 10) {\n\n\t\t    // 1 - 9\n\n\t\t    switch(mode) {\n\t\t    case QRMode.MODE_NUMBER \t: return 10;\n\t\t    case QRMode.MODE_ALPHA_NUM \t: return 9;\n\t\t    case QRMode.MODE_8BIT_BYTE\t: return 8;\n\t\t    case QRMode.MODE_KANJI  \t: return 8;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 27) {\n\n\t\t    // 10 - 26\n\n\t\t    switch(mode) {\n\t\t    case QRMode.MODE_NUMBER \t: return 12;\n\t\t    case QRMode.MODE_ALPHA_NUM \t: return 11;\n\t\t    case QRMode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case QRMode.MODE_KANJI  \t: return 10;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 41) {\n\n\t\t    // 27 - 40\n\n\t\t    switch(mode) {\n\t\t    case QRMode.MODE_NUMBER \t: return 14;\n\t\t    case QRMode.MODE_ALPHA_NUM\t: return 13;\n\t\t    case QRMode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case QRMode.MODE_KANJI  \t: return 12;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else {\n\t\t    throw new Error(\"type:\" + type);\n\t    }\n    },\n\n    getLostPoint : function(qrCode) {\n\t    \n\t    var moduleCount = qrCode.getModuleCount();\n\t    \n\t    var lostPoint = 0;\n\t    \n\t    // LEVEL1\n\t    \n\t    for (var row = 0; row < moduleCount; row++) {\n\n\t\t    for (var col = 0; col < moduleCount; col++) {\n\n\t\t\t    var sameCount = 0;\n\t\t\t    var dark = qrCode.isDark(row, col);\n\n\t\t\t\tfor (var r = -1; r <= 1; r++) {\n\n\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\n\t\t\t\t\t    continue;\n\t\t\t\t    }\n\n\t\t\t\t    for (var c = -1; c <= 1; c++) {\n\n\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (r == 0 && c == 0) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\n\t\t\t\t\t\t    sameCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t    }\n\n\t\t\t    if (sameCount > 5) {\n\t\t\t\t    lostPoint += (3 + sameCount - 5);\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL2\n\n\t    for (var row = 0; row < moduleCount - 1; row++) {\n\t\t    for (var col = 0; col < moduleCount - 1; col++) {\n\t\t\t    var count = 0;\n\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\n\t\t\t    if (count == 0 || count == 4) {\n\t\t\t\t    lostPoint += 3;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL3\n\n\t    for (var row = 0; row < moduleCount; row++) {\n\t\t    for (var col = 0; col < moduleCount - 6; col++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount - 6; row++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL4\n\t    \n\t    var darkCount = 0;\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\t\t    if (qrCode.isDark(row, col) ) {\n\t\t\t\t    darkCount++;\n\t\t\t    }\n\t\t    }\n\t    }\n\t    \n\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t    lostPoint += ratio * 10;\n\n\t    return lostPoint;\t\t\n    }\n\n};\n\n\n//---------------------------------------------------------------------\n// QRMath\n//---------------------------------------------------------------------\n\nvar QRMath = {\n\n\tglog : function(n) {\n\t\n\t\tif (n < 1) {\n\t\t\tthrow new Error(\"glog(\" + n + \")\");\n\t\t}\n\t\t\n\t\treturn QRMath.LOG_TABLE[n];\n\t},\n\t\n\tgexp : function(n) {\n\t\n\t\twhile (n < 0) {\n\t\t\tn += 255;\n\t\t}\n\t\n\t\twhile (n >= 256) {\n\t\t\tn -= 255;\n\t\t}\n\t\n\t\treturn QRMath.EXP_TABLE[n];\n\t},\n\t\n\tEXP_TABLE : new Array(256),\n\t\n\tLOG_TABLE : new Array(256)\n\n};\n\t\nfor (var i = 0; i < 8; i++) {\n\tQRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n\t\t^ QRMath.EXP_TABLE[i - 5]\n\t\t^ QRMath.EXP_TABLE[i - 6]\n\t\t^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\n}\n\n//---------------------------------------------------------------------\n// QRPolynomial\n//---------------------------------------------------------------------\n\nfunction QRPolynomial(num, shift) {\n\n\tif (num.length == undefined) {\n\t\tthrow new Error(num.length + \"/\" + shift);\n\t}\n\n\tvar offset = 0;\n\n\twhile (offset < num.length && num[offset] == 0) {\n\t\toffset++;\n\t}\n\n\tthis.num = new Array(num.length - offset + shift);\n\tfor (var i = 0; i < num.length - offset; i++) {\n\t\tthis.num[i] = num[i + offset];\n\t}\n}\n\nQRPolynomial.prototype = {\n\n\tget : function(index) {\n\t\treturn this.num[index];\n\t},\n\t\n\tgetLength : function() {\n\t\treturn this.num.length;\n\t},\n\t\n\tmultiply : function(e) {\n\t\n\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\tnum[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i) ) + QRMath.glog(e.get(j) ) );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new QRPolynomial(num, 0);\n\t},\n\t\n\tmod : function(e) {\n\t\n\t\tif (this.getLength() - e.getLength() < 0) {\n\t\t\treturn this;\n\t\t}\n\t\n\t\tvar ratio = QRMath.glog(this.get(0) ) - QRMath.glog(e.get(0) );\n\t\n\t\tvar num = new Array(this.getLength() );\n\t\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tnum[i] = this.get(i);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\tnum[i] ^= QRMath.gexp(QRMath.glog(e.get(i) ) + ratio);\n\t\t}\n\t\n\t\t// recursive call\n\t\treturn new QRPolynomial(num, 0).mod(e);\n\t}\n};\n\n//---------------------------------------------------------------------\n// QRRSBlock\n//---------------------------------------------------------------------\n\nfunction QRRSBlock(totalCount, dataCount) {\n\tthis.totalCount = totalCount;\n\tthis.dataCount  = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [\n// L\n// M\n// Q\n// H\n\n// 1\n[1, 26, 19],\n[1, 26, 16],\n[1, 26, 13],\n[1, 26, 9],\n// 2\n[1, 44, 34],\n[1, 44, 28],\n[1, 44, 22],\n[1, 44, 16],\n// 3\n[1, 70, 55],\n[1, 70, 44],\n[2, 35, 17],\n[2, 35, 13],\n// 4\t\t\n[1, 100, 80],\n[2, 50, 32],\n[2, 50, 24],\n[4, 25, 9],\n// 5\n[1, 134, 108],\n[2, 67, 43],\n[2, 33, 15, 2, 34, 16],\n[2, 33, 11, 2, 34, 12],\n// 6\n[2, 86, 68],\n[4, 43, 27],\n[4, 43, 19],\n[4, 43, 15],\n// 7\t\t\n[2, 98, 78],\n[4, 49, 31],\n[2, 32, 14, 4, 33, 15],\n[4, 39, 13, 1, 40, 14],\n// 8\n[2, 121, 97],\n[2, 60, 38, 2, 61, 39],\n[4, 40, 18, 2, 41, 19],\n[4, 40, 14, 2, 41, 15],\n// 9\n[2, 146, 116],\n[3, 58, 36, 2, 59, 37],\n[4, 36, 16, 4, 37, 17],\n[4, 36, 12, 4, 37, 13],\n// 10\t\t\n[2, 86, 68, 2, 87, 69],\n[4, 69, 43, 1, 70, 44],\n[6, 43, 19, 2, 44, 20],\n[6, 43, 15, 2, 44, 16]\n//NOTE added by Ryan Day.to make greater than version 10 qrcodes\n// this table starts on page 40 of the spec PDF. google ISO/IEC 18004\n// 11\n,[4,101,81]\n,[1,80,50,4,81,51]\n,[4,50,22,4,51,23]\n,[3,36,12,8,37,13]\n//12\n,[2,116,92,2,117,93]\n,[6,58,36,2,59,37]\n,[4,46,20,6,47,21]\n,[7,42,14,4,43,15]\n//13\n,[4,133,107]\n,[8,59,37,1,60,38]\n,[8,44,20,4,45,21]\n,[12,33,11,4,34,12]\n//14\n,[3,145,115,1,146,116]\n,[4,64,40,5,65,41]\n,[11,36,16,5,37,17]\n,[11,36,12,5,37,13]\n//15\n,[5,109,87,1,110,88]\n,[5,65,41,5,66,42]\n,[5,54,24,7,55,25]\n,[11,36,12,7,37,13]\n//16\n,[5,122,98,1,123,99]\n,[7,73,45,3,74,46]\n,[15,43,19,2,44,20]\n,[3,45,15,13,46,16]\n//17\n,[1,135,107,5,136,108]\n,[10,74,46,1,75,47]\n,[1,50,22,15,51,23]\n,[2,42,14,17,43,15]\n//18\n,[5,150,120,1,151,121]\n,[9,69,43,4,70,44]\n,[17,50,22,1,51,23]\n,[2,42,14,19,43,15]\n//19\n,[3,141,113,4,142,114]\n,[3,70,44,11,71,45]\n,[17,47,21,4,48,22]\n,[9,39,13,16,40,14]\n//20\n,[3,135,107,5,136,108]\n,[3,67,41,13,68,42]\n,[15,54,24,5,55,25]\n,[15,43,15,10,44,16]\n//21\n,[4,144,116,4,145,117]\n,[17,68,42]\n,[17,50,22,6,51,23]\n,[19,46,16,6,47,17]\n//22\n,[2,139,111,7,140,112]\n,[17,74,46]\n,[7,54,24,16,55,25]\n,[34,37,13]\n//23\n,[4,151,121,5,152,122]\n,[4,75,47,14,76,48]\n,[11,54,24,14,55,25]\n,[16,45,15,14,46,16]\n//24\n,[6,147,117,4,148,118]\n,[6,73,45,14,74,46]\n,[11,54,24,16,55,25]\n,[30,46,16,2,47,17]\n//25\n,[8,132,106,4,133,107]\n,[8,75,47,13,76,48]\n,[7,54,24,22,55,25]\n,[22,45,15,13,46,16]\n//26\n,[10,142,114,2,143,115]\n,[19,74,46,4,75,47]\n,[28,50,22,6,51,23]\n,[33,46,16,4,47,17]\n//27\n,[8,152,122,4,153,123]\n,[22,73,45,3,74,46]\n,[8,53,23,26,54,24]\n,[12,45,15,28,46,16]\n//28\n,[3,147,117,10,148,118]\n,[3,73,45,23,74,46]\n,[4,54,24,31,55,25]\n,[11,45,15,31,46,16]\n//29\n,[7,146,116,7,147,117]\n,[21,73,45,7,74,46]\n,[1,53,23,37,54,24]\n,[19,45,15,26,46,16]\n//30\n,[5,145,115,10,146,116]\n,[19,75,47,10,76,48]\n,[15,54,24,25,55,25]\n,[23,45,15,25,46,16]\n//31\n,[13,145,115,3,146,116]\n,[2,74,46,29,75,47]\n,[42,54,24,1,55,25]\n,[23,45,15,28,46,16]\n//32\n,[17,145,115]\n,[10,74,46,23,75,47]\n,[10,54,24,35,55,25]\n,[19,45,15,35,46,16]\n//33\n,[17,145,115,1,146,116]\n,[14,74,46,21,75,47]\n,[29,54,24,19,55,25]\n,[11,45,15,46,46,16]\n//34\n,[13,145,115,6,146,116]\n,[14,74,46,23,75,47]\n,[44,54,24,7,55,25]\n,[59,46,16,1,47,17]\n//35\n,[12,151,121,7,152,122]\n,[12,75,47,26,76,48]\n,[39,54,24,14,55,25]\n,[22,45,15,41,46,16]\n//36\n,[6,151,121,14,152,122]\n,[6,75,47,34,76,48]\n,[46,54,24,10,55,25]\n,[2,45,15,64,46,16]\n//37\n,[17,152,122,4,153,123]\n,[29,74,46,14,75,47]\n,[49,54,24,10,55,25]\n,[24,45,15,46,46,16]\n//38\n,[4,152,122,18,153,123]\n,[13,74,46,32,75,47]\n,[48,54,24,14,55,25]\n,[42,45,15,32,46,16]\n//39\n,[20,147,117,4,148,118]\n,[40,75,47,7,76,48]\n,[43,54,24,22,55,25]\n,[10,45,15,67,46,16]\n//40\n,[19,148,118,6,149,119]\n,[18,75,47,31,76,48]\n,[34,54,24,34,55,25]\n,[20,45,15,61,46,16]\t\n];\n\nQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\n\t\n\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\t\n\tif (rsBlock == undefined) {\n\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n\t}\n\n\tvar length = rsBlock.length / 3;\n\t\n\tvar list = new Array();\n\t\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar count = rsBlock[i * 3 + 0];\n\t\tvar totalCount = rsBlock[i * 3 + 1];\n\t\tvar dataCount  = rsBlock[i * 3 + 2];\n\n\t\tfor (var j = 0; j < count; j++) {\n\t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\n\t\t}\n\t}\n\t\n\treturn list;\n}\n\nQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\n\n\tswitch(errorCorrectLevel) {\n\tcase QRErrorCorrectLevel.L :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\tcase QRErrorCorrectLevel.M :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\tcase QRErrorCorrectLevel.Q :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\tcase QRErrorCorrectLevel.H :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\tdefault :\n\t\treturn undefined;\n\t}\n}\n\n//---------------------------------------------------------------------\n// QRBitBuffer\n//---------------------------------------------------------------------\n\nfunction QRBitBuffer() {\n\tthis.buffer = new Array();\n\tthis.length = 0;\n}\n\nQRBitBuffer.prototype = {\n\n\tget : function(index) {\n\t\tvar bufIndex = Math.floor(index / 8);\n\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n\t},\n\t\n\tput : function(num, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n\t\t}\n\t},\n\t\n\tgetLengthInBits : function() {\n\t\treturn this.length;\n\t},\n\t\n\tputBit : function(bit) {\n\t\n\t\tvar bufIndex = Math.floor(this.length / 8);\n\t\tif (this.buffer.length <= bufIndex) {\n\t\t\tthis.buffer.push(0);\n\t\t}\n\t\n\t\tif (bit) {\n\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\n\t\t}\n\t\n\t\tthis.length++;\n\t}\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/lib/qrcode.js\n ** module id = 105\n ** module chunks = 4 5\n **/","module.exports = to_utf8\n\nvar out = []\n  , col = []\n  , fcc = String.fromCharCode\n  , mask = [0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01]\n  , unmask = [\n      0x00\n    , 0x01\n    , 0x02 | 0x01\n    , 0x04 | 0x02 | 0x01\n    , 0x08 | 0x04 | 0x02 | 0x01\n    , 0x10 | 0x08 | 0x04 | 0x02 | 0x01\n    , 0x20 | 0x10 | 0x08 | 0x04 | 0x02 | 0x01\n    , 0x40 | 0x20 | 0x10 | 0x08 | 0x04 | 0x02 | 0x01\n  ]\n\nfunction to_utf8(bytes, start, end) {\n  start = start === undefined ? 0 : start\n  end = end === undefined ? bytes.length : end\n\n  var idx = 0\n    , hi = 0x80\n    , collecting = 0\n    , pos\n    , by\n\n  col.length =\n  out.length = 0\n\n  while(idx < bytes.length) {\n    by = bytes[idx]\n    if(!collecting && by & hi) {\n      pos = find_pad_position(by)\n      collecting += pos\n      if(pos < 8) {\n        col[col.length] = by & unmask[6 - pos]\n      }\n    } else if(collecting) {\n      col[col.length] = by & unmask[6]\n      --collecting\n      if(!collecting && col.length) {\n        out[out.length] = fcc(reduced(col, pos))\n        col.length = 0\n      }\n    } else { \n      out[out.length] = fcc(by)\n    }\n    ++idx\n  }\n  if(col.length && !collecting) {\n    out[out.length] = fcc(reduced(col, pos))\n    col.length = 0\n  }\n  return out.join('')\n}\n\nfunction find_pad_position(byt) {\n  for(var i = 0; i < 7; ++i) {\n    if(!(byt & mask[i])) {\n      break\n    }\n  }\n  return i\n}\n\nfunction reduced(list) {\n  var out = 0\n  for(var i = 0, len = list.length; i < len; ++i) {\n    out |= list[i] << ((len - i - 1) * 6)\n  }\n  return out\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/~/to-utf8/index.js\n ** module id = 106\n ** module chunks = 4 5\n **/","module.exports = copy\n\nvar slice = [].slice\n\nfunction copy(source, target, target_start, source_start, source_end) {\n  target_start = arguments.length < 3 ? 0 : target_start\n  source_start = arguments.length < 4 ? 0 : source_start\n  source_end = arguments.length < 5 ? source.length : source_end\n\n  if(source_end === source_start) {\n    return\n  }\n\n  if(target.length === 0 || source.length === 0) {\n    return\n  }\n\n  if(source_end > source.length) {\n    source_end = source.length\n  }\n\n  if(target.length - target_start < source_end - source_start) {\n    source_end = target.length - target_start + start\n  }\n\n  if(source.buffer !== target.buffer) {\n    return fast_copy(source, target, target_start, source_start, source_end)\n  }\n  return slow_copy(source, target, target_start, source_start, source_end)\n}\n\nfunction fast_copy(source, target, target_start, source_start, source_end) {\n  var len = (source_end - source_start) + target_start\n\n  for(var i = target_start, j = source_start;\n      i < len;\n      ++i,\n      ++j) {\n    target[i] = source[j]\n  }\n}\n\nfunction slow_copy(from, to, j, i, jend) {\n  // the buffers could overlap.\n  var iend = jend + i\n    , tmp = new Uint8Array(slice.call(from, i, iend))\n    , x = 0\n\n  for(; i < iend; ++i, ++x) {\n    to[j++] = tmp[x]\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/typedarray/copy.js\n ** module id = 107\n ** module chunks = 4 5\n **/","module.exports = function(size) {\n  return new Uint8Array(size)\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/typedarray/create.js\n ** module id = 108\n ** module chunks = 4 5\n **/","module.exports = from\n\nvar base64 = require('base64-js')\n\nvar decoders = {\n    hex: from_hex\n  , utf8: from_utf\n  , base64: from_base64\n}\n\nfunction from(source, encoding) {\n  if(Array.isArray(source)) {\n    return new Uint8Array(source)\n  }\n\n  return decoders[encoding || 'utf8'](source)\n}\n\nfunction from_hex(str) {\n  var size = str.length / 2\n    , buf = new Uint8Array(size)\n    , character = ''\n\n  for(var i = 0, len = str.length; i < len; ++i) {\n    character += str.charAt(i)\n\n    if(i > 0 && (i % 2) === 1) {\n      buf[i>>>1] = parseInt(character, 16)\n      character = '' \n    }\n  }\n\n  return buf \n}\n\nfunction from_utf(str) {\n  var bytes = []\n    , tmp\n    , ch\n\n  for(var i = 0, len = str.length; i < len; ++i) {\n    ch = str.charCodeAt(i)\n    if(ch & 0x80) {\n      tmp = encodeURIComponent(str.charAt(i)).substr(1).split('%')\n      for(var j = 0, jlen = tmp.length; j < jlen; ++j) {\n        bytes[bytes.length] = parseInt(tmp[j], 16)\n      }\n    } else {\n      bytes[bytes.length] = ch \n    }\n  }\n\n  return new Uint8Array(bytes)\n}\n\nfunction from_base64(str) {\n  return new Uint8Array(base64.toByteArray(str)) \n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/typedarray/from.js\n ** module id = 109\n ** module chunks = 4 5\n **/","\nmodule.exports = function(buffer) {\n  return buffer instanceof Uint8Array;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/typedarray/is.js\n ** module id = 110\n ** module chunks = 4 5\n **/","module.exports = join\n\nfunction join(targets, hint) {\n  if(!targets.length) {\n    return new Uint8Array(0)\n  }\n\n  var len = hint !== undefined ? hint : get_length(targets)\n    , out = new Uint8Array(len)\n    , cur = targets[0]\n    , curlen = cur.length\n    , curidx = 0\n    , curoff = 0\n    , i = 0\n\n  while(i < len) {\n    if(curoff === curlen) {\n      curoff = 0\n      ++curidx\n      cur = targets[curidx]\n      curlen = cur && cur.length\n      continue\n    }\n    out[i++] = cur[curoff++] \n  }\n\n  return out\n}\n\nfunction get_length(targets) {\n  var size = 0\n  for(var i = 0, len = targets.length; i < len; ++i) {\n    size += targets[i].byteLength\n  }\n  return size\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/typedarray/join.js\n ** module id = 111\n ** module chunks = 4 5\n **/","module.exports = {\n    readUInt8:      read_uint8\n  , readInt8:       read_int8\n  , readUInt16LE:   read_uint16_le\n  , readUInt32LE:   read_uint32_le\n  , readInt16LE:    read_int16_le\n  , readInt32LE:    read_int32_le\n  , readFloatLE:    read_float_le\n  , readDoubleLE:   read_double_le\n  , readUInt16BE:   read_uint16_be\n  , readUInt32BE:   read_uint32_be\n  , readInt16BE:    read_int16_be\n  , readInt32BE:    read_int32_be\n  , readFloatBE:    read_float_be\n  , readDoubleBE:   read_double_be\n}\n\nvar map = require('./mapped.js')\n\nfunction read_uint8(target, at) {\n  return target[at]\n}\n\nfunction read_int8(target, at) {\n  var v = target[at];\n  return v < 0x80 ? v : v - 0x100\n}\n\nfunction read_uint16_le(target, at) {\n  var dv = map.get(target);\n  return dv.getUint16(at + target.byteOffset, true)\n}\n\nfunction read_uint32_le(target, at) {\n  var dv = map.get(target);\n  return dv.getUint32(at + target.byteOffset, true)\n}\n\nfunction read_int16_le(target, at) {\n  var dv = map.get(target);\n  return dv.getInt16(at + target.byteOffset, true)\n}\n\nfunction read_int32_le(target, at) {\n  var dv = map.get(target);\n  return dv.getInt32(at + target.byteOffset, true)\n}\n\nfunction read_float_le(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat32(at + target.byteOffset, true)\n}\n\nfunction read_double_le(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat64(at + target.byteOffset, true)\n}\n\nfunction read_uint16_be(target, at) {\n  var dv = map.get(target);\n  return dv.getUint16(at + target.byteOffset, false)\n}\n\nfunction read_uint32_be(target, at) {\n  var dv = map.get(target);\n  return dv.getUint32(at + target.byteOffset, false)\n}\n\nfunction read_int16_be(target, at) {\n  var dv = map.get(target);\n  return dv.getInt16(at + target.byteOffset, false)\n}\n\nfunction read_int32_be(target, at) {\n  var dv = map.get(target);\n  return dv.getInt32(at + target.byteOffset, false)\n}\n\nfunction read_float_be(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat32(at + target.byteOffset, false)\n}\n\nfunction read_double_be(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat64(at + target.byteOffset, false)\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/typedarray/read.js\n ** module id = 112\n ** module chunks = 4 5\n **/","module.exports = subarray\n\nfunction subarray(buf, from, to) {\n  return buf.subarray(from || 0, to || buf.length)\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/typedarray/subarray.js\n ** module id = 113\n ** module chunks = 4 5\n **/","module.exports = to\n\nvar base64 = require('base64-js')\n  , toutf8 = require('to-utf8')\n\nvar encoders = {\n    hex: to_hex\n  , utf8: to_utf\n  , base64: to_base64\n}\n\nfunction to(buf, encoding) {\n  return encoders[encoding || 'utf8'](buf)\n}\n\nfunction to_hex(buf) {\n  var str = ''\n    , byt\n\n  for(var i = 0, len = buf.length; i < len; ++i) {\n    byt = buf[i]\n    str += ((byt & 0xF0) >>> 4).toString(16)\n    str += (byt & 0x0F).toString(16)\n  }\n\n  return str\n}\n\nfunction to_utf(buf) {\n  return toutf8(buf)\n}\n\nfunction to_base64(buf) {\n  return base64.fromByteArray(buf)\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/typedarray/to.js\n ** module id = 114\n ** module chunks = 4 5\n **/","module.exports = {\n    writeUInt8:      write_uint8\n  , writeInt8:       write_int8\n  , writeUInt16LE:   write_uint16_le\n  , writeUInt32LE:   write_uint32_le\n  , writeInt16LE:    write_int16_le\n  , writeInt32LE:    write_int32_le\n  , writeFloatLE:    write_float_le\n  , writeDoubleLE:   write_double_le\n  , writeUInt16BE:   write_uint16_be\n  , writeUInt32BE:   write_uint32_be\n  , writeInt16BE:    write_int16_be\n  , writeInt32BE:    write_int32_be\n  , writeFloatBE:    write_float_be\n  , writeDoubleBE:   write_double_be\n}\n\nvar map = require('./mapped.js')\n\nfunction write_uint8(target, value, at) {\n  return target[at] = value\n}\n\nfunction write_int8(target, value, at) {\n  return target[at] = value < 0 ? value + 0x100 : value\n}\n\nfunction write_uint16_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint16(at + target.byteOffset, value, true)\n}\n\nfunction write_uint32_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint32(at + target.byteOffset, value, true)\n}\n\nfunction write_int16_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt16(at + target.byteOffset, value, true)\n}\n\nfunction write_int32_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt32(at + target.byteOffset, value, true)\n}\n\nfunction write_float_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat32(at + target.byteOffset, value, true)\n}\n\nfunction write_double_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat64(at + target.byteOffset, value, true)\n}\n\nfunction write_uint16_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint16(at + target.byteOffset, value, false)\n}\n\nfunction write_uint32_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint32(at + target.byteOffset, value, false)\n}\n\nfunction write_int16_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt16(at + target.byteOffset, value, false)\n}\n\nfunction write_int32_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt32(at + target.byteOffset, value, false)\n}\n\nfunction write_float_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat32(at + target.byteOffset, value, false)\n}\n\nfunction write_double_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat64(at + target.byteOffset, value, false)\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qrcode-canvas/~/bops/typedarray/write.js\n ** module id = 115\n ** module chunks = 4 5\n **/","<style>\n#quiz-results .main-wrapper {\n  margin:16px auto;\n  box-sizing: content-box;\n}\n#quiz-results .qrcode-wrapper {\n  width: 300px;\n  height: 300px;\n  margin: 0 auto\n}\n\n.latest-quiz .title {\n  color: #3F51B5;\n  padding-left: 16px;\n  margin: 16px 0 8px 0\n}\n\n.latest-quiz .time {\n  padding-left: 16px;\n  color: #616161;\n  margin: 0 0 8px 0\n}\n\n.latest-quiz .startTime, .latest-quiz .finishTime {\n  padding-left: 16px;\n  color: #9e9e9e\n}\n\n.latest-quiz .finished {\n  padding-left: 16px;\n  color: #009688;\n  margin: 0 0 8px 0\n}\n\n.latest-quiz .ongoing {\n  padding-left: 16px;\n  color: #E91E63;\n  margin: 0 0 8px 0\n}\n\n.quickquiz-card {\n  cursor: pointer;\n  padding: 16px;\n  background: #fff;\n  border: 1px solid rgba(0,0,0,0.1);\n  box-shadow: 0 1px 4px rgba(0,0,0,0.05);\n}\n\n.quickquiz-card:active {\n  background: #eeeeee\n}\n\n.quickquiz-card .title {\n  color: #212121;\n  font-size: 20px\n}\n\n.quickquiz-card .finished {\n  color: #FF9800;\n  font-size: 13px;\n  padding-left: 8px\n}\n\n.quickquiz-card .time {\n  color: #616161;\n  font-size: 13px;\n}\n\n.quickquiz-card .date {\n  color: #999999;\n  font-size: 13px\n}\n</style>\n<template>\n  <div id=\"quiz-results\">\n    <div style=\"padding-top:16px\">\n      <div class=\"main-wrapper flex-column\" style=\"background-color:#fff;box-shadow: 0 1px 6px rgba(0,0,0,0.35);\">\n        <p style=\"border-bottom:1px solid #eee;padding:8px 0 8px 0;margin:0;text-align:center;color:#aaa\">最新小測</p>\n\n        <div class=\"latest-quiz flex-row\">\n\n          <div class=\"flex-50\" style=\"padding:16px 0 0 16px\">\n            <div v-if=\"myQuickquizs[0]\" class=\"flex-column\">\n              <h4 class=\"title\">{{myQuickquizs[0].title}}</h4>\n              <h6 class=\"time flex-row\" style=\"align-items:center\"><i class=\"material-icons\" style=\"margin-right:8px;font-size:20px\">timer</i>{{myQuickquizs[0].time}}分鐘</h6>\n              <h6 class=\"finished flex-row\" style=\"align-items:center\"><i class=\"material-icons\" style=\"margin-right:8px;font-size:20px\">create</i>{{myQuickquizs[0].finished | finished}}</h6>\n              <span class=\"startTime\">開始於: {{myQuickquizs[0].startTime | date 'YYYY[年]M[月]DD[日] h:mm a'}}</span>\n              <span class=\"finishTime\" v-if=\"myQuickquizs[0].finishTime\">結束于: {{myQuickquizs[0].finishTime | date 'YYYY[年]M[月]DD[日] h:mm a'}}</span>\n              <div class=\"flex-column flex-start\" style=\"margin:16px 0 16px 16px\">\n                <mdl-button accent raised style=\"margin-bottom:8px\" @click=\"endLatestQuickQuiz()\" v-show=\"!myQuickquizs[0].finished\">結束測驗</mdl-button>\n                <mdl-button primary raised v-link=\"{ name: 'quiz-detail', params: { quickquiz_id: myQuickquizs[0]._id }}\">查看詳情</mdl-button>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"flex flex-50\">\n            <canvas id=\"qrcode-canvas\" class=\"qrcode-wrapper\"></canvas>\n          </div>\n\n        </div>\n      </div>\n      <div>\n        <div class=\"mdl-grid\">\n          <div class=\"mdl-cell mdl-cell--4-col quickquiz-card flex-column\" v-for=\"quickquiz in myQuickquizs\" track-by=\"_id\" v-link=\"{ name: 'quiz-detail', params: { quickquiz_id: quickquiz._id }}\">\n            <div class=\"flex-row flex-baseline\">\n              <span class=\"title\">{{quickquiz.title}}</span>\n              <span class=\"finished\">{{quickquiz.finished | finished}}</span>\n\n            </div>\n            <span class=\"time\">{{quickquiz.time}}分鐘</span>\n\n            <span class=\"date\">{{quickquiz.startTime | date 'YY[年]M[月]DD[日]'}}</span>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport qrcode from 'qrcode-canvas'\nexport default {\n  attached () {\n    this.getMyQuickQuizs()\n  },\n  data () {\n    return {\n      myQuickquizs: []\n    }\n  },\n  components: {\n\n  },\n  methods: {\n    getMyQuickQuizs: function () {\n      this.$http.get('/api/manage-quickquiz/teacher/quickquizs').then(function (response) {\n        if (response.data.length > 0) {\n          this.myQuickquizs = response.data\n          this.generateLatestQuickQuizQrcode(response.data[0]._id)\n        } else {\n          // handle 0 quick-quiz view\n        }\n      }, function (response) {\n        // handle errors\n        console.log(response)\n      })\n    },\n    generateLatestQuickQuizQrcode: function (quickquiz_id) {\n      let qrcodeData = {\n        type: 'quickquiz',\n        id: quickquiz_id\n      }\n\n      var qrcodedraw = new qrcode.QRCodeDraw()\n      qrcodedraw.draw(document.getElementById('qrcode-canvas'), JSON.stringify(qrcodeData), {scale: 10}, function (error, canvas) {\n        if (error) {\n          return console.log('Error =( ', error)\n        }\n      })\n    },\n    endLatestQuickQuiz: function () {\n      if (this.myQuickquizs[0].finished === false) {\n        let data = {\n          quickquiz_id: this.myQuickquizs[0]._id\n        }\n        this.$http.post('/api/manage-quickquiz/teacher/quickquiz/end', data).then(function (response) {\n          this.myQuickquizs[0].finished = true\n        }, function (response) {\n          // handle errors\n          console.log(response)\n        })\n      }\n    }\n  },\n  filters: {\n    finished: function (value) {\n      if (value === false) {\n        return '未收卷'\n      } else {\n        return '已結束'\n      }\n    }\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Quiz-results.vue?6deefeba\n **/","exports = module.exports = require(\"./../../../node_modules/.npminstall/css-loader/0.23.1/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#quiz-results .main-wrapper{margin:16px auto;box-sizing:content-box}#quiz-results .qrcode-wrapper{width:300px;height:300px;margin:0 auto}.latest-quiz .title{color:#3f51b5;padding-left:16px;margin:16px 0 8px}.latest-quiz .time{padding-left:16px;color:#616161;margin:0 0 8px}.latest-quiz .finishTime,.latest-quiz .startTime{padding-left:16px;color:#9e9e9e}.latest-quiz .finished{padding-left:16px;color:#009688;margin:0 0 8px}.latest-quiz .ongoing{padding-left:16px;color:#e91e63;margin:0 0 8px}.quickquiz-card{cursor:pointer;padding:16px;background:#fff;border:1px solid rgba(0,0,0,.1);box-shadow:0 1px 4px rgba(0,0,0,.05)}.quickquiz-card:active{background:#eee}.quickquiz-card .title{color:#212121;font-size:20px}.quickquiz-card .finished{color:#ff9800;font-size:13px;padding-left:8px}.quickquiz-card .time{color:#616161;font-size:13px}.quickquiz-card .date{color:#999;font-size:13px}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/quickquiz/Quiz-results.vue\"],\"names\":[],\"mappings\":\"AACA,4BACE,iBAAiB,AACjB,sBAAwB,CACzB,AACD,8BACE,YAAa,AACb,aAAc,AACd,aAAc,CACf,AAED,oBACE,cAAe,AACf,kBAAmB,AACnB,iBAAoB,CACrB,AAED,mBACE,kBAAmB,AACnB,cAAe,AACf,cAAiB,CAClB,AAED,iDACE,kBAAmB,AACnB,aAAc,CACf,AAED,uBACE,kBAAmB,AACnB,cAAe,AACf,cAAiB,CAClB,AAED,sBACE,kBAAmB,AACnB,cAAe,AACf,cAAiB,CAClB,AAED,gBACE,eAAgB,AAChB,aAAc,AACd,gBAAiB,AACjB,gCAAkC,AAClC,oCAAuC,CACxC,AAED,uBACE,eAAmB,CACpB,AAED,uBACE,cAAe,AACf,cAAe,CAChB,AAED,0BACE,cAAe,AACf,eAAgB,AAChB,gBAAiB,CAClB,AAED,sBACE,cAAe,AACf,cAAgB,CACjB,AAED,sBACE,WAAe,AACf,cAAe,CAChB\",\"file\":\"Quiz-results.vue\",\"sourcesContent\":[\"\\n#quiz-results .main-wrapper {\\n  margin:16px auto;\\n  box-sizing: content-box;\\n}\\n#quiz-results .qrcode-wrapper {\\n  width: 300px;\\n  height: 300px;\\n  margin: 0 auto\\n}\\n\\n.latest-quiz .title {\\n  color: #3F51B5;\\n  padding-left: 16px;\\n  margin: 16px 0 8px 0\\n}\\n\\n.latest-quiz .time {\\n  padding-left: 16px;\\n  color: #616161;\\n  margin: 0 0 8px 0\\n}\\n\\n.latest-quiz .startTime, .latest-quiz .finishTime {\\n  padding-left: 16px;\\n  color: #9e9e9e\\n}\\n\\n.latest-quiz .finished {\\n  padding-left: 16px;\\n  color: #009688;\\n  margin: 0 0 8px 0\\n}\\n\\n.latest-quiz .ongoing {\\n  padding-left: 16px;\\n  color: #E91E63;\\n  margin: 0 0 8px 0\\n}\\n\\n.quickquiz-card {\\n  cursor: pointer;\\n  padding: 16px;\\n  background: #fff;\\n  border: 1px solid rgba(0,0,0,0.1);\\n  box-shadow: 0 1px 4px rgba(0,0,0,0.05);\\n}\\n\\n.quickquiz-card:active {\\n  background: #eeeeee\\n}\\n\\n.quickquiz-card .title {\\n  color: #212121;\\n  font-size: 20px\\n}\\n\\n.quickquiz-card .finished {\\n  color: #FF9800;\\n  font-size: 13px;\\n  padding-left: 8px\\n}\\n\\n.quickquiz-card .time {\\n  color: #616161;\\n  font-size: 13px;\\n}\\n\\n.quickquiz-card .date {\\n  color: #999999;\\n  font-size: 13px\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/.npminstall/css-loader/0.23.1/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/quickquiz/Quiz-results.vue\n ** module id = 296\n ** module chunks = 4\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Quiz-results.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/.npminstall/vue-style-loader/1.0.0/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Quiz-results.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Quiz-results.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/.npminstall/extract-text-webpack-plugin/1.0.1/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/.npminstall/vue-style-loader/1.0.0/vue-style-loader!./~/.npminstall/css-loader/0.23.1/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/quickquiz/Quiz-results.vue\n ** module id = 310\n ** module chunks = 4\n **/","module.exports = \"<div id=quiz-results> <div style=padding-top:16px> <div class=\\\"main-wrapper flex-column\\\" style=\\\"background-color:#fff;box-shadow: 0 1px 6px rgba(0,0,0,0.35)\\\"> <p style=\\\"border-bottom:1px solid #eee;padding:8px 0 8px 0;margin:0;text-align:center;color:#aaa\\\">最新小測</p> <div class=\\\"latest-quiz flex-row\\\"> <div class=flex-50 style=\\\"padding:16px 0 0 16px\\\"> <div v-if=myQuickquizs[0] class=flex-column> <h4 class=title>{{myQuickquizs[0].title}}</h4> <h6 class=\\\"time flex-row\\\" style=align-items:center><i class=material-icons style=margin-right:8px;font-size:20px>timer</i>{{myQuickquizs[0].time}}分鐘</h6> <h6 class=\\\"finished flex-row\\\" style=align-items:center><i class=material-icons style=margin-right:8px;font-size:20px>create</i>{{myQuickquizs[0].finished | finished}}</h6> <span class=startTime>開始於: {{myQuickquizs[0].startTime | date 'YYYY[年]M[月]DD[日] h:mm a'}}</span> <span class=finishTime v-if=myQuickquizs[0].finishTime>結束于: {{myQuickquizs[0].finishTime | date 'YYYY[年]M[月]DD[日] h:mm a'}}</span> <div class=\\\"flex-column flex-start\\\" style=\\\"margin:16px 0 16px 16px\\\"> <mdl-button accent raised style=margin-bottom:8px @click=endLatestQuickQuiz() v-show=!myQuickquizs[0].finished>結束測驗</mdl-button> <mdl-button primary raised v-link=\\\"{ name: 'quiz-detail', params: { quickquiz_id: myQuickquizs[0]._id }}\\\">查看詳情</mdl-button> </div> </div> </div> <div class=\\\"flex flex-50\\\"> <canvas id=qrcode-canvas class=qrcode-wrapper></canvas> </div> </div> </div> <div> <div class=mdl-grid> <div class=\\\"mdl-cell mdl-cell--4-col quickquiz-card flex-column\\\" v-for=\\\"quickquiz in myQuickquizs\\\" track-by=_id v-link=\\\"{ name: 'quiz-detail', params: { quickquiz_id: quickquiz._id }}\\\"> <div class=\\\"flex-row flex-baseline\\\"> <span class=title>{{quickquiz.title}}</span> <span class=finished>{{quickquiz.finished | finished}}</span> </div> <span class=time>{{quickquiz.time}}分鐘</span> <span class=date>{{quickquiz.startTime | date 'YY[年]M[月]DD[日]'}}</span> </div> </div> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/quickquiz/Quiz-results.vue\n ** module id = 432\n ** module chunks = 4\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/.npminstall/extract-text-webpack-plugin/1.0.1/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Quiz-results.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Quiz-results.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Quiz-results.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/quickquiz/Quiz-results.vue\n ** module id = 454\n ** module chunks = 4\n **/"],"sourceRoot":""}